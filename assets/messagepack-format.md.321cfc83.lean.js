import{_ as s,c as t,o as e,a,b as n,e as o}from"./app.14440598.js";const _='{"title":"MsgPack Format","description":"","frontmatter":{"slug":"messagepack-format","title":"MsgPack Format"},"headers":[{"level":2,"title":"Installing via NuGet","slug":"installing-via-nuget"},{"level":2,"title":"Client Usage","slug":"client-usage"}],"relativePath":"messagepack-format.md","lastUpdated":1634495308422}',c={},p=a('',5),i=n("div",{class:"package-reference-box"},[n("div",{class:"flex"},[n("div",{class:"flex-grow pre-container",style:{background:"#002440"}},[n("pre",{class:"sh copy m-0 p-0 pl-2 py-1 align-middle",style:{background:"#002440"}},[n("p",null,[n("code",null,'<PackageReference Include="ServiceStack.MsgPack" Version="5.*" />')]),o(`
`)])]),n("div",{class:"flex-shrink"},[n("i",{class:"svg-copy inline-block w-8 h-full",title:"copy",onclick:"copy(this)"}),n("b")])]),n("div",{class:"copy-text w-full text-right h-6"})],-1),l=a(`__VP_STATIC_START__<p>After the NuGet Package is added to your Project, enable the MsgPack format in your <code>AppHost</code> with:</p><div class="language-cs"><pre><code>Plugins<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">MsgPackFormat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>The NuGet plugin also includes the <strong>MsgPackServiceClient</strong> client below so you can easily call it from any C# Client.</p><h2 id="client-usage" tabindex="-1">Client Usage <a class="header-anchor" href="#client-usage" aria-hidden="true">#</a></h2><p>Just like the rest of ServiceStack C# Clients, MsgPackServiceClient is interchangeable with the other clients that equally supports all your ServiceStack&#39;s services including the <a href="/api-design.html">New API Design</a>, e.g:</p><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MsgPackServiceClient</span><span class="token punctuation">(</span>BaseUri<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">List<span class="token punctuation">&lt;</span>Todo<span class="token punctuation">&gt;</span></span> all <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Todos</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">// Count = 0</span>

<span class="token class-name"><span class="token keyword">var</span></span> todo <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">Post</span><span class="token punctuation">(</span>
    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Todo</span> <span class="token punctuation">{</span> Content <span class="token operator">=</span> <span class="token string">&quot;New TODO&quot;</span><span class="token punctuation">,</span> Order <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// todo.Id = 1</span>
all <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Todos</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                      <span class="token comment">// Count = 1</span>

todo<span class="token punctuation">.</span>Content <span class="token operator">=</span> <span class="token string">&quot;Updated TODO&quot;</span><span class="token punctuation">;</span>
todo <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">Put</span><span class="token punctuation">(</span>todo<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token comment">// todo.Content = Updated TODO</span>

client<span class="token punctuation">.</span><span class="token function">Delete</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Todos</span><span class="token punctuation">(</span>todo<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
all <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Todos</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
</code></pre></div><p>More examples of using MsgPackServiceClient can be found in the <a href="https://github.com/ServiceStack/ServiceStack/blob/master/tests/RazorRockstars.Console.Files/ReqStarsService.cs" target="_blank" rel="noopener noreferrer">New APIs Integration Test Suite</a>.</p>__VP_STATIC_END__`,7),r=[p,i,l];function u(k,d,g,h,m,f){return e(),t("div",null,r)}var b=s(c,[["render",u]]);export{_ as __pageData,b as default};
