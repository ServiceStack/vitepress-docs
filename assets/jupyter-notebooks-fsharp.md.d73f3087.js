import{_ as n}from"./jupyter-fsharp.be513106.js";import{_ as a,c as o,o as s,b as e,e as t}from"./app.14440598.js";const le='{"title":"F# Jupyter Notebooks","description":"","frontmatter":{"slug":"jupyter-notebooks-fsharp","title":"F# Jupyter Notebooks"},"headers":[{"level":3,"title":"Generate F# Jupyter Notebooks","slug":"generate-f-jupyter-notebooks"},{"level":2,"title":"Setup Jupyter for F# locally","slug":"setup-jupyter-for-f-locally"},{"level":2,"title":"Running JupyterLab","slug":"running-jupyterlab"},{"level":2,"title":"Example generated notebook","slug":"example-generated-notebook"},{"level":3,"title":"Visualize the data","slug":"visualize-the-data"},{"level":2,"title":"Try it out yourself using MyBinder with generated notebooks","slug":"try-it-out-yourself-using-mybinder-with-generated-notebooks"}],"relativePath":"jupyter-notebooks-fsharp.md","lastUpdated":1634495308422}',l={},r=e("p",null,[e("img",{src:n,alt:""})],-1),i=e("p",null,"Jupyter Commands lets you generate F# Jupyter Notebooks for calling ServiceStack APIs in a single command.",-1),c=e("iframe",{width:"896",height:"525",src:"https://www.youtube.com/embed/PxH3K5WIDx8",frameborder:"0",allow:"autoplay; encrypted-media",allowfullscreen:""},null,-1),u=e("p",null,[t("All command line utils used are available in the latest "),e("a",{href:"/dotnet-tool.html"},"dotnet tool"),t(" which can be installed from:")],-1),p=e("div",{class:"language-bash"},[e("pre",null,[e("code",null,[t("$ dotnet tool "),e("span",{class:"token function"},"install"),t(` --global x 
`)])])],-1),d=e("p",null,"Or if you had a previous version installed, update with:",-1),h=e("div",{class:"language-bash"},[e("pre",null,[e("code",null,`$ dotnet tool update -g x
`)])],-1),k=e("h3",{id:"generate-f-jupyter-notebooks",tabindex:"-1"},[t("Generate F# Jupyter Notebooks "),e("a",{class:"header-anchor",href:"#generate-f-jupyter-notebooks","aria-hidden":"true"},"#")],-1),y=e("p",null,[t("Use "),e("code",null,"x jupyter-fsharp"),t(" to display different usage examples for generating F# Jupyter Notebooks:")],-1),g=e("div",{class:"language-"},[e("pre",null,[e("code",null,`Usage: x jupyter-fsharp <base-url>
       x jupyter-fsharp <base-url> <request>
       x jupyter-fsharp <base-url> <request> {js-object}
       x jupyter-fsharp <base-url> <request> < body.json

Options:
 -out <file>            Save notebook to file
 -include <pattern>     Include Types DTOs pattern
`)])],-1),b=e("p",null,[t("The same syntax for invoking APIs with the "),e("a",{href:"/post-command.html"},"Post Command HTTP Utils"),t(" can also be used to generate F# Jupyter Notebooks, e.g:")],-1),_=e("div",{class:"language-bash"},[e("pre",null,[e("code",null,[t("$ x jupyter-fsharp https://techstacks.io FindTechStacks "),e("span",{class:"token string"},`"{Ids:[1,2,3],VendorName:'Google',Take:5}"`),t(`
`)])])],-1),f=e("p",null,"Output:",-1),m=e("div",{class:"language-"},[e("pre",null,[e("code",null,`Saved to: techstacks.io-FindTechStacks.ipynb
`)])],-1),v=e("div",{class:"info custom-block"},[e("p",{class:"custom-block-title"},"INFO"),e("p",null,[t("Jupyter Notebooks can also be created with the API Explorer UI at "),e("a",{href:"https://apps.servicestack.net",target:"_blank",rel:"noopener noreferrer"},"apps.servicestack.net")])],-1),w=e("h2",{id:"setup-jupyter-for-f-locally",tabindex:"-1"},[t("Setup Jupyter for F# locally "),e("a",{class:"header-anchor",href:"#setup-jupyter-for-f-locally","aria-hidden":"true"},"#")],-1),x=e("p",null,"To get working with JupyterLabs to run locally with a F# kernel, there are a few things you'll need to have installed.",-1),j=e("ul",null,[e("li",null,"Latest dotnet 5.0+ SDK"),e("li",null,"Python 3.7+ with pip")],-1),T=e("p",null,"With both dotnet SDK and Python installed, you can then install JupyterLab, Dotnet Interactive and register the dotnet kernels with the following commands.",-1),N=e("div",{class:"language-bash"},[e("pre",null,[e("code",null,[e("span",{class:"token comment"},"# Install jupyterlab to default Python interpreter"),t(`
pip `),e("span",{class:"token function"},"install"),t(` jupyterlab
`),e("span",{class:"token comment"},"# Install Dotnet Interactive dotnet tool"),t(`
dotnet tool `),e("span",{class:"token function"},"install"),t(` -g Microsoft.dotnet-interactive
`),e("span",{class:"token comment"},"# Get Dotnet Interactive to register kernels with Jupyter  "),t(`
dotnet interactive jupyter `),e("span",{class:"token function"},"install"),t(`
`)])])],-1),S=e("p",null,"To verify these have been installed successfully, you can list the currently registered kernels using the command.",-1),D=e("div",{class:"language-bash"},[e("pre",null,[e("code",null,`$ jupyter kernelspec list
`)])],-1),J=e("p",null,[t("This should list "),e("code",null,".net-fsharp"),t(" as one of the kernels which is what the F# notebooks will use.")],-1),P=e("h2",{id:"running-jupyterlab",tabindex:"-1"},[t("Running JupyterLab "),e("a",{class:"header-anchor",href:"#running-jupyterlab","aria-hidden":"true"},"#")],-1),F=e("p",null,"With everything setup, navigate to a local directory with your notebooks and run:",-1),I=e("div",{class:"language-bash"},[e("pre",null,[e("code",null,`$ jupyter-lab
`)])],-1),V=e("p",null,[t("The context of where this command is run from matter as JupyterLab will mount list files in the same directory is was run, so make sure your running the "),e("code",null,"jupyter-lab"),t(" command from where your notebooks are located or where you new notebooks to be saved.")],-1),E=e("h2",{id:"example-generated-notebook",tabindex:"-1"},[t("Example generated notebook "),e("a",{class:"header-anchor",href:"#example-generated-notebook","aria-hidden":"true"},"#")],-1),$=e("p",null,"From your notebook directory that JupyterLab is using, open a new command prompt/terminal and run:",-1),A=e("div",{class:"language-bash"},[e("pre",null,[e("code",null,`$ x jupyter-fsharp https://covid-vac-watch.netcore.io QueryVaccinationRates
`)])],-1),B=e("p",null,[t("This will generate the file "),e("code",null,"covid_vac_watch.netcore.io-QueryVaccinationRates.ipynb"),t(" in that directory. This file has everything that is needed to call the "),e("code",null,"QueryVaccinationRates"),t(" service and display data in the response.")],-1),G=e("p",null,[e("img",{src:"https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/jupyter/jupyter-lab-fsharp-example.png",alt:""})],-1),R=e("h3",{id:"visualize-the-data",tabindex:"-1"},[t("Visualize the data "),e("a",{class:"header-anchor",href:"#visualize-the-data","aria-hidden":"true"},"#")],-1),L=e("p",null,[t("These generated notebooks are designed to be a starting point with all the data plumbing setup done for you. Taking this example further, we can visualize the data using "),e("a",{href:"https://plotly.net/",target:"_blank",rel:"noopener noreferrer"},"Plotly.NET"),t(", a NuGet library that generates plotly.js visuals using .NET. Run at least the first two cells and then add a new cell at the bottom of the generated notebook with the following code.")],-1),C=e("div",{class:"language-fsharp"},[e("pre",null,[e("code",null,[e("span",{class:"token preprocessor property"},"#r "),e("span",{class:"token string"},'"nuget: Plotly.NET, 2.0.0-preview.6"'),t(`
`),e("span",{class:"token preprocessor property"},"#r "),e("span",{class:"token string"},'"nuget: Plotly.NET.Interactive, 2.0.0-preview.6"'),t(`

`),e("span",{class:"token keyword"},"open"),t(" Plotly"),e("span",{class:"token punctuation"},"."),t(`NET

`),e("span",{class:"token keyword"},"let"),t(" xData "),e("span",{class:"token operator"},"="),t(" response"),e("span",{class:"token punctuation"},"."),t("Results"),e("span",{class:"token punctuation"},"."),e("span",{class:"token function"},"Map"),e("span",{class:"token punctuation"},"("),e("span",{class:"token keyword"},"fun"),t(),e("span",{class:"token punctuation"},"("),t("x"),e("span",{class:"token punctuation"},":"),e("span",{class:"token class-name"},"VaccinationData"),e("span",{class:"token punctuation"},")"),t(),e("span",{class:"token operator"},"->"),t(" x"),e("span",{class:"token punctuation"},"."),t("Date"),e("span",{class:"token punctuation"},")"),t(`
`),e("span",{class:"token keyword"},"let"),t(" yData "),e("span",{class:"token operator"},"="),t(" response"),e("span",{class:"token punctuation"},"."),t("Results"),e("span",{class:"token punctuation"},"."),e("span",{class:"token function"},"Map"),e("span",{class:"token punctuation"},"("),e("span",{class:"token keyword"},"fun"),t(),e("span",{class:"token punctuation"},"("),t("x"),e("span",{class:"token punctuation"},":"),e("span",{class:"token class-name"},"VaccinationData"),e("span",{class:"token punctuation"},")"),t(),e("span",{class:"token operator"},"->"),t(" x"),e("span",{class:"token punctuation"},"."),t("DailyVaccinations"),e("span",{class:"token punctuation"},"."),e("span",{class:"token function"},"GetValueOrDefault"),e("span",{class:"token punctuation"},"("),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},")"),t(`

`),e("span",{class:"token keyword"},"let"),t(" chart "),e("span",{class:"token operator"},"="),t(` 
    Chart`),e("span",{class:"token punctuation"},"."),e("span",{class:"token function"},"Point"),e("span",{class:"token punctuation"},"("),t("xData"),e("span",{class:"token punctuation"},","),t("yData"),e("span",{class:"token punctuation"},")"),t(`
        `),e("span",{class:"token operator"},"|>"),t(" Chart"),e("span",{class:"token punctuation"},"."),t("withTitle "),e("span",{class:"token string"},'"Daily Vaccinations"'),t(`
        `),e("span",{class:"token operator"},"|>"),t(" Chart"),e("span",{class:"token punctuation"},"."),t("withX_AxisStyle "),e("span",{class:"token punctuation"},"("),e("span",{class:"token string"},'"Date"'),e("span",{class:"token punctuation"},","),t(" Showgrid"),e("span",{class:"token operator"},"="),e("span",{class:"token keyword"},"false"),e("span",{class:"token punctuation"},")"),t(`
        `),e("span",{class:"token operator"},"|>"),t(" Chart"),e("span",{class:"token punctuation"},"."),t("withY_AxisStyle "),e("span",{class:"token punctuation"},"("),e("span",{class:"token string"},'"Vaccinations"'),e("span",{class:"token punctuation"},","),t(" Showgrid"),e("span",{class:"token operator"},"="),e("span",{class:"token keyword"},"false"),e("span",{class:"token punctuation"},")"),t(`
`),e("span",{class:"token function"},"display"),e("span",{class:"token punctuation"},"("),t("chart"),e("span",{class:"token punctuation"},")"),t(`
`)])])],-1),M=e("p",null,"The code above does several things.",-1),O=e("ul",null,[e("li",null,[t("Import the 2 required "),e("a",{href:"http://Plotly.NET",target:"_blank",rel:"noopener noreferrer"},"Plotly.NET"),t(" NuGet dependencies.")]),e("li",null,[t("Declares "),e("code",null,"using"),t(" statement.")]),e("li",null,"Transforms response data into 2 equal list of primitive data."),e("li",null,[t("Generates a plot with "),e("code",null,"Date"),t(" on the X axis and "),e("code",null,"DailyVaccinations"),t(" on the Y axis.")])],-1),z=e("p",null,[e("img",{src:"https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/jupyter/jupyter-lab-visual-example.png",alt:""})],-1),U=e("h2",{id:"try-it-out-yourself-using-mybinder-with-generated-notebooks",tabindex:"-1"},[t("Try it out yourself using MyBinder with generated notebooks "),e("a",{class:"header-anchor",href:"#try-it-out-yourself-using-mybinder-with-generated-notebooks","aria-hidden":"true"},"#")],-1),q=e("p",null,[t("Another way to work with Jupyter, F# and ServiceStack generated notebooks is to do with via "),e("a",{href:"https://mybinder.org/",target:"_blank",rel:"noopener noreferrer"},"MyBinder"),t(". MyBinder is a free hosted service that gives you an isolated docker container to run your notebooks if you are just trying something out.")],-1),Q=e("p",null,[e("a",{href:"https://mybinder.org/v2/gh/ServiceStack/jupyter-notebooks/HEAD",target:"_blank",rel:"noopener noreferrer"},[e("img",{src:"https://mybinder.org/badge_logo.svg",alt:"Binder"})])],-1),H=e("ul",null,[e("li",null,[t("Click on the "),e("code",null,"Launch Binder"),t(" badge above and wait for it to launch into a Jupyter web UI (it can take a min or two sometimes)")]),e("li",null,[t("Goto "),e("code",null,"New"),t(" and select "),e("code",null,"Terminal"),t(".")]),e("li",null,[t("In the terminal use the ServiceStack "),e("code",null,"x"),t(" tool to generate a new F# notebook like before "),e("ul",null,[e("li",null,[e("code",null,"x jupyter-fsharp https://covid-vac-watch.netcore.io QueryVaccinationRates")])])]),e("li",null,"Navigate back to Jupyter file explorer and see your generated notebook."),e("li",null,[t("Open the new notebook and "),e("strong",null,"run"),t(" the generated cells.")]),e("li",null,[t("Add a new cell with the same code for "),e("a",{href:"http://Plotly.NET",target:"_blank",rel:"noopener noreferrer"},"Plotly.NET"),t(" as above and run")])],-1),K=e("p",null,[e("img",{src:"https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/jupyter/jupyter-mybinder-visual-example.png",alt:""})],-1),W=[r,i,c,u,p,d,h,k,y,g,b,_,f,m,v,w,x,j,T,N,S,D,J,P,F,I,V,E,$,A,B,G,R,L,C,M,O,z,U,q,Q,H,K];function X(Y,Z,ee,te,ne,ae){return s(),o("div",null,W)}var re=a(l,[["render",X]]);export{le as __pageData,re as default};
