import{_ as t,c as e,o as p,a as s,b as n,e as a}from"./app.14440598.js";const B='{"title":"Vue and React \\"lite\\" Project Templates","description":"","frontmatter":{"slug":"templates-lite","title":"Vue and React \\"lite\\" Project Templates"},"headers":[{"level":3,"title":"Light on Complexity, Big on Features","slug":"light-on-complexity-big-on-features"},{"level":2,"title":"Install","slug":"install"},{"level":3,"title":"vue-lite","slug":"vue-lite"},{"level":3,"title":"react-lite","slug":"react-lite"},{"level":3,"title":"Development workflow","slug":"development-workflow"},{"level":3,"title":"Update TypeScript DTOs","slug":"update-typescript-dtos"},{"level":3,"title":"Integrated Bundling","slug":"integrated-bundling"},{"level":3,"title":"Pre-compiled minified production bundles","slug":"pre-compiled-minified-production-bundles"},{"level":3,"title":"Publishing and Deployment","slug":"publishing-and-deployment"},{"level":2,"title":"Configure NUglify","slug":"configure-nuglify"},{"level":3,"title":"Using Cache breakers in minified bundles","slug":"using-cache-breakers-in-minified-bundles"},{"level":3,"title":"Available in Razor Helpers","slug":"available-in-razor-helpers"},{"level":3,"title":"Empty MemoryVirtualFiles now registered in VirtualFileSources","slug":"empty-memoryvirtualfiles-now-registered-in-virtualfilesources"},{"level":3,"title":"vue-lite Project Template features","slug":"vue-lite-project-template-features"},{"level":3,"title":"Validation Error Binding","slug":"validation-error-binding"},{"level":3,"title":"Vue Global State Management","slug":"vue-global-state-management"},{"level":3,"title":"react-lite Project Template features","slug":"react-lite-project-template-features"},{"level":3,"title":"React Global State Management","slug":"react-global-state-management"},{"level":3,"title":"\\"lite\\" Project Structure","slug":"lite-project-structure"},{"level":3,"title":"Updating \\"lite\\" project dependencies","slug":"updating-lite-project-dependencies"}],"relativePath":"templates-lite.md","lastUpdated":1634495308450}',o={},c=s(`__VP_STATIC_START__<p>The question we keep asking ourselves is how can ServiceStack make modern Web Development simpler, the natural choice was to provide pre-configured <a href="/templates-single-page-apps.html">Webpack-powered SPA Project Templates</a> - brining the recommended SPA development model for all popular SPA frameworks to .NET, which we&#39;ve been doing successfully and seamlessly integrated with ServiceStack for years.</p><p>However the next leap in simplicity wont be coming from adding additional tooling to manage the complexity, it will be from removing the underlying complexity entirely. Fortunately one of the targets all premier SPA frameworks offer are encapsulated UMD packages so they can be referenced as a single include in online IDE&#39;s like <a href="https://codepen.io" target="_blank" rel="noopener noreferrer">codepen.io</a> but also for simple Web Apps that want to gradually adopt these frameworks but want to avoid the complexity of maintaining an npm build system.</p><p>These UMD packages lets us return back to the simple era if web development where we can go back to referencing libraries using simple script includes - which is the strategy embraced in ServiceStack&#39;s new &quot;lite&quot; project templates.</p><h3 id="light-on-complexity-big-on-features" tabindex="-1">Light on Complexity, Big on Features <a class="header-anchor" href="#light-on-complexity-big-on-features" aria-hidden="true">#</a></h3><p>Surprisingly whilst we&#39;re able to rid our selves of the complexity of maintaining an npm-based build system, we&#39;re still able to enjoy many of the features that make SPA development with Webpack a joy:</p><ul><li>Integrated hot-reloading</li><li>Advanced JavaScript language features <ul><li>Continue developing with same componentized development model as done when using Webpack</li><li>Future proofed to use optimal ES6 source code</li></ul></li><li>TypeScript with runtime type-checking verification and auto-complete <ul><li>Incremental compilation</li><li>TypeScript declarations are included for all default packages</li></ul></li><li>Smart, effortless bundling and minification <ul><li>Optimal unminified during development and minified for production</li><li>No reliance on external tooling necessary, but can use same bundling configuration in website <code>_layout.html</code> if pre-compilation is preferred</li></ul></li></ul><p>Essentially the &quot;lite&quot; templates goal are to provide the richest suite of functionality possible with the least amount of complexity. TypeScript was adopted because it runs as a non-invasive global tool with no dependencies that enables us to take advantage of the latest JavaScript language features to be able to develop in modern JavaScript without compromises, in the same source code as a fully-fledged npm webpack build system, should you wish to upgrade to one in future.</p><h2 id="install" tabindex="-1">Install <a class="header-anchor" href="#install" aria-hidden="true">#</a></h2><p>All ServiceStack Project Templates can now be created with our <a href="/web-new.html">x</a> .NET Core tool:</p><div class="language-bash"><pre><code>$ dotnet tool <span class="token function">install</span> -g x
</code></pre></div><p>If you previously had an existing <code>x</code> tool installed, update it to the latest version with:</p><div class="language-bash"><pre><code>$ dotnet tool update -g x
</code></pre></div><h3 id="vue-lite" tabindex="-1">vue-lite <a class="header-anchor" href="#vue-lite" aria-hidden="true">#</a></h3><p><a href="https://github.com/NetCoreTemplates/vue-lite" target="_blank" rel="noopener noreferrer"><img src="https://raw.githubusercontent.com/ServiceStack/Assets/master/csharp-templates/vue-lite.png" alt=""></a></p><p>Browse <a href="https://github.com/NetCoreTemplates/vue-lite" target="_blank" rel="noopener noreferrer">source code</a>, view <a href="http://vue-lite.web-templates.io" target="_blank" rel="noopener noreferrer">vue-lite.web-templates.io</a> live demo and install for <strong>.NET Core</strong> with:</p><div class="language-bash"><pre><code>$ x new vue-lite ProjectName
</code></pre></div><p>Alternatively you can create an <a href="http://ASP.NET" target="_blank" rel="noopener noreferrer">ASP.NET</a> Core LTS project on <strong>.NET Framework</strong> with:</p><div class="language-bash"><pre><code>$ x new vue-lite-corefx ProjectName
</code></pre></div><h3 id="react-lite" tabindex="-1">react-lite <a class="header-anchor" href="#react-lite" aria-hidden="true">#</a></h3><p><a href="https://github.com/NetCoreTemplates/react-lite" target="_blank" rel="noopener noreferrer"><img src="https://raw.githubusercontent.com/ServiceStack/Assets/master/csharp-templates/react-lite.png" alt=""></a></p><p>Browse <a href="https://github.com/NetCoreTemplates/react-lite" target="_blank" rel="noopener noreferrer">source code</a>, view <a href="http://react-lite.web-templates.io" target="_blank" rel="noopener noreferrer">react-lite.web-templates.io</a> live demo and install for <strong>.NET Core</strong> with:</p><div class="language-bash"><pre><code>$ x new react-lite ProjectName
</code></pre></div><p>Alternatively you can create an <a href="http://ASP.NET" target="_blank" rel="noopener noreferrer">ASP.NET</a> Core LTS project on <strong>.NET Framework</strong> with:</p><div class="language-bash"><pre><code>$ x new react-lite-corefx ProjectName
</code></pre></div><h3 id="development-workflow" tabindex="-1">Development workflow <a class="header-anchor" href="#development-workflow" aria-hidden="true">#</a></h3><p>All that&#39;s needed for client development is to run TypeScript in &quot;watch&quot; mode:</p><div class="language-bash"><pre><code>$ tsc -w
</code></pre></div><p>Which monitors any changes to any <code>.ts</code> files and incrementally compiles their <code>.js</code> files on save. ServiceStack&#39;s built-in <a href="/templates-single-page-apps.html#optimal-dev-workflow-with-hot-reloading">static files</a> hot-reloading detects changes to any <code>.js</code> files and automatically reloads the page.</p><p>The for Server C# development, start your .NET Web App in a new Terminal window with:</p><div class="language-bash"><pre><code>$ dotnet <span class="token function">watch</span> run
</code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Using <code>watch run</code> will monitor changes to <code>C#</code> source files and automatically re-builds and restarts the Server</p></div><h3 id="update-typescript-dtos" tabindex="-1">Update TypeScript DTOs <a class="header-anchor" href="#update-typescript-dtos" aria-hidden="true">#</a></h3><p>After changing your ServiceStack Services, you can re-generate their <a href="/typescript-add-servicestack-reference.html">Typed TypeScript DTOs</a> with:</p><div class="language-bash"><pre><code>$ x ts
</code></pre></div><p>Which will recursively update and re-generate all <code>*dto.ts</code> in the current and sub directories.</p><h3 id="integrated-bundling" tabindex="-1">Integrated Bundling <a class="header-anchor" href="#integrated-bundling" aria-hidden="true">#</a></h3><p>The way to eliminate needing a build and module system comes down to including dependencies in dependent order which is where ServiceStack&#39;s new bundling APIs help with. We&#39;ll walk through the <a href="#vue-lite">vue-lite</a> to see how this is easily done.</p><p>All the bundling logic for all <code>.css</code> and <code>.js</code> resources are contained within the <code>_layout.html</code> page below:</p><h4 id="wwwroot-layout-html" tabindex="-1"><a href="https://github.com/NetCoreTemplates/vue-lite/blob/master/wwwroot/_layout.html" target="_blank" rel="noopener noreferrer">/wwwroot/_layout.html</a> <a class="header-anchor" href="#wwwroot-layout-html" aria-hidden="true">#</a></h4>__VP_STATIC_END__`,39),l=n("div",null,[n("div",{class:"language-hbs"},[n("pre",{"v-pre":""},[n("code",null,[n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},"!"),n("span",{class:"token variable"},"DOCTYPE"),a(),n("span",{class:"token variable"},"html"),n("span",{class:"token punctuation"},">"),a(`
`),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"html"),a(),n("span",{class:"token variable"},"lang"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"en"'),n("span",{class:"token punctuation"},">"),a(`
`),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"head"),n("span",{class:"token punctuation"},">"),a(`
    `),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"meta"),a(),n("span",{class:"token variable"},"charset"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"UTF-8"'),n("span",{class:"token punctuation"},">"),a(`
    `),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"meta"),a(),n("span",{class:"token variable"},"name"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"viewport"'),a(),n("span",{class:"token variable"},"content"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"width=device-width, initial-scale=1.0"'),n("span",{class:"token punctuation"},">"),a(`
    `),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"meta"),a(),n("span",{class:"token variable"},"http-equiv"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"X-UA-Compatible"'),a(),n("span",{class:"token variable"},"content"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"ie=edge"'),n("span",{class:"token punctuation"},">"),a(`
    `),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"link"),a(),n("span",{class:"token variable"},"href"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"/favicon.ico"'),a(),n("span",{class:"token variable"},"rel"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"icon"'),n("span",{class:"token punctuation"},">"),a(`
    `),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"link"),a(),n("span",{class:"token variable"},"rel"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"stylesheet"'),a(),n("span",{class:"token variable"},"href"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"/lib/css/bootstrap/bootstrap.css"'),n("span",{class:"token punctuation"},">"),a(`
    `),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"title"),n("span",{class:"token punctuation"},">"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token variable"},"title"),a(),n("span",{class:"token variable"},"??"),a(),n("span",{class:"token string"},"'MyApp'"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"title"),n("span",{class:"token punctuation"},">"),a(`
`),n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"head"),n("span",{class:"token punctuation"},">"),a(`
`),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"body"),n("span",{class:"token punctuation"},">"),a(`
`),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token string"},"'buttons,svg-auth,app'"),a(),n("span",{class:"token punctuation"},"|"),n("span",{class:"token punctuation"},">"),a(),n("span",{class:"token variable"},"cssIncludes"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token string"},"'svg-icons'"),a(),n("span",{class:"token punctuation"},"|"),n("span",{class:"token punctuation"},">"),a(),n("span",{class:"token variable"},"cssIncludes"),a(),n("span",{class:"token punctuation"},"|"),n("span",{class:"token punctuation"},">"),a(),n("span",{class:"token variable"},"svgFill"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'#41B883'"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token variable"},"var"),a(),n("span",{class:"token variable"},"cssBundle"),a(),n("span",{class:"token punctuation"},"="),a(),n("span",{class:"token string"},"'/'"),n("span",{class:"token punctuation"},"."),n("span",{class:"token variable"},"findFilesInDirectory"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"bundle.*.css"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token variable"},"first"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"#"),n("span",{class:"token variable"},"if"),a(),n("span",{class:"token variable"},"cssBundle"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
    `),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"link"),a(),n("span",{class:"token variable"},"rel"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"stylesheet"'),a(),n("span",{class:"token variable"},"href"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"/{{cssBundle.VirtualPath}}"'),n("span",{class:"token punctuation"},">"),a(`
`),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token variable"},"else"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
    `),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token string"},"'content:/src/css/'"),a(),n("span",{class:"token punctuation"},"|"),n("span",{class:"token punctuation"},">"),a(),n("span",{class:"token variable"},"bundleCss"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token variable"},"minify"),n("span",{class:"token punctuation"},":"),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token variable"},"cache"),n("span",{class:"token punctuation"},":"),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token variable"},"out"),n("span",{class:"token punctuation"},":"),n("span",{class:"token string"},"'/app.bundle.css'"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"if"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`

    `),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"i"),a(),n("span",{class:"token variable"},"hidden"),n("span",{class:"token punctuation"},">"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token string"},"'/js/hot-fileloader.js'"),a(),n("span",{class:"token punctuation"},"|"),n("span",{class:"token punctuation"},">"),a(),n("span",{class:"token variable"},"ifDebugIncludeScript"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"i"),n("span",{class:"token punctuation"},">"),a(`
    `),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"script"),n("span",{class:"token punctuation"},">"),n("span",{class:"token variable"},"NAV_ITEMS"),a(),n("span",{class:"token punctuation"},"="),a(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token string"},"'GetNavItems'"),a(),n("span",{class:"token punctuation"},"|"),n("span",{class:"token punctuation"},">"),a(),n("span",{class:"token variable"},"execService"),a(),n("span",{class:"token punctuation"},"|"),n("span",{class:"token punctuation"},">"),a(),n("span",{class:"token variable"},"json"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"script"),n("span",{class:"token punctuation"},">"),a(`
    `),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"script"),n("span",{class:"token punctuation"},">"),n("span",{class:"token variable"},"AUTH"),a(),n("span",{class:"token punctuation"},"="),a(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token string"},"'Authenticate'"),a("     "),n("span",{class:"token punctuation"},"|"),n("span",{class:"token punctuation"},">"),a(),n("span",{class:"token variable"},"execService"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token variable"},"ifErrorReturn"),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token string"},'"null"'),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"|"),n("span",{class:"token punctuation"},">"),a(),n("span",{class:"token variable"},"json"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"script"),n("span",{class:"token punctuation"},">"),a(`

    `),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"noscript"),n("span",{class:"token punctuation"},">"),a(`
      `),n("span",{class:"token variable"},"You"),a(),n("span",{class:"token variable"},"need"),a(),n("span",{class:"token variable"},"to"),a(),n("span",{class:"token variable"},"enable"),a(),n("span",{class:"token variable"},"JavaScript"),a(),n("span",{class:"token variable"},"to"),a(),n("span",{class:"token variable"},"run"),a(),n("span",{class:"token variable"},"this"),a(),n("span",{class:"token variable"},"app"),n("span",{class:"token punctuation"},"."),a(`
    `),n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"noscript"),n("span",{class:"token punctuation"},">"),a(`

`),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token variable"},"page"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`

    `),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"div"),a(),n("span",{class:"token variable"},"id"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"footer"'),a(),n("span",{class:"token variable"},"style"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"text-align:center; position:absolute; bottom:50px; width:100%;"'),n("span",{class:"token punctuation"},">"),a(`
        `),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"h4"),n("span",{class:"token punctuation"},">"),a(`
        `),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"img"),a(),n("span",{class:"token variable"},"style"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"height:42px"'),a(),n("span",{class:"token variable"},"src"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},`"{{ 'servicestack'.svgDataUri('#333') }}"`),a(),n("span",{class:"token block keyword"},"/>"),a(`
        `),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"a"),a(),n("span",{class:"token variable"},"href"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"https://github.com/NetCoreTemplates/vue-lite"'),n("span",{class:"token punctuation"},">"),n("span",{class:"token variable"},"Learn"),a(),n("span",{class:"token variable"},"about"),a(),n("span",{class:"token variable"},"this"),a(),n("span",{class:"token variable"},"Vue"),a(),n("span",{class:"token variable"},"template"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"a"),n("span",{class:"token punctuation"},">"),a(`
        `),n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"h4"),n("span",{class:"token punctuation"},">"),a(`
        `),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"div"),n("span",{class:"token punctuation"},">"),n("span",{class:"token variable"},"Copyright"),a(),n("span",{class:"token punctuation"},"&"),n("span",{class:"token variable"},"copy"),n("span",{class:"token punctuation"},";"),a(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token variable"},"now"),a(),n("span",{class:"token punctuation"},"|"),n("span",{class:"token punctuation"},">"),a(),n("span",{class:"token variable"},"dateFormat"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'yyyy'"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"div"),n("span",{class:"token punctuation"},">"),a(`
    `),n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"div"),n("span",{class:"token punctuation"},">"),a(`

`),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token brackets"},[n("span",{class:"token punctuation"},"["),n("span",{class:"token variable"},"\n    `/lib/js/vue/vue.min.js`,\n    `/lib/js/vue-router/vue-router.min.js`,\n    `/lib/js/vue-class-component/vue-class-component.min.js`,\n    `/lib/js/vue-property-decorator/vue-property-decorator.min.js`,\n    `/lib/js/@servicestack/client/servicestack-client.min.js`,\n    `/lib/js/@servicestack/vue/servicestack-vue.min.js`,\n"),n("span",{class:"token punctuation"},"]")]),a(),n("span",{class:"token punctuation"},"|"),n("span",{class:"token punctuation"},">"),a(),n("span",{class:"token variable"},"map"),a(),n("span",{class:"token punctuation"},"="),n("span",{class:"token punctuation"},">"),a(),n("span",{class:"token punctuation"},"`"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"script"),a(),n("span",{class:"token variable"},"src"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"${it}"'),n("span",{class:"token punctuation"},">"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"script"),n("span",{class:"token punctuation"},">"),n("span",{class:"token punctuation"},"`"),a(),n("span",{class:"token punctuation"},"|"),n("span",{class:"token punctuation"},">"),a(),n("span",{class:"token variable"},"joinln"),a(),n("span",{class:"token punctuation"},"|"),n("span",{class:"token punctuation"},">"),a(),n("span",{class:"token variable"},"raw"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
    
`),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"script"),n("span",{class:"token punctuation"},">"),a(`
`),n("span",{class:"token variable"},"var"),a(),n("span",{class:"token variable"},"ALIASES"),a(),n("span",{class:"token punctuation"},"="),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token string"},"'vue'"),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token variable"},"default"),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token variable"},"Vue"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),a(`
    `),n("span",{class:"token string"},"'vue-router'"),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token variable"},"default"),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token variable"},"VueRouter"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),a(`
    `),n("span",{class:"token string"},"'vue-class-component'"),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token variable"},"VueClassComponent"),n("span",{class:"token punctuation"},","),a(`
    `),n("span",{class:"token string"},"'vue-property-decorator'"),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token variable"},"VuePropertyDecorator"),n("span",{class:"token punctuation"},","),a(`
    `),n("span",{class:"token string"},"'@servicestack/vue'"),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token variable"},"ServiceStackVue"),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token variable"},"var"),a(),n("span",{class:"token variable"},"global"),a(),n("span",{class:"token punctuation"},"="),a(),n("span",{class:"token variable"},"window"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token variable"},"window"),n("span",{class:"token punctuation"},"."),n("span",{class:"token variable"},"exports"),a(),n("span",{class:"token punctuation"},"="),a(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token variable"},"window"),n("span",{class:"token punctuation"},"."),n("span",{class:"token variable"},"require"),a(),n("span",{class:"token punctuation"},"="),a(),n("span",{class:"token variable"},"function"),n("span",{class:"token punctuation"},"("),n("span",{class:"token variable"},"name"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token variable"},"return"),a(),n("span",{class:"token variable"},"ALIASES"),n("span",{class:"token brackets"},[n("span",{class:"token punctuation"},"["),n("span",{class:"token variable"},"name"),n("span",{class:"token punctuation"},"]")]),a(),n("span",{class:"token punctuation"},"|"),n("span",{class:"token punctuation"},"|"),a(),n("span",{class:"token variable"},"exports"),n("span",{class:"token brackets"},[n("span",{class:"token punctuation"},"["),n("span",{class:"token variable"},"name"),n("span",{class:"token punctuation"},"]")]),a(),n("span",{class:"token punctuation"},"|"),n("span",{class:"token punctuation"},"|"),a(),n("span",{class:"token variable"},"window"),n("span",{class:"token brackets"},[n("span",{class:"token punctuation"},"["),n("span",{class:"token variable"},"name"),n("span",{class:"token punctuation"},"]")]),a(),n("span",{class:"token punctuation"},"|"),n("span",{class:"token punctuation"},"|"),a(),n("span",{class:"token variable"},"exports"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token variable"},"Object"),n("span",{class:"token punctuation"},"."),n("span",{class:"token variable"},"assign"),n("span",{class:"token punctuation"},"("),n("span",{class:"token variable"},"window"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token variable"},"window"),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"@servicestack/client"'),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"script"),n("span",{class:"token punctuation"},">"),a(`

`),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token variable"},"var"),a(),n("span",{class:"token variable"},"jsBundle"),a(),n("span",{class:"token punctuation"},"="),a(),n("span",{class:"token string"},"'/'"),n("span",{class:"token punctuation"},"."),n("span",{class:"token variable"},"findFilesInDirectory"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"bundle.*.js"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token variable"},"first"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"#"),n("span",{class:"token variable"},"if"),a(),n("span",{class:"token variable"},"jsBundle"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"script"),a(),n("span",{class:"token variable"},"src"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"/{{jsBundle.VirtualPath}}"'),n("span",{class:"token punctuation"},">"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"script"),n("span",{class:"token punctuation"},">"),a(`
`),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token variable"},"else"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token punctuation"},"["),a(`
    `),n("span",{class:"token string"},"'content:/src/components/'"),n("span",{class:"token punctuation"},","),a(`
    `),n("span",{class:"token string"},"'content:/src/shared/'"),n("span",{class:"token punctuation"},","),a(`
    `),n("span",{class:"token string"},"'content:/src/'"),n("span",{class:"token punctuation"},","),a(`
`),n("span",{class:"token punctuation"},"]"),a(),n("span",{class:"token punctuation"},"|"),n("span",{class:"token punctuation"},">"),a(),n("span",{class:"token variable"},"bundleJs"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token variable"},"minify"),n("span",{class:"token punctuation"},":"),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token variable"},"cache"),n("span",{class:"token punctuation"},":"),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token variable"},"iife"),n("span",{class:"token punctuation"},":"),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token variable"},"out"),n("span",{class:"token punctuation"},":"),n("span",{class:"token punctuation"},"`"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"app"),n("span",{class:"token punctuation"},"."),n("span",{class:"token variable"},"bundle"),n("span",{class:"token punctuation"},"."),n("span",{class:"token variable"},"js"),n("span",{class:"token punctuation"},"`"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"if"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token variable"},"scripts"),a(),n("span",{class:"token punctuation"},"|"),n("span",{class:"token punctuation"},">"),a(),n("span",{class:"token variable"},"raw"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token variable"},"htmlError"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"body"),n("span",{class:"token punctuation"},">"),a(`
`),n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"html"),n("span",{class:"token punctuation"},">"),a(`
`)])])])],-1),u=s('',4),i=n("div",null,[n("div",{class:"language-hbs"},[n("pre",{"v-pre":""},[n("code",null,[n("span",{class:"token delimiter punctuation"},"{{"),a(),n("span",{class:"token string"},"'content:/src/css/'"),a(),n("span",{class:"token punctuation"},"|"),n("span",{class:"token punctuation"},">"),a(),n("span",{class:"token variable"},"bundleCss"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token variable"},"minify"),n("span",{class:"token punctuation"},":"),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token variable"},"cache"),n("span",{class:"token punctuation"},":"),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token variable"},"out"),n("span",{class:"token punctuation"},":"),n("span",{class:"token string"},"'/app.bundle.css'"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
`)])])])],-1),r=s('',7),k=n("div",null,[n("div",{class:"language-hbs"},[n("pre",{"v-pre":""},[n("code",null,[n("span",{class:"token delimiter punctuation"},"{{"),a(),n("span",{class:"token punctuation"},"["),a(`
    `),n("span",{class:"token string"},"'/assets/css/default.css'"),n("span",{class:"token punctuation"},","),a(` 
    `),n("span",{class:"token string"},"'/assets/css/'"),a(`
   `),n("span",{class:"token punctuation"},"]"),a(),n("span",{class:"token punctuation"},"|"),n("span",{class:"token punctuation"},">"),a(),n("span",{class:"token variable"},"bundleCss"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
`)])])])],-1),d=n("h4",{id:"hot-reloading-of-static-resources",tabindex:"-1"},[a("Hot Reloading of Static Resources "),n("a",{class:"header-anchor",href:"#hot-reloading-of-static-resources","aria-hidden":"true"},"#")],-1),g=n("p",null,[a("The script below enables "),n("a",{href:"#hot-reload"},"hot-reloading"),a(" during development:")],-1),h=n("div",null,[n("div",{class:"language-hbs"},[n("pre",{"v-pre":""},[n("code",null,[n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"i"),a(),n("span",{class:"token variable"},"hidden"),n("span",{class:"token punctuation"},">"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token string"},"'/js/hot-fileloader.js'"),a(),n("span",{class:"token punctuation"},"|"),a(),n("span",{class:"token variable"},"ifDebugIncludeScript"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"i"),n("span",{class:"token punctuation"},">"),a(`
`)])])])],-1),m=s(`__VP_STATIC_START__<p>Where it will automatically reload the page if it detects any modifications to any <code>.html</code>, <code>.js</code> or <code>.css</code> files, <a href="https://github.com/NetCoreTemplates/vue-lite/blob/fb56cff8d704f7a066242b4f90708f92a58dbaab/Startup.cs#L63" target="_blank" rel="noopener noreferrer">Configured with</a>:</p><div class="language-csharp"><pre><code><span class="token keyword">if</span> <span class="token punctuation">(</span>Config<span class="token punctuation">.</span>DebugMode<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    Plugins<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">HotReloadFeature</span> <span class="token punctuation">{</span>
        DefaultPattern <span class="token operator">=</span> <span class="token string">&quot;*.html;*.js;*.css&quot;</span><span class="token punctuation">,</span>
        VirtualFiles <span class="token operator">=</span> VirtualFiles <span class="token comment">// Monitor ContentRoot to detect changes in /src</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>The <code>page</code> placeholder is where the page will be rendered inside the Layout template:</p>__VP_STATIC_END__`,3),b=n("div",null,[n("div",{class:"language-hbs"},[n("pre",{"v-pre":""},[n("code",null,[n("span",{class:"token delimiter punctuation"},"{{"),n("span",{class:"token variable"},"page"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
`)])])])],-1),v=n("h4",{id:"javascript-library-bundling",tabindex:"-1"},[a("JavaScript Library Bundling "),n("a",{class:"header-anchor",href:"#javascript-library-bundling","aria-hidden":"true"},"#")],-1),f=n("p",null,[a("The layout creates 2 JavaScript bundles, the first containing all 3rd Party libraries used in the App which is written to "),n("code",null,"/js/lib.bundle{.min}.js"),a(" using the same bundling options as the "),n("code",null,"bundleCss"),a(" above:")],-1),w=n("div",null,[n("div",{class:"language-hbs"},[n("pre",{"v-pre":""},[n("code",null,[n("span",{class:"token delimiter punctuation"},"{{"),a(),n("span",{class:"token brackets"},[n("span",{class:"token punctuation"},"["),n("span",{class:"token variable"},"\n    `/lib/js/vue/vue.min.js`,\n    `/lib/js/vue-router/vue-router.min.js`,\n    `/lib/js/vue-class-component/vue-class-component.min.js`,\n    `/lib/js/vue-property-decorator/vue-property-decorator.min.js`,\n    `/lib/js/@servicestack/client/servicestack-client.min.js`,\n    `/lib/js/@servicestack/vue/servicestack-vue.min.js`,\n"),n("span",{class:"token punctuation"},"]")]),a(),n("span",{class:"token punctuation"},"|"),n("span",{class:"token punctuation"},">"),a(),n("span",{class:"token variable"},"map"),a(),n("span",{class:"token punctuation"},"="),n("span",{class:"token punctuation"},">"),a(),n("span",{class:"token punctuation"},"`"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"script"),a(),n("span",{class:"token variable"},"src"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"${it}"'),n("span",{class:"token punctuation"},">"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"script"),n("span",{class:"token punctuation"},">"),n("span",{class:"token punctuation"},"`"),a(),n("span",{class:"token punctuation"},"|"),n("span",{class:"token punctuation"},">"),a(),n("span",{class:"token variable"},"joinln"),a(),n("span",{class:"token punctuation"},"|"),n("span",{class:"token punctuation"},">"),a(),n("span",{class:"token variable"},"raw"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
`)])])])],-1),y=s(`__VP_STATIC_START__<h4 id="register-umd-module-mappings" tabindex="-1">Register UMD Module Mappings <a class="header-anchor" href="#register-umd-module-mappings" aria-hidden="true">#</a></h4><p>After importing the libraries we need to make the globals registered by the UMD dependencies available under the module name they are imported from. When they don&#39;t match they need to be explicitly registered in the <code>ALIASES</code> object:</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">var</span> <span class="token constant">ALIASES</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;vue&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token keyword">default</span><span class="token operator">:</span> Vue <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string">&#39;vue-router&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token keyword">default</span><span class="token operator">:</span> VueRouter <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string">&#39;vue-class-component&#39;</span><span class="token operator">:</span> VueClassComponent<span class="token punctuation">,</span>
    <span class="token string">&#39;vue-property-decorator&#39;</span><span class="token operator">:</span> VuePropertyDecorator<span class="token punctuation">,</span>
    <span class="token string">&#39;@servicestack/vue&#39;</span><span class="token operator">:</span> ServiceStackVue
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> global <span class="token operator">=</span> window<span class="token punctuation">;</span>
window<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
window<span class="token punctuation">.</span><span class="token function-variable function">require</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token constant">ALIASES</span><span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">||</span> exports<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">||</span> window<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">||</span> exports<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>Since <code>Vue</code> is imported as a <code>default</code> import:</p><div class="language-ts"><pre><code><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>
</code></pre></div><p>It&#39;s expected for <code>require(&quot;vue&quot;).default</code> to return the module <a href="https://github.com/NetCoreTemplates/vue-lite/blob/master/wwwroot/lib/vue/dist/vue.js#L9" target="_blank" rel="noopener noreferrer">assigned to the Vue global</a>:</p><div class="language-js"><pre><code><span class="token punctuation">(</span>global <span class="token operator">=</span> global <span class="token operator">||</span> self<span class="token punctuation">,</span> global<span class="token punctuation">.</span>Vue <span class="token operator">=</span> <span class="token function">factory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>Dependencies like <a href="https://github.com/NetCoreTemplates/vue-lite/blob/fb56cff8d704f7a066242b4f90708f92a58dbaab/wwwroot/lib/vue-property-decorator/vue-property-decorator.umd.js#L4" target="_blank" rel="noopener noreferrer">vue-property-decorator.umd.js</a> and <a href="https://github.com/NetCoreTemplates/vue-lite/blob/fb56cff8d704f7a066242b4f90708f92a58dbaab/wwwroot/lib/%40servicestack/client/servicestack-client.umd.js#L17" target="_blank" rel="noopener noreferrer">servicestack-client.umd.js</a> that already register themselves under their expected <code>&quot;vue-property-decorator&quot;</code> and <code>&quot;@servicestack/client&quot;</code> module names don&#39;t need any manual mappings.</p><h4 id="app-source-code-bundling" tabindex="-1">App Source Code Bundling <a class="header-anchor" href="#app-source-code-bundling" aria-hidden="true">#</a></h4><p>The last js bundle created is your App&#39;s source code which also needs to be imported in dependent order, both <a href="https://github.com/NetCoreTemplates/vue-lite" target="_blank" rel="noopener noreferrer">vue-lite</a> and <a href="https://github.com/NetCoreTemplates/react-lite" target="_blank" rel="noopener noreferrer">react-lite</a> project templates share the same structure so their bundle configuration is identical where <a href="https://github.com/NetCoreTemplates/vue-lite/tree/master/src/components" target="_blank" rel="noopener noreferrer">/src/components</a> contains each page defined as a separate component, the <a href="https://github.com/NetCoreTemplates/vue-lite/tree/master/src/shared" target="_blank" rel="noopener noreferrer">/src/shared</a> contains any shared functionality used by the different components whilst the base <a href="https://github.com/NetCoreTemplates/vue-lite/tree/master/src" target="_blank" rel="noopener noreferrer">/src</a> folder contains your App&#39;s entry point:</p>__VP_STATIC_END__`,10),q=n("div",null,[n("div",{class:"language-hbs"},[n("pre",{"v-pre":""},[n("code",null,[n("span",{class:"token delimiter punctuation"},"{{"),a(),n("span",{class:"token punctuation"},"["),a(`
    `),n("span",{class:"token string"},"'content:/src/components/'"),n("span",{class:"token punctuation"},","),a(`
    `),n("span",{class:"token string"},"'content:/src/shared/'"),n("span",{class:"token punctuation"},","),a(`
    `),n("span",{class:"token string"},"'content:/src/'"),n("span",{class:"token punctuation"},","),a(`
`),n("span",{class:"token punctuation"},"]"),a(),n("span",{class:"token punctuation"},"|"),a(),n("span",{class:"token variable"},"bundleJs"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token variable"},"minify"),n("span",{class:"token punctuation"},":"),n("span",{class:"token punctuation"},"!"),n("span",{class:"token variable"},"debug"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token variable"},"cache"),n("span",{class:"token punctuation"},":"),n("span",{class:"token punctuation"},"!"),n("span",{class:"token variable"},"debug"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token variable"},"disk"),n("span",{class:"token punctuation"},":"),n("span",{class:"token punctuation"},"!"),n("span",{class:"token variable"},"debug"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token variable"},"out"),n("span",{class:"token punctuation"},":"),n("span",{class:"token punctuation"},"`"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"js"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"bundle$"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token variable"},"min"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"."),n("span",{class:"token variable"},"js"),n("span",{class:"token punctuation"},"`"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
`)])])])],-1),S=s('',5),_=n("div",null,[n("div",{class:"language-hbs"},[n("pre",{"v-pre":""},[n("code",null,[n("span",{class:"token delimiter punctuation"},"{{"),a(),n("span",{class:"token variable"},"scripts"),a(),n("span",{class:"token punctuation"},"|"),a(),n("span",{class:"token variable"},"raw"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
`)])])])],-1),x=n("h3",{id:"pre-compiled-minified-production-bundles",tabindex:"-1"},[a("Pre-compiled minified production bundles "),n("a",{class:"header-anchor",href:"#pre-compiled-minified-production-bundles","aria-hidden":"true"},"#")],-1),T=n("p",null,[a("Whilst not required you can copy the "),n("strong",null,"exact same bundling configuration"),a(" in your "),n("code",null,"_layout.html"),a(" above into a separate "),n("a",{href:"https://github.com/NetCoreTemplates/vue-lite/blob/master/wwwroot/_bundle.ss",target:"_blank",rel:"noopener noreferrer"},"/wwwroot/_bundle.ss"),a(" script:")],-1),j=n("div",null,[n("div",{class:"language-js"},[n("pre",{"v-pre":""},[n("code",null,[n("span",{class:"token operator"},"*"),a(" run "),n("span",{class:"token keyword"},"in"),a(),n("span",{class:"token punctuation"},"."),a("csproj AfterPublish"),n("span",{class:"token punctuation"},","),a(" manual usage"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token string"},"x run _bundle.ss -to <path>"),n("span",{class:"token template-punctuation string"},"`")]),a(),n("span",{class:"token operator"},"*"),a(`

`),n("span",{class:"token keyword"},"let"),a(" dist "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token string"},"'[hash].min'"),a(`
`),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token punctuation"},"["),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token string"},"bundle"),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),a("dist"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"},".css"),n("span",{class:"token template-punctuation string"},"`")]),n("span",{class:"token punctuation"},","),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token string"},"bundle"),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),a("dist"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"},".js"),n("span",{class:"token template-punctuation string"},"`")]),n("span",{class:"token punctuation"},"]"),a(` 
   `),n("span",{class:"token operator"},"|"),n("span",{class:"token operator"},">"),a(),n("span",{class:"token parameter"},"map"),a(),n("span",{class:"token operator"},"=>"),a(" vfsContent"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"findFilesInDirectory"),n("span",{class:"token punctuation"},"("),a("to"),n("span",{class:"token punctuation"},","),a("it"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"replace"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'[hash]'"),n("span",{class:"token punctuation"},","),n("span",{class:"token string"},"'.*'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(`
   `),n("span",{class:"token operator"},"|"),n("span",{class:"token operator"},">"),a(` flat
   `),n("span",{class:"token operator"},"|"),n("span",{class:"token operator"},">"),a(),n("span",{class:"token parameter"},[n("span",{class:"token keyword"},"do")]),a(),n("span",{class:"token operator"},"=>"),a(" vfsContent"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"deleteFile"),n("span",{class:"token punctuation"},"("),a("it"),n("span",{class:"token punctuation"},"."),a("VirtualPath"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token punctuation"},"["),a(),n("span",{class:"token string"},"'content:/src/css/'"),a(),n("span",{class:"token punctuation"},"]"),a(),n("span",{class:"token operator"},"|"),n("span",{class:"token operator"},">"),a(),n("span",{class:"token function"},"bundleCss"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(" minify"),n("span",{class:"token operator"},":"),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),a(" disk"),n("span",{class:"token operator"},":"),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),a(" out"),n("span",{class:"token operator"},":"),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token string"},"content:"),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),a("to"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"},"/bundle"),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),a("dist"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"},".css"),n("span",{class:"token template-punctuation string"},"`")]),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`

`),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token punctuation"},"["),a(`
    `),n("span",{class:"token string"},"'content:/src/components/'"),n("span",{class:"token punctuation"},","),a(`
    `),n("span",{class:"token string"},"'content:/src/shared/'"),n("span",{class:"token punctuation"},","),a(`
    `),n("span",{class:"token string"},"'content:/src/'"),n("span",{class:"token punctuation"},","),a(`
`),n("span",{class:"token punctuation"},"]"),a(),n("span",{class:"token operator"},"|"),n("span",{class:"token operator"},">"),a(),n("span",{class:"token function"},"bundleJs"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(" minify"),n("span",{class:"token operator"},":"),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),a(" disk"),n("span",{class:"token operator"},":"),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),a(" out"),n("span",{class:"token operator"},":"),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token string"},"content:"),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),a("to"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"},"/bundle"),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),a("dist"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"},".js"),n("span",{class:"token template-punctuation string"},"`")]),n("span",{class:"token punctuation"},","),a(" iife"),n("span",{class:"token operator"},":"),n("span",{class:"token boolean"},"true"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
`)])])])],-1),C=s(`__VP_STATIC_START__<h4 id="bundling" tabindex="-1">Bundling <a class="header-anchor" href="#bundling" aria-hidden="true">#</a></h4><p>The integrated <code>.js</code> and <code>.css</code> bundling is configured to use a fast unminified in-memory bundle for an optimal development experience whilst it utilizes a an advanced minified bundle in production releases.</p><p>When publishing, the project&#39;s <strong>Bundle</strong> task:</p><div class="language-xml"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Target</span> <span class="token attr-name">Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Bundle<span class="token punctuation">&quot;</span></span> <span class="token attr-name">BeforeTargets</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>AfterPublish<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Exec</span> <span class="token attr-name">Command</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>x run _bundle.ss -to /bin/Release/netcoreapp3.1/publish/wwwroot<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Target</span><span class="token punctuation">&gt;</span></span>    
</code></pre></div><p>Runs <a href="https://github.com/NetCoreTemplates/vue-lite/blob/master/_bundle.ss" target="_blank" rel="noopener noreferrer">_bundle.ss</a> to produce an optimized, minified &amp; hashed bundle using ServiceStack&#39;s <a href="https://docs.servicestack.net/html-css-and-javascript-minification#optimal-library-bundles" target="_blank" rel="noopener noreferrer">built-in bundling</a> embedded in the <a href="https://docs.servicestack.net/dotnet-tool" target="_blank" rel="noopener noreferrer">dotnet tools</a> which is pre-configured to use <a href="https://github.com/xoofx/NUglify" target="_blank" rel="noopener noreferrer">NUglify&#39;s</a> advanced compression.</p><h3 id="publishing-and-deployment" tabindex="-1">Publishing and Deployment <a class="header-anchor" href="#publishing-and-deployment" aria-hidden="true">#</a></h3><p>The standard .NET Core tools can be used to publish:</p><div class="language-bash"><pre><code>$ dotnet publish -c Release
</code></pre></div><p>Then deploy as normal, e.g. via <a href="https://docs.servicestack.net/netcore-deploy-rsync" target="_blank" rel="noopener noreferrer">rsync deployments to Linux</a> or to an <a href="https://docs.servicestack.net/deploy-netcore-docker-aws-ecs" target="_blank" rel="noopener noreferrer">AWS EC2 container using Docker</a>.</p><h2 id="configure-nuglify" tabindex="-1">Configure NUglify <a class="header-anchor" href="#configure-nuglify" aria-hidden="true">#</a></h2><p>You can configure your ServiceStack App to use Nuglify&#39;s Advanced HTML, CSS, JS Minifiers using <a href="/mix-tool.html">mix</a> with:</p><div class="language-bash"><pre><code>$ x mix nuglify 
</code></pre></div><p>Which will write <a href="https://gist.github.com/gistlyn/4bdb79d21f199c22b8a86f032c186e2d" target="_blank" rel="noopener noreferrer">Configure.Nuglify.cs</a> to your <strong>HOST</strong> project.</p><h3 id="using-cache-breakers-in-minified-bundles" tabindex="-1">Using Cache breakers in minified bundles <a class="header-anchor" href="#using-cache-breakers-in-minified-bundles" aria-hidden="true">#</a></h3><p>Cache Breaker support is available using the <code>[hash]</code> placeholder, which we only want to include in minified bundles. In this case we need to perform a file pattern search to find and delete any existing generated bundles.</p><p>When using <code>[hash]</code> cache breakers the bundle APIs will use any existing generated bundles it finds, so you&#39;ll need to ensure that any older minified assets are removed (as done in the above script).</p><h3 id="available-in-razor-helpers" tabindex="-1">Available in Razor Helpers <a class="header-anchor" href="#available-in-razor-helpers" aria-hidden="true">#</a></h3><p>The same <code>Html.BundleJs()</code>, <code>Html.BundleCss()</code> and <code>Html.BundleHtml()</code> bundling implementations as above have also been available in ServiceStack Razor where it can be used like:</p><div class="language-csharp"><pre><code>@Html<span class="token punctuation">.</span><span class="token function">BundleJs</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">BundleOptions</span> <span class="token punctuation">{</span>
    Sources <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;content:/src/components/&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;content:/src/shared/&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;content:/src/&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    Minify <span class="token operator">=</span> <span class="token operator">!</span>DebugMode<span class="token punctuation">,</span>
    Cache <span class="token operator">=</span> <span class="token operator">!</span>DebugMode<span class="token punctuation">,</span>
    SaveToDisk <span class="token operator">=</span> <span class="token operator">!</span>DebugMode<span class="token punctuation">,</span>
    OutputTo <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">$&quot;/js/bundle</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">min</span><span class="token punctuation">}</span></span><span class="token string">.js&quot;</span></span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="empty-memoryvirtualfiles-now-registered-in-virtualfilesources" tabindex="-1">Empty MemoryVirtualFiles now registered in VirtualFileSources <a class="header-anchor" href="#empty-memoryvirtualfiles-now-registered-in-virtualfilesources" aria-hidden="true">#</a></h3><p>To enable <strong>shadowing</strong> of the <code>WebRoot</code> cascading Virtual File Sources, an empty <code>MemoryVirtualFiles</code> has been added to <code>InsertVirtualFileSources</code> by default where it gets inserted at the start of <code>VirtualFileSources</code>, i.e:</p><div class="language-csharp"><pre><code><span class="token keyword">new</span> <span class="token constructor-invocation class-name">AppHost</span> <span class="token punctuation">{</span>
    InsertVirtualFileSources <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MemoryVirtualFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span> 
<span class="token punctuation">}</span>
</code></pre></div><p>If needed, the individual Memory and FileSystem VFS providers in the WebRoot VFS Sources can be accessed with:</p><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> memFs <span class="token operator">=</span> appHost<span class="token punctuation">.</span>VirtualFileSources<span class="token punctuation">.</span><span class="token function">GetMemoryVirtualFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> diskFs <span class="token operator">=</span> appHost<span class="token punctuation">.</span>VirtualFileSources<span class="token punctuation">.</span><span class="token function">GetFileSystemVirtualFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>Which are also available from the <code>HostContext</code> singleton:</p><ul><li><code>HostContext.MemoryVirtualFiles</code> - <strong>WebRoot</strong> MemoryVirtualFiles</li><li><code>HostContext.FileSystemVirtualFiles</code> - <strong>WebRoot</strong> FileSystem</li></ul><p>The <strong>WebRoot</strong> Directory and <strong>ContentRoot</strong> Directories are also available from:</p><ul><li><code>HostContext.RootDirectory</code> - <strong>WebRoot</strong> <code>wwwroot/</code></li><li><code>HostContext.ContentRootDirectory</code> - <strong>ContentRoot</strong> <code>/</code></li></ul><h3 id="vue-lite-project-template-features" tabindex="-1">vue-lite Project Template features <a class="header-anchor" href="#vue-lite-project-template-features" aria-hidden="true">#</a></h3><p><strong>vue-lite</strong> comes pre-configured with a lot of the functionality needed in most Single Page Apps including client-side routing in <a href="https://github.com/NetCoreTemplates/vue-lite/blob/master/src/shared/router.ts" target="_blank" rel="noopener noreferrer">/shared/router.ts</a> and <a href="https://github.com/NetCoreTemplates/vue-lite/blob/master/src/components/SignIn.ts" target="_blank" rel="noopener noreferrer">Sign In</a> and <a href="https://github.com/NetCoreTemplates/vue-lite/blob/master/src/components/SignUp.ts" target="_blank" rel="noopener noreferrer">Registration</a> pages, both of which are integrated with ServiceStack&#39;s declarative form validation and auto-binding.</p><h4 id="form-validation-example" tabindex="-1">Form Validation Example <a class="header-anchor" href="#form-validation-example" aria-hidden="true">#</a></h4><p>The <a href="https://github.com/NetCoreTemplates/vue-lite/blob/master/src/components/SignUp.ts" target="_blank" rel="noopener noreferrer">Sign Up</a> Page shows a typical example of auto-form validation with ServiceStack which can be developed using clean declarative markup:</p><div class="language-html"><pre><code>@Component({ template: 
    \`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>Register New User<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@submit.prevent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ error:responseStatus, loading }<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ErrorSummary</span> <span class="token attr-name">except</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>displayName,email,password,confirmPassword<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:responseStatus</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>responseStatus<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>    
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Input</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>displayName<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>displayName<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Display Name<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:responseStatus</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>responseStatus<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Input</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>email<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>email<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Email<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:responseStatus</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>responseStatus<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:responseStatus</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>responseStatus<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>confirmPassword<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>confirmPassword<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:responseStatus</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>responseStatus<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CheckBox</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>autoLogin<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>autoLogin<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:responseStatus</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>responseStatus<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                    Auto Login
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CheckBox</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-lg btn-primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Register<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pt-3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">&gt;</span></span>Quick Populate:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pt-1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-outline-info btn-sm<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>javascript:void(0)<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@click.prevent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>newUser(<span class="token punctuation">&#39;</span>new@user.com<span class="token punctuation">&#39;</span>)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>new@user.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\`
})
</code></pre></div><p>Which renders into the following Bootstrap Form UI:</p><p><a href="http://vue-lite.web-templates.io/signup" target="_blank" rel="noopener noreferrer"><img src="https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/spa/vue-lite-registration.png" alt=""></a></p><p>All custom controls used are defined in <a href="https://github.com/NetCoreTemplates/vue-lite/blob/master/src/shared/controls.ts" target="_blank" rel="noopener noreferrer">/shared/controls.ts</a> which encapsulate the label and input controls and their validation error bindings within reusable Vue components.</p><h3 id="validation-error-binding" tabindex="-1">Validation Error Binding <a class="header-anchor" href="#validation-error-binding" aria-hidden="true">#</a></h3><p>All validation errors are sourced from the Component&#39;s <code>this.responseStatus</code> reactive property, populated by any Exception&#39;s thrown when using the <a href="/typescript-add-servicestack-reference.html#typescript-serviceclient">ServiceStack&#39;s TypeScript JsonServiceClient</a> which in this case is used to Register the user by sending the <code>Register</code> Request DTO generated in <a href="https://github.com/NetCoreTemplates/vue-lite/blob/master/src/shared/dtos.ts" target="_blank" rel="noopener noreferrer">/shared/dtos.ts</a>:</p><div class="language-ts"><pre><code><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">SignUp</span> <span class="token keyword">extends</span> <span class="token class-name">Vue</span> <span class="token punctuation">{</span>
    displayName <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
    email <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
    password <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
    confirmPassword <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
    autoLogin <span class="token operator">=</span> <span class="token boolean">true</span>
    loading <span class="token operator">=</span> <span class="token boolean">false</span>
    responseStatus <span class="token operator">=</span> <span class="token keyword">null</span>

    <span class="token keyword">async</span> <span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>loading <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>responseStatus <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

            <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Register</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                displayName<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>displayName<span class="token punctuation">,</span>
                email<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>email<span class="token punctuation">,</span>
                password<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>password<span class="token punctuation">,</span>
                confirmPassword<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>confirmPassword<span class="token punctuation">,</span>
                autoLogin<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>autoLogin<span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            
            <span class="token keyword">await</span> <span class="token function">checkAuth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>responseStatus <span class="token operator">=</span> e<span class="token punctuation">.</span>responseStatus <span class="token operator">||</span> e<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>loading <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token function">newUser</span><span class="token punctuation">(</span>email<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> names <span class="token operator">=</span> email<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;@&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>displayName <span class="token operator">=</span> <span class="token function">toPascalCase</span><span class="token punctuation">(</span>names<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> <span class="token function">toPascalCase</span><span class="token punctuation">(</span><span class="token function">splitOnFirst</span><span class="token punctuation">(</span>names<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>email <span class="token operator">=</span> email<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>password <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>confirmPassword <span class="token operator">=</span> <span class="token string">&#39;p@55wOrd&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>This is all it takes to render any server validation errors against their respective fields which we can test by submitting an empty form:</p><p><a href="http://vue-lite.web-templates.io/signup" target="_blank" rel="noopener noreferrer"><img src="https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/spa/vue-lite-registration-validation.png" alt=""></a></p><h3 id="vue-global-state-management" tabindex="-1">Vue Global State Management <a class="header-anchor" href="#vue-global-state-management" aria-hidden="true">#</a></h3><p>Instead of immediately reaching for <a href="https://vuex.vuejs.org" target="_blank" rel="noopener noreferrer">Vuex</a>, we&#39;ve kept the templates &quot;lite&quot; by leveraging existing functionality built into the core libraries. So for global state management we&#39;re using a global <code>Vue</code> instance as a pub/sub <code>EventBus</code> that our decoupled components use to update global state and listen for events.</p><p>This is used by <code>checkAuth</code> to post an empty <code>Authenticate</code> DTO to ServiceStack to check if the user is still authenticated on the server, which depending if they&#39;re Authenticated will either returns basic session info or fails with a <code>401</code> error response, which the pub/sub event listeners use to update global its state:</p><div class="language-ts"><pre><code><span class="token keyword">export</span> <span class="token keyword">const</span> store<span class="token operator">:</span>Store <span class="token operator">=</span> <span class="token punctuation">{</span>
    isAuthenticated<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    userSession<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">EventBus</span> <span class="token keyword">extends</span> <span class="token class-name">Vue</span> <span class="token punctuation">{</span>
    store <span class="token operator">=</span> store
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">var</span> bus <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EventBus</span><span class="token punctuation">(</span><span class="token punctuation">{</span> data<span class="token operator">:</span> store <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

bus<span class="token punctuation">.</span><span class="token function">$on</span><span class="token punctuation">(</span><span class="token string">&#39;signin&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>userSession<span class="token operator">:</span>AuthenticateResponse<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    bus<span class="token punctuation">.</span><span class="token function">$set</span><span class="token punctuation">(</span>store<span class="token punctuation">,</span> <span class="token string">&#39;isAuthenticated&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    bus<span class="token punctuation">.</span><span class="token function">$set</span><span class="token punctuation">(</span>store<span class="token punctuation">,</span> <span class="token string">&#39;userSession&#39;</span><span class="token punctuation">,</span> userSession<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">checkAuth</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        bus<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&#39;signin&#39;</span><span class="token punctuation">,</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Authenticate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        bus<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&#39;signout&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="react-lite-project-template-features" tabindex="-1">react-lite Project Template features <a class="header-anchor" href="#react-lite-project-template-features" aria-hidden="true">#</a></h3><p>The <a href="https://github.com/NetCoreTemplates/react-lite" target="_blank" rel="noopener noreferrer">react-lite</a> template is functionality equivalent to <strong>vue-lite</strong> but created using the latest React features. For client-side routing we use React Router&#39;s declarative markup defined in <a href="https://github.com/NetCoreTemplates/react-lite/blob/master/src/main.tsx" target="_blank" rel="noopener noreferrer">main.tsx</a>.</p><p>All components are written as Functional Components and makes use of <a href="https://reactjs.org/docs/hooks-intro.html" target="_blank" rel="noopener noreferrer">React&#39;s new Hooks functionality</a> which enable functional components to retain local state. Just like <strong>vue-lite</strong> all high-level controls are encapsulated into reusable functional components defined in <a href="https://github.com/NetCoreTemplates/react-lite/blob/master/src/shared/controls.tsx" target="_blank" rel="noopener noreferrer">/shared/controls.tsx</a> which ends up retaining similar markup as <strong>vue-lite</strong> despite their completely different implementations:</p><div class="language-tsx"><pre><code><span class="token keyword">export</span> <span class="token keyword">const</span> SignUpImpl<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token constant">SFC</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> history <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span>state<span class="token punctuation">,</span> dispatch<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useContext</span><span class="token punctuation">(</span>StateContext<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> <span class="token punctuation">[</span>loading<span class="token punctuation">,</span> setLoading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>responseStatus<span class="token punctuation">,</span> setResponseStatus<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> <span class="token punctuation">[</span>displayName<span class="token punctuation">,</span> setDisplayName<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>email<span class="token punctuation">,</span> setEmail<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>password<span class="token punctuation">,</span> setPassword<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>confirmPassword<span class="token punctuation">,</span> setConfirmPassword<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>autoLogin<span class="token punctuation">,</span> setAutoLogin<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> <span class="token function-variable function">newUser</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">email<span class="token operator">:</span>string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> names <span class="token operator">=</span> email<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;@&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setDisplayName</span><span class="token punctuation">(</span><span class="token function">toPascalCase</span><span class="token punctuation">(</span>names<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> <span class="token function">toPascalCase</span><span class="token punctuation">(</span><span class="token function">splitOnFirst</span><span class="token punctuation">(</span>names<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setEmail</span><span class="token punctuation">(</span>email<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setPassword</span><span class="token punctuation">(</span><span class="token string">&#39;p@55wOrd&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setConfirmPassword</span><span class="token punctuation">(</span><span class="token string">&#39;p@55wOrd&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">const</span> <span class="token function-variable function">submit</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">setResponseStatus</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Register</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                displayName<span class="token punctuation">,</span>
                email<span class="token punctuation">,</span>
                password<span class="token punctuation">,</span>
                confirmPassword<span class="token punctuation">,</span>
                autoLogin<span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            
            <span class="token keyword">await</span> <span class="token function">checkAuth</span><span class="token punctuation">(</span>dispatch<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token punctuation">(</span>history <span class="token keyword">as</span> History<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">setResponseStatus</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>responseStatus <span class="token operator">||</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Register New User</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">classNames</span><span class="token punctuation">(</span><span class="token punctuation">{</span>error<span class="token operator">:</span>responseStatus<span class="token punctuation">,</span> loading<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span> 
              <span class="token attr-name">onSubmit</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">async</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">await</span> <span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ErrorSummary</span></span> <span class="token attr-name">responseStatus</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>responseStatus<span class="token punctuation">}</span></span> <span class="token attr-name">except</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token string">&#39;displayName,email,password,confirmPassword&#39;</span><span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Input</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>displayName<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>displayName<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>setDisplayName<span class="token punctuation">}</span></span> <span class="token attr-name">responseStatus</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>responseStatus<span class="token punctuation">}</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Display Name<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Input</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>email<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>email<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>setEmail<span class="token punctuation">}</span></span> <span class="token attr-name">responseStatus</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>responseStatus<span class="token punctuation">}</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Email<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Input</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>password<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>setPassword<span class="token punctuation">}</span></span> <span class="token attr-name">responseStatus</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>responseStatus<span class="token punctuation">}</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Password<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Input</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>confirmPassword<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>confirmPassword<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>setConfirmPassword<span class="token punctuation">}</span></span> <span class="token attr-name">responseStatus</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>responseStatus<span class="token punctuation">}</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Confirm<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CheckBox</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>autoLogin<span class="token punctuation">&quot;</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>autoLogin<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>setAutoLogin<span class="token punctuation">}</span></span> <span class="token attr-name">responseStatus</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>responseStatus<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
                    Auto Login
                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">CheckBox</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-lg btn-primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Register</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pt-3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Quick Populate:</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pt-1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
                    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-outline-info btn-sm<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>javascript:void(0)<span class="token punctuation">&quot;</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">newUser</span><span class="token punctuation">(</span><span class="token string">&#39;new@user.com&#39;</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">new@user.com</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> SignUp <span class="token operator">=</span> <span class="token function">withRouter</span><span class="token punctuation">(</span>SignUpImpl<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>Which renders the same Bootstrap form UI:</p><p><a href="http://react-lite.web-templates.io/signup" target="_blank" rel="noopener noreferrer"><img src="https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/spa/react-lite-registration.png" alt=""></a></p><p>Despite React and Vue&#39;s stylistic differences the ServiceStack integration remains the same where the populated <code>Register</code> Request DTO in <a href="https://github.com/NetCoreTemplates/react-lite/blob/master/src/shared/dtos.ts" target="_blank" rel="noopener noreferrer">/shared/dtos.ts</a> is used to register the User with any failures used to populate the <code>responseStatus</code> local state where it&#39;s reactively referenced in all Input components to render field validation errors against their targeted control:</p><p><a href="http://react-lite.web-templates.io/signup" target="_blank" rel="noopener noreferrer"><img src="https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/spa/react-lite-registration-validation.png" alt=""></a></p><h3 id="react-global-state-management" tabindex="-1">React Global State Management <a class="header-anchor" href="#react-global-state-management" aria-hidden="true">#</a></h3><p>Likewise with global state management we&#39;ve leveraged existing functionality instead of depending on an external state library like Redux or MobX.</p><p>Instead <strong>react-lite</strong> use React&#39;s new <code>useReducer</code> hook within a global <code>StateContext</code> which is made available to all components using <a href="https://reactjs.org/docs/context.html" target="_blank" rel="noopener noreferrer">React&#39;s Context</a> where they&#39;re used to dispatch actions that mutate global state:</p><div class="language-ts"><pre><code><span class="token keyword">const</span> initialState<span class="token operator">:</span> State <span class="token operator">=</span> <span class="token punctuation">{</span>
  isAuthenticated<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  userSession<span class="token operator">:</span> <span class="token keyword">null</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">reducer</span> <span class="token operator">=</span> <span class="token punctuation">(</span>state<span class="token operator">:</span>State<span class="token punctuation">,</span> action<span class="token operator">:</span>Action<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>action<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token string">&#39;signin&#39;</span><span class="token operator">:</span>
            <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token operator">...</span>state<span class="token punctuation">,</span> isAuthenticated<span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span> userSession<span class="token operator">:</span>action<span class="token punctuation">.</span>data <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token string">&#39;signout&#39;</span><span class="token operator">:</span>
            <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token operator">...</span>state<span class="token punctuation">,</span> isAuthenticated<span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span> userSession<span class="token operator">:</span><span class="token keyword">null</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">default</span><span class="token operator">:</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> StateContext <span class="token operator">=</span> <span class="token function">createContext</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token keyword">as</span> Context<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">StateProvider</span> <span class="token operator">=</span> <span class="token punctuation">(</span>props<span class="token operator">:</span><span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>state<span class="token punctuation">,</span> dispatch<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useReducer</span><span class="token punctuation">(</span>reducer<span class="token punctuation">,</span> initialState<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>StateContext<span class="token punctuation">.</span>Provider value<span class="token operator">=</span><span class="token punctuation">{</span> <span class="token punctuation">{</span> state<span class="token punctuation">,</span> dispatch <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>children<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>StateContext<span class="token punctuation">.</span>Provider<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">Dispatch</span> <span class="token operator">=</span> React<span class="token punctuation">.</span>Dispatch<span class="token operator">&lt;</span>Action<span class="token operator">&gt;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">checkAuth</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>dispatch<span class="token operator">:</span>Dispatch<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&#39;signin&#39;</span><span class="token punctuation">,</span> data<span class="token operator">:</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Authenticate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&#39;signout&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="lite-project-structure" tabindex="-1">&quot;lite&quot; Project Structure <a class="header-anchor" href="#lite-project-structure" aria-hidden="true">#</a></h3><p>Unlike most other project templates which follow our <a href="/physical-project-structure.html">Recommended Physical Project Structure</a>, the &quot;lite&quot; project templates are all within a single project as it&#39;s more suitable for smaller projects and can be developed using lightweight IDE&#39;s like VS Code which doesn&#39;t work well with multi-project solutions.</p><p>So what would&#39;ve been separate projects are being maintained separate folders:</p><ul><li><a href="https://github.com/NetCoreTemplates/vue-lite/tree/master/ServiceInterface" target="_blank" rel="noopener noreferrer">ServiceInterface/</a></li><li><a href="https://github.com/NetCoreTemplates/vue-lite/tree/master/ServiceModel" target="_blank" rel="noopener noreferrer">ServiceModel/</a></li></ul><p>Where they still retain the same source code and namespaces and can be easily be moved out into a different project when wanting to upgrade to a multi-project solution.</p><h3 id="updating-lite-project-dependencies" tabindex="-1">Updating &quot;lite&quot; project dependencies <a class="header-anchor" href="#updating-lite-project-dependencies" aria-hidden="true">#</a></h3><p>We&#39;ve also enabled a novel approach for updating your &quot;lite&quot; project 3rd Party dependencies where instead of everyone maintaining their own bespoke configuration and a tool like <strong>libman</strong> for updating their local dependencies, <strong>vue-lite</strong> projects can simplify update their NuGet dependencies which will automatically upgrade <strong>ServiceStack.Desktop</strong> containing all the Vue, React, Bootstrap .js &amp; .css library dependencies.</p>__VP_STATIC_END__`,64),A=[c,l,u,i,r,k,d,g,h,m,b,v,f,w,y,q,S,_,x,T,j,C];function N(P,V,R,I,D,F){return p(),e("div",null,A)}var L=t(o,[["render",N]]);export{B as __pageData,L as default};
