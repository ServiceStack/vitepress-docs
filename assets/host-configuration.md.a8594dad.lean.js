import{_ as n,c as s,o as a,b as t,a as p}from"./app.14440598.js";const f='{"title":"AppHost Configuration","description":"","frontmatter":{"slug":"host-configuration","title":"AppHost Configuration"},"headers":[{"level":3,"title":"Anatomy of a ServiceStack AppHost","slug":"anatomy-of-a-servicestack-apphost"},{"level":3,"title":"Physical Project Structure","slug":"physical-project-structure"},{"level":3,"title":"Register AppHost in .NET Core","slug":"register-apphost-in-net-core"},{"level":3,"title":"Run AppHost in .NET Framework","slug":"run-apphost-in-net-framework"},{"level":3,"title":"IOC Registration","slug":"ioc-registration"},{"level":3,"title":"Modularizing Services","slug":"modularizing-services"},{"level":3,"title":"Default HostConfig","slug":"default-hostconfig"},{"level":2,"title":"Configure Logging","slug":"configure-logging"},{"level":2,"title":"Testing","slug":"testing"}],"relativePath":"host-configuration.md","lastUpdated":1634495307618}',o={},e=t("iframe",{class:"mt-4",width:"896",height:"525",src:"https://www.youtube.com/embed/mOpx5mUGoqI",frameborder:"0",allow:"autoplay; encrypted-media",allowfullscreen:""},null,-1),c=p(`__VP_STATIC_START__<div class="info custom-block"><p class="custom-block-title">YouTube</p><p><a href="https://youtu.be/mOpx5mUGoqI" target="_blank" rel="noopener noreferrer">youtu.be/mOpx5mUGoqI</a></p></div><h3 id="anatomy-of-a-servicestack-apphost" tabindex="-1">Anatomy of a ServiceStack AppHost <a class="header-anchor" href="#anatomy-of-a-servicestack-apphost" aria-hidden="true">#</a></h3><p>All ServiceStack App&#39;s are configured within an AppHost which typically consists of the following elements:</p><div class="language-csharp"><pre><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AppHost</span> 
  <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">AppHostBase</span></span>                       <span class="token comment">// Type of AppHost used, normally AppHostBase</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">AppHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">base</span><span class="token punctuation">(</span>
      <span class="token string">&quot;MyApp&quot;</span><span class="token punctuation">,</span>                        <span class="token comment">// Service Name in Metadata Pages</span>
      <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">MyServices</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Assembly<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment">// The ServiceInterfaces Assemblies where all Services are located</span>

    <span class="token comment">// Configure your AppHost with the necessary configuration and dependencies your App needs</span>
    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Configure</span><span class="token punctuation">(</span><span class="token class-name">Container</span> container<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// Set Global AppHost Configuration</span>
        <span class="token keyword">base</span><span class="token punctuation">.</span><span class="token function">SetConfig</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">HostConfig</span>
        <span class="token punctuation">{</span>
            DebugMode <span class="token operator">=</span> AppSettings<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>HostConfig<span class="token punctuation">.</span>DebugMode<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//Register IOC Dependencies</span>
        container<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Register</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IRedisClientsManager<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>c <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">RedisManagerPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Add Plugins to extend your App with additional functionality</span>
        Plugins<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">AutoQueryFeature</span> <span class="token punctuation">{</span> 
            MaxLimit <span class="token operator">=</span> <span class="token number">100</span>  <span class="token comment">// Feature specific configuration</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p><a href="/debugging.html#debugmode">DebugMode</a> should be not be <code>true</code> when deployed to production.</p></div><h3 id="physical-project-structure" tabindex="-1">Physical Project Structure <a class="header-anchor" href="#physical-project-structure" aria-hidden="true">#</a></h3><p>See <a href="/physical-project-structure.html">Physical Project Structure</a> docs to learn about ServiceStack&#39;s Solution layout.</p><h3 id="register-apphost-in-net-core" tabindex="-1">Register AppHost in .NET Core <a class="header-anchor" href="#register-apphost-in-net-core" aria-hidden="true">#</a></h3><p>In <a href="http://ASP.NET" target="_blank" rel="noopener noreferrer">ASP.NET</a> Core, ServiceStack&#39;s AppHost is registered as middleware:</p><div class="language-csharp"><pre><code><span class="token comment">// This method gets called by the runtime. Use this method to configure the HTTP request pipeline.</span>
<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Configure</span><span class="token punctuation">(</span><span class="token class-name">IApplicationBuilder</span> app<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">//Register your ServiceStack AppHost as a .NET Core module</span>
    app<span class="token punctuation">.</span><span class="token function">UseServiceStack</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">AppHost</span> <span class="token punctuation">{</span> 
        <span class="token comment">// Use ASP.NET Core configuration sources, e.g. **appsettings.json**</span>
        AppSettings <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">NetCoreAppSettings</span><span class="token punctuation">(</span>Configuration<span class="token punctuation">)</span> 
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
</code></pre></div><p>See <a href="/netcore.html">.NET Core docs</a> for more info on using ServiceStack on .NET Core.</p><h3 id="run-apphost-in-net-framework" tabindex="-1">Run AppHost in .NET Framework <a class="header-anchor" href="#run-apphost-in-net-framework" aria-hidden="true">#</a></h3><div class="language-csharp"><pre><code><span class="token keyword">new</span> <span class="token constructor-invocation class-name">AppHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="ioc-registration" tabindex="-1">IOC Registration <a class="header-anchor" href="#ioc-registration" aria-hidden="true">#</a></h3><p>See <a href="/ioc.html">IOC docs</a> for an overview of the APIs and behavior of ServiceStack&#39;s built-in Funq IOC.</p><h3 id="modularizing-services" tabindex="-1">Modularizing Services <a class="header-anchor" href="#modularizing-services" aria-hidden="true">#</a></h3><p>See <a href="/modularizing-services.html">Modularizing Services</a> for info on Modularizing functionality in your AppHost.</p><h3 id="default-hostconfig" tabindex="-1">Default HostConfig <a class="header-anchor" href="#default-hostconfig" aria-hidden="true">#</a></h3><p>The default configuration for ServiceStack&#39;s <code>HostConfig</code>, for the most up to date version see <a href="https://github.com/ServiceStack/ServiceStack/blob/master/src/ServiceStack/HostConfig.cs" target="_blank" rel="noopener noreferrer">HostConfig.cs</a>:</p><div class="language-csharp"><pre><code><span class="token function">SetConfig</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">HostConfig</span> <span class="token punctuation">{</span>
    WsdlServiceNamespace <span class="token operator">=</span> <span class="token string">&quot;http://schemas.servicestack.net/types&quot;</span><span class="token punctuation">,</span>
    ApiVersion <span class="token operator">=</span> <span class="token string">&quot;1.0&quot;</span><span class="token punctuation">,</span>
    EmbeddedResourceSources <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>Assembly<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    EmbeddedResourceBaseTypes <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> HostContext<span class="token punctuation">.</span>AppHost<span class="token punctuation">.</span><span class="token function">GetType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">Service</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    EmbeddedResourceTreatAsFiles <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">HashSet<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    EnableAccessRestrictions <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    EnableAutoHtmlResponses <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    WebHostPhysicalPath <span class="token operator">=</span> <span class="token string">&quot;~&quot;</span><span class="token punctuation">.</span><span class="token function">MapServerPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    HandlerFactoryPath <span class="token operator">=</span> ServiceStackPath<span class="token punctuation">,</span>
    MetadataRedirectPath <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    DefaultContentType <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    PreferredContentTypes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
        MimeTypes<span class="token punctuation">.</span>Html<span class="token punctuation">,</span> MimeTypes<span class="token punctuation">.</span>Json<span class="token punctuation">,</span> MimeTypes<span class="token punctuation">.</span>Xml<span class="token punctuation">,</span> MimeTypes<span class="token punctuation">.</span>Jsv
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    AllowJsonpRequests <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    AllowRouteContentTypeExtensions <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    UseHttpOnlyCookies <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token comment">//default ;HttpOnly</span>
    UseSecureCookies <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token comment">//default ;Secure (https)</span>
    UseSameSiteCookies <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">//default ;SameSite=Lax</span>
    DebugMode <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    StrictMode <span class="token operator">=</span> Env<span class="token punctuation">.</span>StrictMode<span class="token punctuation">,</span>
    DefaultDocuments <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
        <span class="token string">&quot;default.htm&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;default.html&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;default.cshtml&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;default.md&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;index.htm&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;index.html&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;default.aspx&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;default.ashx&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    GlobalResponseHeaders <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
        <span class="token punctuation">{</span> <span class="token string">&quot;Vary&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Accept&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span> <span class="token string">&quot;X-Powered-By&quot;</span><span class="token punctuation">,</span> Env<span class="token punctuation">.</span>ServerUserAgent <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    IsMobileRegex <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Regex</span><span class="token punctuation">(</span><span class="token string">&quot;Mobile|iP(hone|od|ad)|Android|BlackBerry|IEMobile|Kindle|(hpw|web)OS|Fennec|&quot;</span> 
                     <span class="token operator">+</span> <span class="token string">&quot;Minimo|Opera M(obi|ini)|Blazer|Dolfin|Dolphin|Skyfire|Zune&quot;</span><span class="token punctuation">,</span> RegexOptions<span class="token punctuation">.</span>Compiled<span class="token punctuation">)</span><span class="token punctuation">,</span>
    RequestRules <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> Func<span class="token punctuation">&lt;</span>IHttpRequest<span class="token punctuation">,</span> <span class="token keyword">bool</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
        <span class="token punctuation">{</span><span class="token string">&quot;AcceptsHtml&quot;</span><span class="token punctuation">,</span> req <span class="token operator">=&gt;</span> req<span class="token punctuation">.</span>Accept<span class="token punctuation">?.</span><span class="token function">IndexOf</span><span class="token punctuation">(</span>MimeTypes<span class="token punctuation">.</span>Html<span class="token punctuation">,</span> StringComparison<span class="token punctuation">.</span>Ordinal<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span><span class="token string">&quot;AcceptsJson&quot;</span><span class="token punctuation">,</span> req <span class="token operator">=&gt;</span> req<span class="token punctuation">.</span>Accept<span class="token punctuation">?.</span><span class="token function">IndexOf</span><span class="token punctuation">(</span>MimeTypes<span class="token punctuation">.</span>Json<span class="token punctuation">,</span> StringComparison<span class="token punctuation">.</span>Ordinal<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span><span class="token string">&quot;AcceptsXml&quot;</span><span class="token punctuation">,</span> req <span class="token operator">=&gt;</span> req<span class="token punctuation">.</span>Accept<span class="token punctuation">?.</span><span class="token function">IndexOf</span><span class="token punctuation">(</span>MimeTypes<span class="token punctuation">.</span>Xml<span class="token punctuation">,</span> StringComparison<span class="token punctuation">.</span>Ordinal<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span><span class="token string">&quot;AcceptsJsv&quot;</span><span class="token punctuation">,</span> req <span class="token operator">=&gt;</span> req<span class="token punctuation">.</span>Accept<span class="token punctuation">?.</span><span class="token function">IndexOf</span><span class="token punctuation">(</span>MimeTypes<span class="token punctuation">.</span>Jsv<span class="token punctuation">,</span> StringComparison<span class="token punctuation">.</span>Ordinal<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span><span class="token string">&quot;AcceptsCsv&quot;</span><span class="token punctuation">,</span> req <span class="token operator">=&gt;</span> req<span class="token punctuation">.</span>Accept<span class="token punctuation">?.</span><span class="token function">IndexOf</span><span class="token punctuation">(</span>MimeTypes<span class="token punctuation">.</span>Csv<span class="token punctuation">,</span> StringComparison<span class="token punctuation">.</span>Ordinal<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span><span class="token string">&quot;IsAuthenticated&quot;</span><span class="token punctuation">,</span> req <span class="token operator">=&gt;</span> req<span class="token punctuation">.</span><span class="token function">IsAuthenticated</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span><span class="token string">&quot;IsMobile&quot;</span><span class="token punctuation">,</span> req <span class="token operator">=&gt;</span> Instance<span class="token punctuation">.</span>IsMobileRegex<span class="token punctuation">.</span><span class="token function">IsMatch</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>UserAgent<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span><span class="token string">&quot;{int}/**&quot;</span><span class="token punctuation">,</span> req <span class="token operator">=&gt;</span> <span class="token keyword">int</span><span class="token punctuation">.</span><span class="token function">TryParse</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>PathInfo<span class="token punctuation">.</span><span class="token function">Substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">LeftPart</span><span class="token punctuation">(</span><span class="token string character">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">out</span> _<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span><span class="token string">&quot;path/{int}/**&quot;</span><span class="token punctuation">,</span> req <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">var</span></span> afterFirst <span class="token operator">=</span> req<span class="token punctuation">.</span>PathInfo<span class="token punctuation">.</span><span class="token function">Substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">RightPart</span><span class="token punctuation">(</span><span class="token string character">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token operator">!</span><span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">IsNullOrEmpty</span><span class="token punctuation">(</span>afterFirst<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">int</span><span class="token punctuation">.</span><span class="token function">TryParse</span><span class="token punctuation">(</span>afterFirst<span class="token punctuation">.</span><span class="token function">LeftPart</span><span class="token punctuation">(</span><span class="token string character">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">out</span> _<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span><span class="token string">&quot;**/{int}&quot;</span><span class="token punctuation">,</span> req <span class="token operator">=&gt;</span> <span class="token keyword">int</span><span class="token punctuation">.</span><span class="token function">TryParse</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>PathInfo<span class="token punctuation">.</span><span class="token function">LastRightPart</span><span class="token punctuation">(</span><span class="token string character">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">out</span> _<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span><span class="token string">&quot;**/{int}/path&quot;</span><span class="token punctuation">,</span> req <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">var</span></span> beforeLast <span class="token operator">=</span> req<span class="token punctuation">.</span>PathInfo<span class="token punctuation">.</span><span class="token function">LastLeftPart</span><span class="token punctuation">(</span><span class="token string character">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token operator">!</span><span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">IsNullOrEmpty</span><span class="token punctuation">(</span>beforeLast<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">int</span><span class="token punctuation">.</span><span class="token function">TryParse</span><span class="token punctuation">(</span>beforeLast<span class="token punctuation">.</span><span class="token function">LastRightPart</span><span class="token punctuation">(</span><span class="token string character">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">out</span> _<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    IgnoreFormatsInMetadata <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">HashSet<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>StringComparer<span class="token punctuation">.</span>OrdinalIgnoreCase<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    AllowFileExtensions <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">HashSet<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>StringComparer<span class="token punctuation">.</span>OrdinalIgnoreCase<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token string">&quot;js&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ts&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;tsx&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;jsx&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;css&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;htm&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;html&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;shtm&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;xml&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;rss&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;csv&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;pdf&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;jpg&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;jpeg&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;gif&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;png&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;bmp&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ico&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;tif&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;tiff&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;svg&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;avi&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;divx&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;m3u&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;mov&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;mp3&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;mpeg&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;mpg&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;qt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;vob&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;wav&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;wma&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;wmv&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;flv&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;swf&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;xap&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;xaml&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ogg&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ogv&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;mp4&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;webm&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;eot&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ttf&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;woff&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;woff2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;map&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;xls&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;xla&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;xlsx&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;xltx&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;doc&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;dot&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;docx&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;dotx&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ppt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;pps&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ppa&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;pptx&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;potx&quot;</span><span class="token punctuation">,</span> 
        <span class="token string">&quot;wasm&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    CompressFilesWithExtensions <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">HashSet<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    AllowFilePaths <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span>
    <span class="token punctuation">{</span>
        <span class="token string">&quot;jspm_packages/**/*.json&quot;</span><span class="token punctuation">,</span> <span class="token comment">//JSPM</span>
        <span class="token string">&quot;.well-known/**/*&quot;</span><span class="token punctuation">,</span>        <span class="token comment">//LetsEncrypt</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    ForbiddenPaths <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    DebugAspNetHostEnvironment <span class="token operator">=</span> Env<span class="token punctuation">.</span>IsMono <span class="token punctuation">?</span> <span class="token string">&quot;FastCGI&quot;</span> <span class="token punctuation">:</span> <span class="token string">&quot;IIS7&quot;</span><span class="token punctuation">,</span>
    DebugHttpListenerHostEnvironment <span class="token operator">=</span> Env<span class="token punctuation">.</span>IsMono <span class="token punctuation">?</span> <span class="token string">&quot;XSP&quot;</span> <span class="token punctuation">:</span> <span class="token string">&quot;WebServer20&quot;</span><span class="token punctuation">,</span>
    EnableFeatures <span class="token operator">=</span> Feature<span class="token punctuation">.</span>All<span class="token punctuation">,</span>
    WriteErrorsToResponse <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    ReturnsInnerException <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    DisposeDependenciesAfterUse <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    LogUnobservedTaskExceptions <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    HtmlReplaceTokens <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    AddMaxAgeForStaticMimeTypes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> TimeSpan<span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
        <span class="token punctuation">{</span> <span class="token string">&quot;image/gif&quot;</span><span class="token punctuation">,</span> TimeSpan<span class="token punctuation">.</span><span class="token function">FromHours</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span> <span class="token string">&quot;image/png&quot;</span><span class="token punctuation">,</span> TimeSpan<span class="token punctuation">.</span><span class="token function">FromHours</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span> <span class="token string">&quot;image/jpeg&quot;</span><span class="token punctuation">,</span> TimeSpan<span class="token punctuation">.</span><span class="token function">FromHours</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    AppendUtf8CharsetOnContentTypes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">HashSet<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span> MimeTypes<span class="token punctuation">.</span>Json<span class="token punctuation">,</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    RouteNamingConventions <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>RouteNamingConventionDelegate<span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
        RouteNamingConvention<span class="token punctuation">.</span>WithRequestDtoName<span class="token punctuation">,</span>
        RouteNamingConvention<span class="token punctuation">.</span>WithMatchingAttributes<span class="token punctuation">,</span>
        RouteNamingConvention<span class="token punctuation">.</span>WithMatchingPropertyNames
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    MapExceptionToStatusCode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Dictionary<span class="token punctuation">&lt;</span>Type<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    UseSaltedHash <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    FallbackPasswordHashers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>IPasswordHasher<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    AllowSessionIdsInHttpParams <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    AllowSessionCookies <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    RestrictAllCookiesToDomain <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    DefaultJsonpCacheExpiration <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TimeSpan</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    MetadataVisibility <span class="token operator">=</span> RequestAttributes<span class="token punctuation">.</span>Any<span class="token punctuation">,</span>
    Return204NoContentForEmptyResponse <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    AllowJsConfig <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    AllowPartialResponses <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    AllowAclUrlReservation <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    AddRedirectParamsToQueryString <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    RedirectToDefaultDocuments <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    RedirectDirectoriesToTrailingSlashes <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    StripApplicationVirtualPath <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    ScanSkipPaths <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
        <span class="token string">&quot;obj/&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;bin/&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;node_modules/&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;jspm_packages/&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;bower_components/&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;wwwroot_build/&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;wwwroot/&quot;</span><span class="token punctuation">,</span> <span class="token comment">// only in .NET Framework</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    RedirectPaths <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">&gt;</span></span>
    <span class="token punctuation">{</span>
        <span class="token punctuation">{</span> <span class="token string">&quot;/metadata/&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/metadata&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    IgnoreWarningsOnPropertyNames <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
        Keywords<span class="token punctuation">.</span>Format<span class="token punctuation">,</span> Keywords<span class="token punctuation">.</span>Callback<span class="token punctuation">,</span> Keywords<span class="token punctuation">.</span>Debug<span class="token punctuation">,</span> Keywords<span class="token punctuation">.</span>AuthSecret<span class="token punctuation">,</span> Keywords<span class="token punctuation">.</span>JsConfig<span class="token punctuation">,</span>
        Keywords<span class="token punctuation">.</span>IgnorePlaceHolder<span class="token punctuation">,</span> Keywords<span class="token punctuation">.</span>Version<span class="token punctuation">,</span> Keywords<span class="token punctuation">.</span>VersionAbbr<span class="token punctuation">,</span> Keywords<span class="token punctuation">.</span>Version<span class="token punctuation">.</span><span class="token function">ToPascalCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        Keywords<span class="token punctuation">.</span>ApiKeyParam<span class="token punctuation">,</span> Keywords<span class="token punctuation">.</span>Code<span class="token punctuation">,</span> Keywords<span class="token punctuation">.</span>Redirect<span class="token punctuation">,</span> Keywords<span class="token punctuation">.</span>Continue<span class="token punctuation">,</span> <span class="token string">&quot;s&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;f&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    XmlWriterSettings <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">XmlWriterSettings</span>
    <span class="token punctuation">{</span>
        Encoding <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">UTF8Encoding</span><span class="token punctuation">(</span><span class="token named-parameter punctuation">encoderShouldEmitUTF8Identifier</span><span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    FallbackRestPath <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    UseHttpsLinks <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    UseJsObject <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    EnableOptimizations <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    UseCamelCase <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// only in .NET Core; otherwise false</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="configure-logging" tabindex="-1">Configure Logging <a class="header-anchor" href="#configure-logging" aria-hidden="true">#</a></h2><p>To ensure every ServiceStack service uses the same Global Logger it should be configured before ServiceStack&#39;s <code>AppHost</code> is initialized, e.g:</p><div class="language-csharp"><pre><code>LogManager<span class="token punctuation">.</span>LogFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ConsoleLogFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token keyword">new</span> <span class="token constructor-invocation class-name">AppHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>See <a href="/logging.html">Logging docs</a> for info on the various logging providers available.</p><h2 id="testing" tabindex="-1">Testing <a class="header-anchor" href="#testing" aria-hidden="true">#</a></h2><p>See <a href="/testing.html">Unit and Integration Testing</a> docs for testing with ServiceStack.</p>__VP_STATIC_END__`,26),u=[e,c];function l(i,k,r,g,d,m){return a(),s("div",null,u)}var h=n(o,[["render",l]]);export{f as __pageData,h as default};
