import{_ as e,c as s,o as n,a}from"./app.14440598.js";const f=`{"title":"Install Redis on Windows","description":"","frontmatter":{"title":"Install Redis on Windows"},"headers":[{"level":2,"title":"Option 1) Install Redis on Ubuntu on Windows","slug":"option-1-install-redis-on-ubuntu-on-windows"},{"level":2,"title":"Option 2) Running the latest version of Redis with Vagrant","slug":"option-2-running-the-latest-version-of-redis-with-vagrant"},{"level":2,"title":"Option 3) Running Microsoft's native port of Redis","slug":"option-3-running-microsoft-s-native-port-of-redis"},{"level":3,"title":"Current Version: 3.0.503 (June 28, 2016)","slug":"current-version-3-0-503-june-28-2016"},{"level":2,"title":"Redis Vue","slug":"redis-vue"},{"level":3,"title":"Live Demo - https://redis.web-app.io","slug":"live-demo-https-redis-web-app-io"},{"level":2,"title":"Redis React Browser","slug":"redis-react-browser"},{"level":2,"title":"Configure Redis Sentinel Servers","slug":"configure-redis-sentinel-servers"}],"relativePath":"install-redis-windows.md","lastUpdated":1634495308418}`,r={},t=a(`__VP_STATIC_START__<p>The <a href="https://github.com/ServiceStack/redis-windows" target="_blank" rel="noopener noreferrer">ServiceStack/redis-windows</a> project contains the binary releases of MS Open Tech redis port of windows as well as a vagrant configuration for redis letting you run the native version of Redis in a Virtual Box VM.</p><p>Whilst it&#39;s recommended to use <a href="https://redis.io" target="_blank" rel="noopener noreferrer">Redis</a> on Linux in production, it is often useful for developers on Windows platforms to have their own local version of redis running to develop with.</p><p>The 3 most popular ways of running redis on windows is to use the binary releases of <a href="https://github.com/msopentech/redis" target="_blank" rel="noopener noreferrer">Microsoft&#39;s native port of redis</a>, but as this is an unofficial port it always lags behind the latest official development of redis on Linux/OSX.</p><p>Thanks to <a href="https://www.vagrantup.com/" target="_blank" rel="noopener noreferrer">Vagrant</a> you can choose to run the latest linux version inside a Virtual Box Linux VM where you&#39;ll be able to run the official native version of redis.</p><p>Or if you have the latest version of <strong>Windows 10</strong> you can install <a href="https://msdn.microsoft.com/en-us/commandline/wsl/about" target="_blank" rel="noopener noreferrer">Bash on Ubuntu on Windows</a> which will let you run the official version of Redis on Ubuntu on Windows \u{1F603} This is our preferred approach as it lets you run native Ubuntu binaries on Windows more efficiently than running Linux in a VM:</p><h2 id="option-1-install-redis-on-ubuntu-on-windows" tabindex="-1">Option 1) Install Redis on Ubuntu on Windows <a class="header-anchor" href="#option-1-install-redis-on-ubuntu-on-windows" aria-hidden="true">#</a></h2><h4 id="install-windows-subsystem-for-linux-wsl" tabindex="-1"><a href="https://msdn.microsoft.com/en-us/commandline/wsl/install_guide" target="_blank" rel="noopener noreferrer">Install Windows Subsystem for Linux (WSL)</a> <a class="header-anchor" href="#install-windows-subsystem-for-linux-wsl" aria-hidden="true">#</a></h4><ol><li>From Start, search for <strong>Turn Windows features on or off</strong> (type <code>turn</code>)</li><li><strong>Select Windows Subsystem for Linux (beta)</strong></li></ol><p><img src="https://raw.githubusercontent.com/ServiceStack/Assets/master/img/redis/install-wsl.png" alt=""></p><p>Once installed you can run bash on Ubuntu by typing <strong>bash</strong> from a Windows Command Prompt. To install the latest version of Redis we first need to install some prerequisites:</p><div class="language-bash"><pre><code>$ <span class="token function">sudo</span> <span class="token function">apt-get</span> update
$ <span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">make</span>
$ <span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> gcc
</code></pre></div><p>Then follow the <a href="https://redis.io/topics/quickstart" target="_blank" rel="noopener noreferrer">official installation guide</a> to download, build and install the latest stable version. <strong>NOTE:</strong> Installing the binaries using <code>make install</code> will not work. You need to copy them manually to <code>/usr/bin</code> (just like described in the guide, except that they use <code>/usr/local/bin</code> - which is the problem).</p><p>You&#39;ll then be able to launch redis with:</p><div class="language-bash"><pre><code>$ redis-server --daemonize <span class="token function">yes</span>
</code></pre></div><p>Which will run redis in the background freeing your shell so you can play with it using the redis client:</p><div class="language-bash"><pre><code>$ redis-cli
$ <span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> SET foo bar
OK
$ <span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> GET foo
<span class="token string">&quot;bar&quot;</span>
</code></pre></div><p>Which you can connect to from within bash or from your Windows desktop using the <a href="#option-3-running-microsofts-native-port-of-redis">redis-cli native Windows binary from MSOpenTech</a>.</p><h2 id="option-2-running-the-latest-version-of-redis-with-vagrant" tabindex="-1">Option 2) Running the latest version of Redis with Vagrant <a class="header-anchor" href="#option-2-running-the-latest-version-of-redis-with-vagrant" aria-hidden="true">#</a></h2><ol><li><p><a href="https://docs.vagrantup.com/v2/getting-started/" target="_blank" rel="noopener noreferrer">Install Vagrant on Windows</a></p></li><li><p>Download the <a href="https://raw.github.com/ServiceStack/redis-windows/master/downloads/vagrant-redis.zip" target="_blank" rel="noopener noreferrer">vagrant-redis.zip</a> vagrant configuration</p></li></ol><div class="language-bash"><pre><code>$ <span class="token function">wget</span> https://raw.github.com/ServiceStack/redis-windows/master/downloads/vagrant-redis.zip
</code></pre></div><ol start="3"><li><p>Extract <code>vagrant-redis.zip</code> in any folder, e.g. in <code>c:\\vagrant-redis</code></p></li><li><p>Launch the Virtual Box VM with <code>vagrant up</code></p></li></ol><div class="language-bash"><pre><code>$ <span class="token builtin class-name">cd</span> c:<span class="token punctuation">\\</span>vagrant-redis
$ vagrant up
</code></pre></div><p>This will launch a new Ubuntu VM instance inside Virtual Box that will automatically install and start the latest stable version of redis.</p><h2 id="option-3-running-microsoft-s-native-port-of-redis" tabindex="-1">Option 3) Running Microsoft&#39;s native port of Redis <a class="header-anchor" href="#option-3-running-microsoft-s-native-port-of-redis" aria-hidden="true">#</a></h2><p>These 64-bit binary releases are created by building the <a href="https://github.com/msopentech/redis" target="_blank" rel="noopener noreferrer">Microsoft&#39;s native port of redis</a> which have also been published on <a href="https://www.nuget.org/packages/redis-64" target="_blank" rel="noopener noreferrer">NuGet</a>, but as it&#39;s more convenient we provide a zip of the 64-bit binaries here.</p><h4 id="ms-open-announcements" tabindex="-1">MS Open Announcements <a class="header-anchor" href="#ms-open-announcements" aria-hidden="true">#</a></h4><ul><li><a href="https://raw.githubusercontent.com/MSOpenTech/redis/3.0/Redis%20on%20Windows%20Release%20Notes.md" target="_blank" rel="noopener noreferrer">MSOpenTech Redis on Windows 3.0 Release Notes</a></li><li><a href="https://raw.githubusercontent.com/MSOpenTech/redis/2.8/Redis%20on%20Windows%20Release%20Notes.md" target="_blank" rel="noopener noreferrer">MSOpenTech Redis on Windows 2.8 Release Notes</a></li><li><a href="https://github.com/ServiceStack/redis-windows/blob/master/docs/msopentech-redis-on-windows.md" target="_blank" rel="noopener noreferrer">MSOpenTech&#39;s Redis on Windows</a></li><li><a href="https://msopentech.com/blog/2014/03/24/updates-released-redis-windows/" target="_blank" rel="noopener noreferrer">Updates Released for Redis on Windows (2.8.4)</a></li></ul><h3 id="current-version-3-0-503-june-28-2016" tabindex="-1">Current Version: 3.0.503 (June 28, 2016) <a class="header-anchor" href="#current-version-3-0-503-june-28-2016" aria-hidden="true">#</a></h3><ol><li>Download the <a href="https://github.com/ServiceStack/redis-windows/raw/master/downloads/redis-latest.zip" target="_blank" rel="noopener noreferrer">redis-latest.zip</a> native 64bit Windows port of redis</li></ol><div class="language-bash"><pre><code>$ <span class="token function">wget</span> https://github.com/ServiceStack/redis-windows/raw/master/downloads/redis-latest.zip
</code></pre></div><ol start="2"><li><p>Extract <code>redis64-latest.zip</code> in any folder, e.g. in <code>c:\\redis</code></p></li><li><p>Run the <code>redis-server.exe</code> using the local configuration</p></li></ol><div class="language-bash"><pre><code>$ <span class="token builtin class-name">cd</span> c:<span class="token punctuation">\\</span>redis
$ redis-server.exe redis.windows.conf
</code></pre></div><ol start="4"><li>Run <code>redis-cli.exe</code> to connect to your redis instance</li></ol><div class="language-bash"><pre><code>$ <span class="token builtin class-name">cd</span> c:<span class="token punctuation">\\</span>redis
$ redis-cli.exe
</code></pre></div><ol start="5"><li>Start playing with redis \u{1F603}</li></ol><div class="language-bash"><pre><code>redis <span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> SET foo bar
OK
redis <span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> KEYS *
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;foo&quot;</span>
redis <span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> GET foo
<span class="token string">&quot;bar&quot;</span>
redis <span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span>
</code></pre></div><p>The MSOpenTech of Redis adds some useful extensions for better integration with Windows:</p><h4 id="running-redis-as-a-service" tabindex="-1">Running Redis as a Service <a class="header-anchor" href="#running-redis-as-a-service" aria-hidden="true">#</a></h4><p>If you installed Redis using the MSI package, then Redis was already installed as a Windows service. Nothing further to do. If you would like to change its settings, you can update the redis.windows-service.conf file and then restart the Redis service (Run -&gt; services.msc -&gt; Redis -&gt; Restart).</p><p>During installation of the MSI you can either use the installer\u2019s user interface to update the port that Redis listens to and the firewall exception or run it silently without a UI. The following examples show how to install from the command line:</p><h4 id="default-install-port-6379-and-firewall-exception-on" tabindex="-1">default install (port 6379 and firewall exception ON): <a class="header-anchor" href="#default-install-port-6379-and-firewall-exception-on" aria-hidden="true">#</a></h4><div class="language-bash"><pre><code>$ msiexec /i Redis-Windows-x64.msi 
</code></pre></div><h4 id="set-port-and-turn-off-firewall-exception" tabindex="-1">set port and turn OFF firewall exception: <a class="header-anchor" href="#set-port-and-turn-off-firewall-exception" aria-hidden="true">#</a></h4><div class="language-bash"><pre><code>$ msiexec /i Redis-Windows-x64.msi <span class="token assign-left variable">PORT</span><span class="token operator">=</span><span class="token number">1234</span> <span class="token assign-left variable">ADD_FIREWALL_RULE</span><span class="token operator">=</span><span class="token string">&quot;&quot;</span>
</code></pre></div><h4 id="set-port-and-turn-on-firewall-exception" tabindex="-1">set port and turn ON firewall exception: <a class="header-anchor" href="#set-port-and-turn-on-firewall-exception" aria-hidden="true">#</a></h4><div class="language-bash"><pre><code>$ msiexec /i Redis-Windows-x64.msi <span class="token assign-left variable">PORT</span><span class="token operator">=</span><span class="token number">1234</span> ADD_FIREWALL_RULE <span class="token operator">=</span><span class="token number">1</span>
</code></pre></div><h4 id="install-with-no-user-interface" tabindex="-1">install with no user interface: <a class="header-anchor" href="#install-with-no-user-interface" aria-hidden="true">#</a></h4><div class="language-bash"><pre><code>$ msiexec /quiet /i Redis-Windows-x64.msi
</code></pre></div><p>If you did not install Redis using the MSI package, then you still run Redis as a Windows service by following these instructions:</p><p>In order to better integrate with the Windows Services model, new command line arguments have been introduced to Redis. These service arguments require an elevated user context in order to connect to the service control manager. If these commands are invoked from a non-elevated context, Redis will attempt to create an elevated context in which to execute these commands. This will cause a User Account Control dialog to be displayed by Windows and may require Administrative user credentials in order to proceed.</p><h4 id="installing-the-service" tabindex="-1">Installing the Service <a class="header-anchor" href="#installing-the-service" aria-hidden="true">#</a></h4><div class="language-"><pre><code>--service-install
</code></pre></div><p>This must be the first argument on the redis-server command line. Arguments after this are passed in the order they occur to Redis when the service is launched. The service will be configured as Autostart and will be launched as &quot;NT AUTHORITY\\NetworkService&quot;. Upon successful installation, a success message will be displayed and Redis will exit.</p><p>This command does not start the service.</p><p>For instance:</p><div class="language-bash"><pre><code>$ redis-server --service-install redis.windows.conf --loglevel verbose
</code></pre></div><h4 id="uninstalling-the-service" tabindex="-1">Uninstalling the Service <a class="header-anchor" href="#uninstalling-the-service" aria-hidden="true">#</a></h4><div class="language-"><pre><code>--service-uninstall
</code></pre></div><p>This will remove the Redis service configuration information from the registry. Upon successful uninstallation, a success message will be displayed and Redis will exit. This does command not to stop the service.</p><p>For instance:</p><div class="language-bash"><pre><code>$ redis-server --service-uninstall
</code></pre></div><h4 id="starting-the-service" tabindex="-1">Starting the Service <a class="header-anchor" href="#starting-the-service" aria-hidden="true">#</a></h4><div class="language-"><pre><code>--service-start
</code></pre></div><p>This will start the Redis service. Upon successful startup, a success message will be displayed and Redis service will be started.</p><p>For instance:</p><div class="language-bash"><pre><code>$ redis-server --service-start
</code></pre></div><h4 id="stopping-the-service" tabindex="-1">Stopping the Service <a class="header-anchor" href="#stopping-the-service" aria-hidden="true">#</a></h4><div class="language-"><pre><code>--service-stop
</code></pre></div><p>This will stop the Redis service. Upon successful termination, a success message will be displayed and Redis will exit.</p><p>For instance:</p><div class="language-bash"><pre><code>$ redis-server --service-stop
</code></pre></div><h4 id="naming-the-service" tabindex="-1">Naming the Service <a class="header-anchor" href="#naming-the-service" aria-hidden="true">#</a></h4><div class="language-"><pre><code>--service-name name
</code></pre></div><p>This optional argument may be used with any of the preceding commands to set the name of the installed service. This argument should follow the service-install, service-start, service-stop or service-uninstall commands, and precede any arguments to be passed to Redis via the service-install command. The following would install and start three separate instances of Redis as a service:</p><div class="language-bash"><pre><code>$ redis-server --service-install \u2013service-name redisService1 \u2013port <span class="token number">10001</span>
$ redis-server --service-start \u2013service-name redisService1
$ redis-server --service-install \u2013service-name redisService2 \u2013port <span class="token number">10002</span>
$ redis-server --service-start \u2013service-name redisService2
$ redis-server --service-install \u2013service-name redisService3 \u2013port <span class="token number">10003</span>
$ redis-server --service-start \u2013service-name redisService3
</code></pre></div><h2 id="redis-vue" tabindex="-1"><a href="https://templates.servicestack.net/docs/web-apps#redis-vue" target="_blank" rel="noopener noreferrer">Redis Vue</a> <a class="header-anchor" href="#redis-vue" aria-hidden="true">#</a></h2><p>Redis Vue is a simple, lightweight, versatile Redis Admin UI developed using <a href="https://vuejs.org/v2/guide/" target="_blank" rel="noopener noreferrer">Vue</a> and <a href="https://templates.servicestack.net/docs/web-apps" target="_blank" rel="noopener noreferrer">ServiceStack .NET Core Web Apps</a>. It supports Redis&#39;s core <strong>Strings</strong>, <strong>Lists</strong>, <strong>Sets</strong>, <strong>Sorted Sets</strong> and <strong>Hash</strong> data structures and custom Redis commands with its entire functionality contained in a single <a href="https://github.com/NetCoreWebApps/Redis/blob/master/app/index.html" target="_blank" rel="noopener noreferrer">/app/index.html</a> using the dynamic <a href="https://templates.servicestack.net/" target="_blank" rel="noopener noreferrer">ServiceStack Templates</a> language, making it easy to customize and further enhance.</p><h3 id="live-demo-https-redis-web-app-io" tabindex="-1"><a href="https://redis.web-app.io" target="_blank" rel="noopener noreferrer">Live Demo</a> - <a href="https://redis.web-app.io" target="_blank" rel="noopener noreferrer">https://redis.web-app.io</a> <a class="header-anchor" href="#live-demo-https-redis-web-app-io" aria-hidden="true">#</a></h3><p><a href="https://redis.web-app.io" target="_blank" rel="noopener noreferrer"><img src="https://sharpscript.net/assets/img/screenshots/redis.png" alt=""></a></p><h4 id="download-for-windows-osx-and-linux-https-github-com-netcorewebapps-redis" tabindex="-1">Download for Windows, OSX and Linux <a href="https://github.com/NetCoreWebApps/Redis" target="_blank" rel="noopener noreferrer">https://github.com/NetCoreWebApps/Redis</a> <a class="header-anchor" href="#download-for-windows-osx-and-linux-https-github-com-netcorewebapps-redis" aria-hidden="true">#</a></h4><h2 id="redis-react-browser" tabindex="-1"><a href="https://servicestack.net/redis-react" target="_blank" rel="noopener noreferrer">Redis React Browser</a> <a class="header-anchor" href="#redis-react-browser" aria-hidden="true">#</a></h2><p>Redis React is a simple user-friendly UI for browsing data in Redis servers which takes advantages of the complex type conventions built in the ServiceStack.Redis Client to provide a rich, human-friendly UI for navigating related datasets, enabling a fast and fluid browsing experience for your Redis servers.</p><h4 id="live-demo" tabindex="-1"><a href="https://redisreact.servicestack.net/#/" target="_blank" rel="noopener noreferrer">Live Demo</a> <a class="header-anchor" href="#live-demo" aria-hidden="true">#</a></h4><p><a href="https://redisreact.servicestack.net/#/" target="_blank" rel="noopener noreferrer"><img src="https://raw.githubusercontent.com/ServiceStack/Assets/master/img/livedemos/redis-react/home.png" alt=""></a></p><h4 id="windows-osx-and-linux-downloads-available-from-redis-react-home-page" tabindex="-1">Windows, OSX and Linux downloads available from <a href="https://github.com/ServiceStackApps/RedisReact#download" target="_blank" rel="noopener noreferrer">Redis React Home Page</a> <a class="header-anchor" href="#windows-osx-and-linux-downloads-available-from-redis-react-home-page" aria-hidden="true">#</a></h4><h2 id="configure-redis-sentinel-servers" tabindex="-1"><a href="https://github.com/ServiceStack/redis-config" target="_blank" rel="noopener noreferrer">Configure Redis Sentinel Servers</a> <a class="header-anchor" href="#configure-redis-sentinel-servers" aria-hidden="true">#</a></h2><p><a href="https://github.com/ServiceStack/redis-config" target="_blank" rel="noopener noreferrer"><img src="https://raw.githubusercontent.com/ServiceStack/Assets/master/img/redis/instant-sentinel-setup.png" alt="Instant Redis Setup"></a></p><p>See the <a href="https://github.com/ServiceStack/redis-config" target="_blank" rel="noopener noreferrer">redis config project</a> for a quick way to setup up the minimal <a href="https://github.com/ServiceStack/redis-config/blob/master/README.md#3x-sentinels-monitoring-1x-master-and-2x-slaves" target="_blank" rel="noopener noreferrer">highly available Redis Sentinel configuration</a> including start/stop scripts for instantly running multiple redis instances on a single (or multiple) Windows, OSX or Linux servers.</p>__VP_STATIC_END__`,88),i=[t];function o(l,d,c,p,h,u){return n(),s("div",null,i)}var v=e(r,[["render",o]]);export{f as __pageData,v as default};
