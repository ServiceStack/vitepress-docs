import{_ as t,c as o,o as p,a as s,b as n,e as a}from"./app.14440598.js";const A='{"title":"Script and Razor Server UI Controls","description":"","frontmatter":{"title":"Script and Razor Server UI Controls","slug":"server-ui-controls"},"headers":[{"level":3,"title":"UI Component List","slug":"ui-component-list"},{"level":3,"title":"Bootstrap UI Form Controls","slug":"bootstrap-ui-form-controls"},{"level":3,"title":"#Script Pages","slug":"script-pages"},{"level":3,"title":"ServiceStack.Razor","slug":"servicestack-razor"},{"level":2,"title":"Login Page UI","slug":"login-page-ui"},{"level":3,"title":"Form Control Properties","slug":"form-control-properties"},{"level":3,"title":"Contacts Page","slug":"contacts-page"},{"level":2,"title":"Contacts Page UI","slug":"contacts-page-ui"},{"level":2,"title":"Navigation Controls","slug":"navigation-controls"},{"level":3,"title":"#Script Pages","slug":"script-pages-2"},{"level":3,"title":"Razor Pages","slug":"razor-pages"},{"level":3,"title":"NavOptions Properties","slug":"navoptions-properties"}],"relativePath":"server-ui-controls.md","lastUpdated":1634495308446}',e={},c=s('<p>Deprecated. Moved to <a href="http://localhost:5000/docs/sharp-pages#ui-controls" target="_blank" rel="noopener noreferrer">#Script Pages UI Controls</a> and <a href="/razor-ui-controls.html">Razor UI Controls</a> dedicated docs.</p><hr><p>Both <a href="https://sharpscript.net/docs/sharp-pages" target="_blank" rel="noopener noreferrer">#Script Pages</a> and <a href="/netcore-razor.html">ServiceStack.Razor</a> Share the same implementations for their Server Controls which are utilized in <a href="/web-new.html">ASP.NET Core Project Templates</a> and <a href="/world-validation.html">World Validation</a> Application.</p><h3 id="ui-component-list" tabindex="-1">UI Component List <a class="header-anchor" href="#ui-component-list" aria-hidden="true">#</a></h3><p>Currently the component libraries include common Bootstrap UI Form Controls and Navigation Components, here&#39;s a side-by-side comparison displaying the names for the different Control for each Server Control:</p><table><thead><tr><th>Control</th><th>#Script Pages</th><th>ServiceStack.Razor</th></tr></thead><tbody><tr><td>ErrorSummary</td><td>validationSummary</td><td>@Html.ValidationSummary</td></tr><tr><td>ValidationSuccess</td><td>validationSuccess</td><td>@Html.ValidationSuccess</td></tr><tr><td>Input</td><td>formInput</td><td>@Html.FormInput</td></tr><tr><td>TextArea</td><td>formTextarea</td><td>@Html.FormTextarea</td></tr><tr><td>Select</td><td>formSelect</td><td>@Html.FormSelect</td></tr><tr><td>CheckBox</td><td>formInput({type:&#39;checkbox&#39;})</td><td>@Html.FormInput(new { type = &quot;checkbox&quot;})</td></tr><tr><td>HiddenInputs</td><td>htmlHiddenInputs</td><td>@Html.HiddenInputs</td></tr><tr><td>SvgImage</td><td>svgImage</td><td>@Html.SvgImage</td></tr><tr><td>Nav</td><td>nav</td><td>@Html.Nav</td></tr><tr><td>Navbar</td><td>navbar</td><td>@Html.Navbar</td></tr><tr><td>NavLink</td><td>navLink</td><td>@Html.NavLink</td></tr><tr><td>NavButtonGroup</td><td>navButtonGroup</td><td>@Html.NavButtonGroup</td></tr></tbody></table><h3 id="bootstrap-ui-form-controls" tabindex="-1">Bootstrap UI Form Controls <a class="header-anchor" href="#bootstrap-ui-form-controls" aria-hidden="true">#</a></h3><p>The Bootstrap UI form controls include built-in support for validation where they can render validation errors from ServiceStack&#39;s <code>ResponseStatus</code> object, e.g the <a href="/world-validation.html#login-page">Login Page</a> in World Validation:</p><h3 id="script-pages" tabindex="-1"><code>#Script</code> Pages <a class="header-anchor" href="#script-pages" aria-hidden="true">#</a></h3>',9),l=n("div",null,[n("div",{class:"language-html"},[n("pre",{"v-pre":""},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("form")]),a(),n("span",{class:"token attr-name"},"action"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("/auth/credentials"),n("span",{class:"token punctuation"},'"')]),a(),n("span",{class:"token attr-name"},"method"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("post"),n("span",{class:"token punctuation"},'"')]),a(),n("span",{class:"token attr-name"},"class"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("col-lg-4"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),a(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("div")]),a(),n("span",{class:"token attr-name"},"class"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("form-group"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),a(`
        {{ ['userName','password'] | validationSummary({class:'alert alert-warning'}) }}
        {{ { continue: qs.continue ?? '/server/', errorView:'/server/login' } | htmlHiddenInputs }}
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("div")]),n("span",{class:"token punctuation"},">")]),a(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("div")]),a(),n("span",{class:"token attr-name"},"class"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("form-group"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),a(`
        {{ {id:'userName'} 
           | formInput({label:'Email',help:'Email you signed up with',size:'lg'}) }}
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("div")]),n("span",{class:"token punctuation"},">")]),a(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("div")]),a(),n("span",{class:"token attr-name"},"class"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("form-group"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),a(`
        {{ {id:'password',type:'password'} 
           | formInput({label:'Password',help:'6 characters or more',size:'lg',preserveValue:false}) }}
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("div")]),n("span",{class:"token punctuation"},">")]),a(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("div")]),a(),n("span",{class:"token attr-name"},"class"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("form-group"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),a(`
        {{ {id:'rememberMe',type:'checkbox',checked:true} | formInput({label:'Remember Me'}) }}
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("div")]),n("span",{class:"token punctuation"},">")]),a(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("div")]),a(),n("span",{class:"token attr-name"},"class"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("form-group"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),a(`
        `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("button")]),a(),n("span",{class:"token attr-name"},"type"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("submit"),n("span",{class:"token punctuation"},'"')]),a(),n("span",{class:"token attr-name"},"class"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("btn btn-lg btn-primary"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),a("Login"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("button")]),n("span",{class:"token punctuation"},">")]),a(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("div")]),n("span",{class:"token punctuation"},">")]),a(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("div")]),a(),n("span",{class:"token attr-name"},"class"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("form-group"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),a(`
        `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("a")]),a(),n("span",{class:"token attr-name"},"class"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("lnk"),n("span",{class:"token punctuation"},'"')]),a(),n("span",{class:"token attr-name"},"href"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("/server/register"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),a("Register New User"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("a")]),n("span",{class:"token punctuation"},">")]),a(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("div")]),n("span",{class:"token punctuation"},">")]),a(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("form")]),n("span",{class:"token punctuation"},">")]),a(`
`)])])])],-1),u=s(`<h3 id="servicestack-razor" tabindex="-1">ServiceStack.Razor <a class="header-anchor" href="#servicestack-razor" aria-hidden="true">#</a></h3><p>The equivalent implementation in Razor:</p><div class="language-cs"><pre><code><span class="token operator">&lt;</span><span class="token class-name">form</span> action<span class="token operator">=</span><span class="token string">&quot;/auth/credentials&quot;</span> method<span class="token operator">=</span><span class="token string">&quot;post&quot;</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;col-lg-4&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;form-group&quot;</span><span class="token operator">&gt;</span>
        @Html<span class="token punctuation">.</span><span class="token function">ValidationSummary</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span> <span class="token string">&quot;userName&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;password&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> 
            <span class="token keyword">new</span> <span class="token punctuation">{</span> @<span class="token keyword">class</span> <span class="token operator">=</span> <span class="token string">&quot;alert alert-warning&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
        
        @Html<span class="token punctuation">.</span><span class="token function">HiddenInputs</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token punctuation">{</span> 
            @<span class="token keyword">continue</span> <span class="token operator">=</span> Html<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">&quot;continue&quot;</span><span class="token punctuation">)</span> <span class="token operator">??</span> <span class="token string">&quot;/server-razor/&quot;</span><span class="token punctuation">,</span>
            errorView <span class="token operator">=</span> <span class="token string">&quot;/server-razor/login&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;form-group&quot;</span><span class="token operator">&gt;</span>
        @Html<span class="token punctuation">.</span><span class="token function">FormInput</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token punctuation">{</span> id <span class="token operator">=</span> <span class="token string">&quot;userName&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">InputOptions</span> <span class="token punctuation">{</span>
            Label <span class="token operator">=</span> <span class="token string">&quot;Email&quot;</span><span class="token punctuation">,</span>
            Help  <span class="token operator">=</span> <span class="token string">&quot;Email you signed up with&quot;</span><span class="token punctuation">,</span>
            Size  <span class="token operator">=</span> <span class="token string">&quot;lg&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;form-group&quot;</span><span class="token operator">&gt;</span>
        @Html<span class="token punctuation">.</span><span class="token function">FormInput</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token punctuation">{</span> id <span class="token operator">=</span> <span class="token string">&quot;password&quot;</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token string">&quot;password&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">InputOptions</span> <span class="token punctuation">{</span>
            Label <span class="token operator">=</span> <span class="token string">&quot;Password&quot;</span><span class="token punctuation">,</span>
            Help  <span class="token operator">=</span> <span class="token string">&quot;6 characters or more&quot;</span><span class="token punctuation">,</span>
            Size  <span class="token operator">=</span> <span class="token string">&quot;lg&quot;</span><span class="token punctuation">,</span>
            PreserveValue <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;form-group&quot;</span><span class="token operator">&gt;</span>
        @Html<span class="token punctuation">.</span><span class="token function">FormInput</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token punctuation">{</span> 
            id   <span class="token operator">=</span> <span class="token string">&quot;rememberMe&quot;</span><span class="token punctuation">,</span> 
            type <span class="token operator">=</span> <span class="token string">&quot;checkbox&quot;</span><span class="token punctuation">,</span>
            @<span class="token keyword">checked</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">InputOptions</span> <span class="token punctuation">{</span> Label <span class="token operator">=</span> <span class="token string">&quot;Remember Me&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;form-group&quot;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">button</span> type<span class="token operator">=</span><span class="token string">&quot;submit&quot;</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;btn btn-lg btn-primary&quot;</span><span class="token operator">&gt;</span>Login<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;form-group&quot;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;lnk&quot;</span> href<span class="token operator">=</span><span class="token string">&quot;/server-razor/register&quot;</span><span class="token operator">&gt;</span>Register New User<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">&gt;</span>
</code></pre></div><h2 id="login-page-ui" tabindex="-1">Login Page UI <a class="header-anchor" href="#login-page-ui" aria-hidden="true">#</a></h2><p>The Login Page contains a standard Bootstrap Username/Password form with labels, placeholders and help text, which initially looks like:</p><p><img src="https://raw.githubusercontent.com/ServiceStack/Assets/master/img/apps/Validation/login-validation.png" alt=""></p><p>What it looks like after submitting an empty form with Server Exception Errors rendered against their respective fields:</p><p><img src="https://raw.githubusercontent.com/ServiceStack/Assets/master/img/apps/Validation/login-validation-failed.png" alt=""></p><h3 id="form-control-properties" tabindex="-1">Form Control Properties <a class="header-anchor" href="#form-control-properties" aria-hidden="true">#</a></h3><p>Essentially both <code>#Script</code> and <code>Razor</code> have identical properties but implemented idiomatically for each control where <code>#Script</code> uses <strong>camelCase</strong> names and JS Object literals. The first (aka target) argument is for attributes you want to add to the HTML <code>&lt;input/&gt;</code> Element whilst the 2nd Argument is used to customize any of its other high-level features:</p><div class="language-csharp"><pre><code><span class="token comment">/// High-level Input options for rendering HTML Input controls</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">InputOptions</span>
<span class="token punctuation">{</span>
    <span class="token comment">/// Display the Control inline </span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> Inline <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    
    <span class="token comment">/// Label for the control</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Label <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    
    <span class="token comment">/// Class for Label</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> LabelClass <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    
    <span class="token comment">/// Override the class on the error message (default: invalid-feedback)</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> ErrorClass <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token comment">/// Small Help Text displayed with the control</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Help <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    
    <span class="token comment">/// Bootstrap Size of the Control: sm, lg</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Size <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    
    <span class="token comment">/// Multiple Value Data Source for Checkboxes, Radio boxes and Select Controls </span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">object</span></span> Values <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token comment">/// Typed setter of Multi Input Values</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">IEnumerable<span class="token punctuation">&lt;</span>KeyValuePair<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> InputValues
    <span class="token punctuation">{</span>
        <span class="token keyword">set</span> <span class="token operator">=&gt;</span> Values <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/// Whether to preserve value state after post back</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> PreserveValue <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

    <span class="token comment">/// Whether to show Error Message associated with this control</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> ShowErrors <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="contacts-page" tabindex="-1">Contacts Page <a class="header-anchor" href="#contacts-page" aria-hidden="true">#</a></h3><p>The <a href="/world-validation.html#contacts-page">Contacts Page</a> shows a more complete example with a number of different UI Controls.</p><h4 id="script-pages-1" tabindex="-1">#Script Pages <a class="header-anchor" href="#script-pages-1" aria-hidden="true">#</a></h4>`,14),r=n("div",null,[n("div",{class:"language-html"},[n("pre",{"v-pre":""},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("form")]),a(),n("span",{class:"token attr-name"},"action"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("/contacts"),n("span",{class:"token punctuation"},'"')]),a(),n("span",{class:"token attr-name"},"method"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("post"),n("span",{class:"token punctuation"},'"')]),a(),n("span",{class:"token attr-name"},"class"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("col-lg-4"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),a(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("div")]),a(),n("span",{class:"token attr-name"},"class"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("form-group"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),a(`
        {{ 'title,name,color,age,filmGenres,agree' | validationSummary }}
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("div")]),n("span",{class:"token punctuation"},">")]),a(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("div")]),a(),n("span",{class:"token attr-name"},"class"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("form-group"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),a(`
        {{ {id:'title',type:'radio'} | formInput({values:contactTitles,inline:true}) }}
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("div")]),n("span",{class:"token punctuation"},">")]),a(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("div")]),a(),n("span",{class:"token attr-name"},"class"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("form-group"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),a(`
        {{ {id:'name',placeholder:'Name'} | formInput({label:'Full Name',help:'Your first and last name'}) }}
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("div")]),n("span",{class:"token punctuation"},">")]),a(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("div")]),a(),n("span",{class:"token attr-name"},"class"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("form-group"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),a(`
        {{ {id:'color',class:'col-4'}
           | formSelect({label:'Favorite color',values:{'', ...contactColors}}) }}
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("div")]),n("span",{class:"token punctuation"},">")]),a(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("div")]),a(),n("span",{class:"token attr-name"},"class"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("form-group"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),a(`
        {{ {id:'filmGenres',type:'checkbox'} 
          | formInput({label:'Favorite Film Genres',values:contactGenres,help:"choose one or more"}) }}
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("div")]),n("span",{class:"token punctuation"},">")]),a(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("div")]),a(),n("span",{class:"token attr-name"},"class"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("form-group"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),a(`
        {{ {id:'age',type:'number',min:13,placeholder:'Age',class:'col-3'} | formInput }}
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("div")]),n("span",{class:"token punctuation"},">")]),a(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("div")]),a(),n("span",{class:"token attr-name"},"class"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("form-group"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),a(`
        {{ {id:'agree',type:'checkbox'} | formInput({label:'Agree to terms and conditions'}) }}
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("div")]),n("span",{class:"token punctuation"},">")]),a(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("div")]),a(),n("span",{class:"token attr-name"},"class"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("form-group"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),a(`
        `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("button")]),a(),n("span",{class:"token attr-name"},"class"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("btn btn-primary"),n("span",{class:"token punctuation"},'"')]),a(),n("span",{class:"token attr-name"},"type"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("submit"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),a("Add Contact"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("button")]),n("span",{class:"token punctuation"},">")]),a(`
        `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("a")]),a(),n("span",{class:"token attr-name"},"href"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("/server/contacts/"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),a("reset"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("a")]),n("span",{class:"token punctuation"},">")]),a(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("div")]),n("span",{class:"token punctuation"},">")]),a(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("form")]),n("span",{class:"token punctuation"},">")]),a(`
`)])])])],-1),i=s(`<p>Whereas <strong>Razor</strong> uses anonymous objects for properties that can be unbounded like a HTML Element Attribute List and a Typed Class like <code>InputOptions</code> to specify the controls other high-level features, e.g:</p><h4 id="servicestack-razor-1" tabindex="-1">ServiceStack.Razor <a class="header-anchor" href="#servicestack-razor-1" aria-hidden="true">#</a></h4><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/contacts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>post<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col-lg-4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        @Html.ValidationSummary(new[]{ &quot;title&quot;,&quot;name&quot;,&quot;color&quot;,&quot;age&quot;,&quot;filmGenres&quot;,&quot;agree&quot; })
        @Html.HiddenInputs(new { @continue = Continue, errorView = Continue })
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        @Html.FormInput(new { 
            id = &quot;title&quot;, 
            type = &quot;radio&quot;,
        }, new InputOptions { 
            Values = Html.ContactTitles(),
            Inline = true,
        })
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        @Html.FormInput(new { 
            id = &quot;name&quot;, 
            placeholder = &quot;Name&quot;, 
        }, new InputOptions {
            Label = &quot;Full Name&quot;,
            Help  = &quot;Your first and last name&quot;,
        })
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        @Html.FormSelect(new { 
            id = &quot;color&quot;, 
            @class = &quot;col-4&quot;, 
        }, new InputOptions {
            Label  = &quot;Favorite color&quot;,
            Values = new StringDictionary { {&quot;&quot;,&quot;&quot;} }.Merge(Html.ContactColors()),
        })
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        @Html.FormInput(new { 
            id = &quot;filmGenres&quot;, 
            type = &quot;checkbox&quot;,
        }, new InputOptions { 
            Label  = &quot;Favorite Film Genres&quot;,
            Help   = &quot;choose one or more&quot;,
            Values = Html.ContactGenres()
        })
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        @Html.FormInput(new { 
            id = &quot;age&quot;, 
            type = &quot;number&quot;,
            min = 13,
            placeholder = &quot;Age&quot;,
            @class = &quot;col-3&quot;,
        })
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        @Html.FormInput(new {
            id   = &quot;agree&quot;,
            type = &quot;checkbox&quot;,
        },
        new InputOptions { Label = &quot;Agree to terms and conditions&quot; })
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Add Contact<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/server-razor/contacts/<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>reset<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>Both Server UI Controls provide auto Validation Form Binding for any validation rules specified on the <code>CreateContact</code> Validator:</p><div class="language-csharp"><pre><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CreateContactValidator</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">AbstractValidator<span class="token punctuation">&lt;</span>CreateContact<span class="token punctuation">&gt;</span></span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">CreateContactValidator</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">RuleFor</span><span class="token punctuation">(</span>r <span class="token operator">=&gt;</span> r<span class="token punctuation">.</span>Title<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">NotEqual</span><span class="token punctuation">(</span>Title<span class="token punctuation">.</span>Unspecified<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">WithMessage</span><span class="token punctuation">(</span><span class="token string">&quot;Please choose a title&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">RuleFor</span><span class="token punctuation">(</span>r <span class="token operator">=&gt;</span> r<span class="token punctuation">.</span>Name<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">NotEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">RuleFor</span><span class="token punctuation">(</span>r <span class="token operator">=&gt;</span> r<span class="token punctuation">.</span>Color<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Must</span><span class="token punctuation">(</span>x <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span><span class="token function">IsValidColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">WithMessage</span><span class="token punctuation">(</span><span class="token string">&quot;Must be a valid color&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">RuleFor</span><span class="token punctuation">(</span>r <span class="token operator">=&gt;</span> r<span class="token punctuation">.</span>FilmGenres<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">NotEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">WithMessage</span><span class="token punctuation">(</span><span class="token string">&quot;Please select at least 1 genre&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">RuleFor</span><span class="token punctuation">(</span>r <span class="token operator">=&gt;</span> r<span class="token punctuation">.</span>Age<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GreaterThan</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">WithMessage</span><span class="token punctuation">(</span><span class="token string">&quot;Contacts must be older than 13&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">RuleFor</span><span class="token punctuation">(</span>x <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span>Agree<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Equal</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">WithMessage</span><span class="token punctuation">(</span><span class="token string">&quot;You must agree before submitting&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>As well as any <code>ArgumentException</code> thrown within the Service Implementation:</p><div class="language-csharp"><pre><code><span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">object</span></span> <span class="token function">Any</span><span class="token punctuation">(</span><span class="token class-name">CreateContact</span> request<span class="token punctuation">)</span> 
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> newContact <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">ConvertTo</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Data<span class="token punctuation">.</span>Contact<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    newContact<span class="token punctuation">.</span>Id <span class="token operator">=</span> Interlocked<span class="token punctuation">.</span><span class="token function">Increment</span><span class="token punctuation">(</span><span class="token keyword">ref</span> Counter<span class="token punctuation">)</span><span class="token punctuation">;</span>
    newContact<span class="token punctuation">.</span>UserAuthId <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">GetUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    newContact<span class="token punctuation">.</span>CreatedDate <span class="token operator">=</span> newContact<span class="token punctuation">.</span>ModifiedDate <span class="token operator">=</span> DateTime<span class="token punctuation">.</span>UtcNow<span class="token punctuation">;</span>

    <span class="token class-name"><span class="token keyword">var</span></span> contacts <span class="token operator">=</span> Contacts<span class="token punctuation">.</span>Values<span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> alreadyExists <span class="token operator">=</span> contacts<span class="token punctuation">.</span><span class="token function">Any</span><span class="token punctuation">(</span>x <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span>UserAuthId <span class="token operator">==</span> newContact<span class="token punctuation">.</span>UserAuthId <span class="token operator">&amp;&amp;</span> x<span class="token punctuation">.</span>Name <span class="token operator">==</span> request<span class="token punctuation">.</span>Name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>alreadyExists<span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ArgumentException</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;You already have contact named &#39;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">request<span class="token punctuation">.</span>Name</span><span class="token punctuation">}</span></span><span class="token string">&#39;&quot;</span></span><span class="token punctuation">,</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>Name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    Contacts<span class="token punctuation">[</span>newContact<span class="token punctuation">.</span>Id<span class="token punctuation">]</span> <span class="token operator">=</span> newContact<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">CreateContactResponse</span> <span class="token punctuation">{</span> Result <span class="token operator">=</span> newContact<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">ConvertTo</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Contact<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="contacts-page-ui" tabindex="-1">Contacts Page UI <a class="header-anchor" href="#contacts-page-ui" aria-hidden="true">#</a></h2><p>The Contacts Page is representative of a more complex page that utilizes a variety of different form controls where the same page is also responsible for rendering the list of existing contacts:</p><p><img src="https://raw.githubusercontent.com/ServiceStack/Assets/master/img/apps/Validation/contacts-validation.png" alt=""></p><p>Here&#39;s an example of what a partially submitted invalid form looks like:</p><p><img src="https://raw.githubusercontent.com/ServiceStack/Assets/master/img/apps/Validation/contacts-validation-failed.png" alt=""></p><p>To view the complete implementation in context checkout <a href="/world-validation.html#server-implementation">World Validation Server Implementation</a>.</p><h2 id="navigation-controls" tabindex="-1">Navigation Controls <a class="header-anchor" href="#navigation-controls" aria-hidden="true">#</a></h2><p>The Server Navigation Controls are used to render your Apps <a href="https://docs.servicestack.net/navigation#navbar" target="_blank" rel="noopener noreferrer">Unified Navigation</a></p><h3 id="script-pages-2" tabindex="-1"><code>#Script</code> Pages <a class="header-anchor" href="#script-pages-2" aria-hidden="true">#</a></h3><p>In <a href="https://sharpscript.net/docs/sharp-pages" target="_blank" rel="noopener noreferrer">#Script Pages</a> you can use render the <code>navbar</code> and <code>navButtonGroup</code> methods to render NavItems:</p><h4 id="navbar" tabindex="-1">Navbar <a class="header-anchor" href="#navbar" aria-hidden="true">#</a></h4><p>You can render the <strong>main menu</strong> navigation using the <a href="https://github.com/NetCoreTemplates/sharp/blob/50b77454950ef0590042e08cf327aae602a2ab0a/MyApp/wwwroot/_layout.html#L30" target="_blank" rel="noopener noreferrer">navbar</a> script method:</p>`,19),k=n("div",null,[n("div",{class:"language-hbs"},[n("pre",{"v-pre":""},[n("code",null,[n("span",{class:"token delimiter punctuation"},"{{"),a(),n("span",{class:"token variable"},"navbar"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
`)])])])],-1),d=n("p",null,[a("Which by default renders the "),n("code",null,"View.NavItems"),a(" main navigation, using the default "),n("code",null,"NavOptions"),a(" and User Attributes (if authenticated):")],-1),g=n("p",null,[n("img",{src:"https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/nav/appsettings.png",alt:""})],-1),m=n("p",null,[a("You can also render a "),n("strong",null,"different Navigation List"),a(" with:")],-1),h=n("div",null,[n("div",{class:"language-hbs"},[n("pre",{"v-pre":""},[n("code",null,[n("span",{class:"token delimiter punctuation"},"{{"),a(),n("span",{class:"token variable"},"navItems"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'submenu'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token variable"},"navbar"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
`)])])])],-1),v=n("p",null,[a("Which can be customized using the different "),n("code",null,"NavOptions"),a(" properties above, in camelCase:")],-1),b=n("div",null,[n("div",{class:"language-hbs"},[n("pre",{"v-pre":""},[n("code",null,[n("span",{class:"token delimiter punctuation"},"{{"),a(),n("span",{class:"token variable"},"navItems"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'submenu'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token variable"},"navbar"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token variable"},"navClass"),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token string"},"'navbar-nav navbar-light bg-light'"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
`)])])])],-1),w=n("h4",{id:"button-group",tabindex:"-1"},[a("Button group "),n("a",{class:"header-anchor",href:"#button-group","aria-hidden":"true"},"#")],-1),f=n("p",null,[a("The "),n("code",null,"navButtonGroup"),a(" script can render NavItems in a button group, e.g. the "),n("a",{href:"https://github.com/NetCoreTemplates/sharp/blob/50b77454950ef0590042e08cf327aae602a2ab0a/MyApp/wwwroot/login.html#L46",target:"_blank",rel:"noopener noreferrer"},"OAuth buttons"),a(" are rendered with:")],-1),q=n("div",null,[n("div",{class:"language-hbs"},[n("pre",{"v-pre":""},[n("code",null,[n("span",{class:"token delimiter punctuation"},"{{"),a(),n("span",{class:"token string"},"'auth'"),n("span",{class:"token punctuation"},"."),n("span",{class:"token variable"},"navItems"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token variable"},"navButtonGroup"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token variable"},"navClass"),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token string"},"''"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token variable"},"navItemClass"),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token string"},"'btn btn-block btn-lg'"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
`)])])])],-1),y=s(`<p>Which renders a vertical, spaced list of buttons which look like:</p><p><img src="https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/nav/auth-navitems.png" alt=""></p><h3 id="razor-pages" tabindex="-1">Razor Pages <a class="header-anchor" href="#razor-pages" aria-hidden="true">#</a></h3><p>The same server controls are available in ServiceStack.Razor Apps as HTML Helper extension methods:</p><h4 id="navbar-1" tabindex="-1">Navbar <a class="header-anchor" href="#navbar-1" aria-hidden="true">#</a></h4><div class="language-csharp"><pre><code>@Html<span class="token punctuation">.</span><span class="token function">Navbar</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

@Html<span class="token punctuation">.</span><span class="token function">Navbar</span><span class="token punctuation">(</span>Html<span class="token punctuation">.</span><span class="token function">GetNavItems</span><span class="token punctuation">(</span><span class="token string">&quot;submenu&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

@Html<span class="token punctuation">.</span><span class="token function">Navbar</span><span class="token punctuation">(</span>Html<span class="token punctuation">.</span><span class="token function">GetNavItems</span><span class="token punctuation">(</span><span class="token string">&quot;submenu&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">NavOptions</span> <span class="token punctuation">{</span>
    NavClass <span class="token operator">=</span> <span class="token string">&quot;navbar-nav navbar-light bg-light&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h4 id="navbuttongroup" tabindex="-1">NavButtonGroup <a class="header-anchor" href="#navbuttongroup" aria-hidden="true">#</a></h4><div class="language-csharp"><pre><code>@Html<span class="token punctuation">.</span><span class="token function">NavButtonGroup</span><span class="token punctuation">(</span>Html<span class="token punctuation">.</span><span class="token function">GetNavItems</span><span class="token punctuation">(</span><span class="token string">&quot;auth&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">NavOptions</span> <span class="token punctuation">{</span>
    NavClass <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
    NavItemClass <span class="token operator">=</span> <span class="token string">&quot;btn btn-block btn-lg&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="navoptions-properties" tabindex="-1">NavOptions Properties <a class="header-anchor" href="#navoptions-properties" aria-hidden="true">#</a></h3><p>The <code>NavItem</code> classes capture the Navigation information which is used together with the <code>NavOptions</code> class below:</p><div class="language-csharp"><pre><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NavOptions</span>
<span class="token punctuation">{</span>
    <span class="token comment">/// User Attributes for conditional rendering, e.g:</span>
    <span class="token comment">///  - auth - User is Authenticated</span>
    <span class="token comment">///  - role:name - User Role</span>
    <span class="token comment">///  - perm:name - User Permission </span>
    <span class="token keyword">public</span> <span class="token return-type class-name">HashSet<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> Attributes <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    
    <span class="token comment">/// Path Info that should set as active </span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> ActivePath <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    
    <span class="token comment">/// Prefix to include before NavItem.Path (if any)</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> BaseHref <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token comment">// Custom classes applied to different navigation elements (defaults to Bootstrap classes)</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> NavClass <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> NavItemClass <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> NavLinkClass <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> ChildNavItemClass <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> ChildNavLinkClass <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> ChildNavMenuClass <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> ChildNavMenuItemClass <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>Use <strong>camelCase</strong> when specifying nav options in <code>#Script</code> controls.</p>`,12),C=[c,l,u,r,i,k,d,g,m,h,v,b,w,f,q,y];function I(_,S,N,T,x,H){return p(),o("div",null,C)}var V=t(e,[["render",I]]);export{A as __pageData,V as default};
