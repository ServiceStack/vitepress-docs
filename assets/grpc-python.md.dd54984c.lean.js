import{_ as n,c as s,o as a,a as t}from"./app.14440598.js";const h='{"title":"gRPC protoc Python Client","description":"","frontmatter":{"slug":"grpc-python","title":"gRPC protoc Python Client"},"headers":[{"level":2,"title":"Python protoc generated GrpcServicesStub Client TodoWorld Example","slug":"python-protoc-generated-grpcservicesstub-client-todoworld-example"},{"level":3,"title":"Python protoc gRPC insecure Example","slug":"python-protoc-grpc-insecure-example"},{"level":3,"title":"Python protoc gRPC SSL Example","slug":"python-protoc-grpc-ssl-example"},{"level":3,"title":"Python Local Development gRPC SSL CRUD Example","slug":"python-local-development-grpc-ssl-crud-example"}],"relativePath":"grpc-python.md","lastUpdated":1634495307618}',p={},o=t(`__VP_STATIC_START__<p><a href="https://youtu.be/rcDdabAELnA" target="_blank" rel="noopener noreferrer"><img src="https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/grpc/python.png" alt=""></a></p><div class="info custom-block"><p class="custom-block-title">YouTube</p><p><a href="https://youtu.be/rcDdabAELnA" target="_blank" rel="noopener noreferrer">youtu.be/rcDdabAELnA</a></p></div><h2 id="python-protoc-generated-grpcservicesstub-client-todoworld-example" tabindex="-1">Python protoc generated GrpcServicesStub Client TodoWorld Example <a class="header-anchor" href="#python-protoc-generated-grpcservicesstub-client-todoworld-example" aria-hidden="true">#</a></h2><p>Install <a href="https://docs.servicestack.net/dotnet-tool" target="_blank" rel="noopener noreferrer">x dotnet tool</a>:</p><div class="language-bash"><pre><code>$ dotnet tool <span class="token function">install</span> --global x 
</code></pre></div><p>Install <a href="https://pypi.org/project/grpcio-tools/" target="_blank" rel="noopener noreferrer">grpcio-tools</a>:</p><div class="language-bash"><pre><code>$ pip <span class="token function">install</span> grpcio-tools
</code></pre></div><p>Add protoc generated TodoWorld DTOs and gRPC Service Client:</p><div class="language-bash"><pre><code>$ x proto-python https://todoworld.servicestack.net
</code></pre></div><h3 id="python-protoc-grpc-insecure-example" tabindex="-1">Python protoc gRPC insecure Example <a class="header-anchor" href="#python-protoc-grpc-insecure-example" aria-hidden="true">#</a></h3><p>Use protoc generated DTOs and <code>GrpcServicesStub</code> to call TodoWorld gRPC Service in <code>main.py</code>:</p><div class="language-python"><pre><code><span class="token keyword">import</span> grpc
<span class="token keyword">import</span> services_pb2
<span class="token keyword">import</span> services_pb2_grpc

<span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">with</span> grpc<span class="token punctuation">.</span>insecure_channel<span class="token punctuation">(</span><span class="token string">&#39;todoworld.servicestack.net:5054&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> channel<span class="token punctuation">:</span>

        client <span class="token operator">=</span> services_pb2_grpc<span class="token punctuation">.</span>GrpcServicesStub<span class="token punctuation">(</span>channel<span class="token punctuation">)</span>
        response <span class="token operator">=</span> client<span class="token punctuation">.</span>GetHello<span class="token punctuation">(</span>services_pb2<span class="token punctuation">.</span>Hello<span class="token punctuation">(</span>Name<span class="token operator">=</span><span class="token string">&quot;gRPC Python&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>Result<span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    run<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><p>Create <code>main.py</code> with the above Python Example:</p><div class="language-bash"><pre><code>$ x mix todoworld-python
</code></pre></div><p>Run example:</p><div class="language-bash"><pre><code>$ python main.py
</code></pre></div><h3 id="python-protoc-grpc-ssl-example" tabindex="-1">Python protoc gRPC SSL Example <a class="header-anchor" href="#python-protoc-grpc-ssl-example" aria-hidden="true">#</a></h3><p>Download TodoWorld SSL Certificate used for its gRPC HTTP/2 Services:</p><div class="language-bash"><pre><code>$ x get https://todoworld.servicestack.net/grpc.crt 
</code></pre></div><p>Use certificate when initializing <code>GrpcServicesStub</code>:</p><div class="language-python"><pre><code><span class="token keyword">import</span> grpc
<span class="token keyword">import</span> services_pb2
<span class="token keyword">import</span> services_pb2_grpc

<span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;grpc.crt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rb&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
        credentials <span class="token operator">=</span> grpc<span class="token punctuation">.</span>ssl_channel_credentials<span class="token punctuation">(</span>f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">with</span> grpc<span class="token punctuation">.</span>secure_channel<span class="token punctuation">(</span><span class="token string">&#39;todoworld.servicestack.net:50051&#39;</span><span class="token punctuation">,</span> credentials<span class="token punctuation">)</span> <span class="token keyword">as</span> channel<span class="token punctuation">:</span>

        client <span class="token operator">=</span> services_pb2_grpc<span class="token punctuation">.</span>GrpcServicesStub<span class="token punctuation">(</span>channel<span class="token punctuation">)</span>
        response <span class="token operator">=</span> client<span class="token punctuation">.</span>GetHello<span class="token punctuation">(</span>services_pb2<span class="token punctuation">.</span>Hello<span class="token punctuation">(</span>Name<span class="token operator">=</span><span class="token string">&quot;gRPC Python&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>Result<span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    run<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><p>Override <code>main.py</code> with the above Python Example:</p><div class="language-bash"><pre><code>$ x mix todoworld-python-ssl
</code></pre></div><p>Run example:</p><div class="language-bash"><pre><code>$ python main.py
</code></pre></div><h3 id="python-local-development-grpc-ssl-crud-example" tabindex="-1">Python Local Development gRPC SSL CRUD Example <a class="header-anchor" href="#python-local-development-grpc-ssl-crud-example" aria-hidden="true">#</a></h3><div class="language-python"><pre><code><span class="token keyword">import</span> grpc
<span class="token keyword">import</span> services_pb2
<span class="token keyword">import</span> services_pb2_grpc

<span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;dev.crt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rb&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
        cer <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
    credentials <span class="token operator">=</span> grpc<span class="token punctuation">.</span>ssl_channel_credentials<span class="token punctuation">(</span>cer<span class="token punctuation">)</span>
    <span class="token keyword">with</span> grpc<span class="token punctuation">.</span>secure_channel<span class="token punctuation">(</span><span class="token string">&#39;localhost:5001&#39;</span><span class="token punctuation">,</span> credentials<span class="token punctuation">)</span> <span class="token keyword">as</span> channel<span class="token punctuation">:</span>

        client <span class="token operator">=</span> services_pb2_grpc<span class="token punctuation">.</span>GrpcServicesStub<span class="token punctuation">(</span>channel<span class="token punctuation">)</span>
        client<span class="token punctuation">.</span>PostResetTodos<span class="token punctuation">(</span>services_pb2<span class="token punctuation">.</span>ResetTodos<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;TODO EXAMPLE&quot;</span><span class="token punctuation">)</span>

        <span class="token comment"># POST /todos</span>
        todo <span class="token operator">=</span> client<span class="token punctuation">.</span>PostCreateTodo<span class="token punctuation">(</span>services_pb2<span class="token punctuation">.</span>CreateTodo<span class="token punctuation">(</span>Title<span class="token operator">=</span><span class="token string">&quot;ServiceStack&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Result
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;new todo Id: </span><span class="token interpolation"><span class="token punctuation">{</span>todo<span class="token punctuation">.</span>Id<span class="token punctuation">}</span></span><span class="token string">, Title: </span><span class="token interpolation"><span class="token punctuation">{</span>todo<span class="token punctuation">.</span>Title<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>

        <span class="token comment"># GET /todos</span>
        <span class="token builtin">all</span> <span class="token operator">=</span> client<span class="token punctuation">.</span>CallGetTodos<span class="token punctuation">(</span>services_pb2<span class="token punctuation">.</span>GetTodos<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;todos: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">len</span><span class="token punctuation">(</span><span class="token builtin">all</span><span class="token punctuation">.</span>Results<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>

        <span class="token comment"># GET /todos/1</span>
        todo <span class="token operator">=</span> <span class="token punctuation">(</span>client<span class="token punctuation">.</span>CallGetTodo<span class="token punctuation">(</span>services_pb2<span class="token punctuation">.</span>GetTodo<span class="token punctuation">(</span>Id<span class="token operator">=</span>todo<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Result
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;get todo Id: </span><span class="token interpolation"><span class="token punctuation">{</span>todo<span class="token punctuation">.</span>Id<span class="token punctuation">}</span></span><span class="token string">, Title: </span><span class="token interpolation"><span class="token punctuation">{</span>todo<span class="token punctuation">.</span>Title<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>

        <span class="token comment"># PUT /todos/1</span>
        client<span class="token punctuation">.</span>PutUpdateTodo<span class="token punctuation">(</span>services_pb2<span class="token punctuation">.</span>UpdateTodo<span class="token punctuation">(</span>Id<span class="token operator">=</span>todo<span class="token punctuation">.</span>Id<span class="token punctuation">,</span> Title<span class="token operator">=</span><span class="token string">&#39;gRPC&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

        <span class="token comment"># GET /todos/1</span>
        todo <span class="token operator">=</span> <span class="token punctuation">(</span>client<span class="token punctuation">.</span>CallGetTodo<span class="token punctuation">(</span>services_pb2<span class="token punctuation">.</span>GetTodo<span class="token punctuation">(</span>Id<span class="token operator">=</span>todo<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Result
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;get todo Id: </span><span class="token interpolation"><span class="token punctuation">{</span>todo<span class="token punctuation">.</span>Id<span class="token punctuation">}</span></span><span class="token string">, Title: </span><span class="token interpolation"><span class="token punctuation">{</span>todo<span class="token punctuation">.</span>Title<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>

        <span class="token comment"># DELETE /todos/1</span>
        client<span class="token punctuation">.</span>CallDeleteTodo<span class="token punctuation">(</span>services_pb2<span class="token punctuation">.</span>DeleteTodo<span class="token punctuation">(</span>Id<span class="token operator">=</span>todo<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">)</span>

        <span class="token comment"># GET /todos</span>
        <span class="token builtin">all</span> <span class="token operator">=</span> client<span class="token punctuation">.</span>CallGetTodos<span class="token punctuation">(</span>services_pb2<span class="token punctuation">.</span>GetTodos<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;todos: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">len</span><span class="token punctuation">(</span><span class="token builtin">all</span><span class="token punctuation">.</span>Results<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    run<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><p>Refer to <a href="https://github.com/NetCoreApps/todo-world/tree/master/src/clients/python" target="_blank" rel="noopener noreferrer">/src/clients/python</a> for a complete example project.</p>__VP_STATIC_END__`,28),e=[o];function c(l,i,u,r,k,d){return a(),s("div",null,e)}var _=n(p,[["render",c]]);export{h as __pageData,_ as default};
