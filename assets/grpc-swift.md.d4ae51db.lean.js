import{_ as n,c as s,o as a,a as t}from"./app.14440598.js";const f='{"title":"gRPC protoc Swift Client","description":"","frontmatter":{"slug":"grpc-swift","title":"gRPC protoc Swift Client"},"headers":[{"level":2,"title":"Swift protoc generated GrpcServiceClient TodoWorld Example","slug":"swift-protoc-generated-grpcserviceclient-todoworld-example"},{"level":3,"title":"Swift protoc gRPC insecure Example","slug":"swift-protoc-grpc-insecure-example"},{"level":3,"title":"Swift protoc gRPC SSL Example","slug":"swift-protoc-grpc-ssl-example"},{"level":3,"title":"Swift Local Development gRPC SSL CRUD Example","slug":"swift-local-development-grpc-ssl-crud-example"}],"relativePath":"grpc-swift.md","lastUpdated":1634495307618}',p={},o=t(`__VP_STATIC_START__<p><a href="https://youtu.be/FLHbN_Z9z98" target="_blank" rel="noopener noreferrer"><img src="https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/grpc/swift.png" alt=""></a></p><blockquote><p>YouTube: <a href="https://youtu.be/FLHbN_Z9z98" target="_blank" rel="noopener noreferrer">youtu.be/FLHbN_Z9z98</a></p></blockquote><h2 id="swift-protoc-generated-grpcserviceclient-todoworld-example" tabindex="-1">Swift protoc generated GrpcServiceClient TodoWorld Example <a class="header-anchor" href="#swift-protoc-generated-grpcserviceclient-todoworld-example" aria-hidden="true">#</a></h2><p>Install <a href="https://docs.servicestack.net/dotnet-tool" target="_blank" rel="noopener noreferrer">x dotnet tool</a>:</p><div class="language-bash"><pre><code>$ dotnet tool <span class="token function">install</span> --global x 
</code></pre></div><p>Create a new Swift Console App:</p><div class="language-bash"><pre><code>$ swift package init --type executable
</code></pre></div><p>Add <code>grpc-swift</code> Swift Package in <code>Package.swift</code> and <strong>&quot;GRPC&quot;</strong> dependency to each target:</p><div class="language-swift"><pre><code><span class="token keyword">import</span> <span class="token class-name">PackageDescription</span>

<span class="token keyword">let</span> package <span class="token operator">=</span> <span class="token class-name">Package</span><span class="token punctuation">(</span>
    name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;TodoWorld&quot;</span></span><span class="token punctuation">,</span>
    dependencies<span class="token punctuation">:</span> <span class="token punctuation">[</span>
        <span class="token comment">// Dependencies declare other packages that this package depends on.</span>
        <span class="token comment">// .package(url: /* package url */, from: &quot;1.0.0&quot;),</span>
        <span class="token punctuation">.</span><span class="token function">package</span><span class="token punctuation">(</span>url<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;https://github.com/grpc/grpc-swift.git&quot;</span></span><span class="token punctuation">,</span> from<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;1.0.0-alpha.8&quot;</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    targets<span class="token punctuation">:</span> <span class="token punctuation">[</span>
        <span class="token comment">// Targets are the basic building blocks of a package. A target can define a module or a test suite.</span>
        <span class="token comment">// Targets can depend on other targets in this package, and on products in packages which this package depends on.</span>
        <span class="token punctuation">.</span><span class="token function">target</span><span class="token punctuation">(</span>
            name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;TodoWorld&quot;</span></span><span class="token punctuation">,</span>
            dependencies<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&quot;GRPC&quot;</span></span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">.</span><span class="token function">testTarget</span><span class="token punctuation">(</span>
            name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;TodoWorldTests&quot;</span></span><span class="token punctuation">,</span>
            dependencies<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&quot;TodoWorld&quot;</span></span><span class="token punctuation">,</span><span class="token string-literal"><span class="token string">&quot;GRPC&quot;</span></span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">)</span>
</code></pre></div><p>Add protoc generated TodoWorld DTOs and gRPC GrpcServiceClient:</p><div class="language-bash"><pre><code>$ <span class="token builtin class-name">cd</span> Sources/TodoWorld
$ x proto-swift https://todoworld.servicestack.net
</code></pre></div><p>Use protoc generated DTOs and <code>GrpcServiceClient</code> to call TodoWorld gRPC Service:</p><h3 id="swift-protoc-grpc-insecure-example" tabindex="-1">Swift protoc gRPC insecure Example <a class="header-anchor" href="#swift-protoc-grpc-insecure-example" aria-hidden="true">#</a></h3><div class="language-swift"><pre><code><span class="token keyword">import</span> <span class="token class-name">Foundation</span>
<span class="token keyword">import</span> <span class="token constant">GRPC</span>
<span class="token keyword">import</span> <span class="token constant">NIO</span>
<span class="token keyword">import</span> <span class="token constant">NIOSSL</span>

<span class="token keyword">do</span> <span class="token punctuation">{</span>

    <span class="token keyword">let</span> configuration <span class="token operator">=</span> <span class="token class-name">ClientConnection</span><span class="token punctuation">.</span><span class="token class-name">Configuration</span><span class="token punctuation">(</span>
        target<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">hostAndPort</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;todoworld.servicestack.net&quot;</span></span><span class="token punctuation">,</span> <span class="token number">5054</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        eventLoopGroup<span class="token punctuation">:</span> <span class="token class-name">MultiThreadedEventLoopGroup</span><span class="token punctuation">(</span>numberOfThreads<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span>

    <span class="token keyword">let</span> client <span class="token operator">=</span> <span class="token class-name">GrpcServicesServiceClient</span><span class="token punctuation">(</span>connection<span class="token punctuation">:</span> <span class="token class-name">ClientConnection</span><span class="token punctuation">(</span>configuration<span class="token punctuation">:</span> configuration<span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">var</span> request <span class="token operator">=</span> <span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    request<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;gRPC Swift&quot;</span></span>
    <span class="token keyword">let</span> response <span class="token operator">=</span> <span class="token keyword">try</span> client<span class="token punctuation">.</span><span class="token function">getHello</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>result
    <span class="token function">print</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span>

<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;ERROR\\n</span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">error</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><p>Override <code>main.swift</code> with the above Swift Example:</p><div class="language-bash"><pre><code>$ x mix todoworld-swift
</code></pre></div><p>Run example:</p><div class="language-bash"><pre><code>$ swift run
</code></pre></div><h3 id="swift-protoc-grpc-ssl-example" tabindex="-1">Swift protoc gRPC SSL Example <a class="header-anchor" href="#swift-protoc-grpc-ssl-example" aria-hidden="true">#</a></h3><p>Download TodoWorld SSL Certificate used for its gRPC HTTP/2 Services:</p><div class="language-bash"><pre><code>$ x get https://todoworld.servicestack.net/grpc.crt 
</code></pre></div><p>Use certificate when initializing ClientConnection.Configuration:</p><div class="language-swift"><pre><code><span class="token keyword">import</span> <span class="token class-name">Foundation</span>
<span class="token keyword">import</span> <span class="token constant">GRPC</span>
<span class="token keyword">import</span> <span class="token constant">NIO</span>
<span class="token keyword">import</span> <span class="token constant">NIOSSL</span>

<span class="token keyword">do</span> <span class="token punctuation">{</span>

    <span class="token keyword">let</span> configuration <span class="token operator">=</span> <span class="token class-name">ClientConnection</span><span class="token punctuation">.</span><span class="token class-name">Configuration</span><span class="token punctuation">(</span>
        target<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">hostAndPort</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;todoworld.servicestack.net&quot;</span></span><span class="token punctuation">,</span> <span class="token number">50051</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        eventLoopGroup<span class="token punctuation">:</span> <span class="token class-name">MultiThreadedEventLoopGroup</span><span class="token punctuation">(</span>numberOfThreads<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        tls<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span>certificateChain<span class="token punctuation">:</span> <span class="token keyword">try</span> <span class="token class-name">NIOSSLCertificate</span><span class="token punctuation">.</span><span class="token function">fromPEMFile</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;grpc.crt&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>map <span class="token punctuation">{</span> <span class="token punctuation">.</span><span class="token function">certificate</span><span class="token punctuation">(</span><span class="token short-argument">$0</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> 
                   certificateVerification<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token keyword">none</span><span class="token punctuation">)</span> <span class="token comment">//TODO enable SSL verification</span>
    <span class="token punctuation">)</span>

    <span class="token keyword">let</span> client <span class="token operator">=</span> <span class="token class-name">GrpcServicesServiceClient</span><span class="token punctuation">(</span>connection<span class="token punctuation">:</span> <span class="token class-name">ClientConnection</span><span class="token punctuation">(</span>configuration<span class="token punctuation">:</span> configuration<span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">var</span> request <span class="token operator">=</span> <span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    request<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;gRPC Swift&quot;</span></span>
    <span class="token keyword">let</span> response <span class="token operator">=</span> <span class="token keyword">try</span> client<span class="token punctuation">.</span><span class="token function">getHello</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>result
    <span class="token function">print</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span>

<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;ERROR\\n</span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">error</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><p>Override <code>main.swift</code> with the above Swift Example:</p><div class="language-bash"><pre><code>$ x mix todoworld-swift-ssl
</code></pre></div><p>Run example:</p><div class="language-bash"><pre><code>$ swift run
</code></pre></div><h3 id="swift-local-development-grpc-ssl-crud-example" tabindex="-1">Swift Local Development gRPC SSL CRUD Example <a class="header-anchor" href="#swift-local-development-grpc-ssl-crud-example" aria-hidden="true">#</a></h3><div class="language-swift"><pre><code><span class="token keyword">import</span> <span class="token class-name">Foundation</span>
<span class="token keyword">import</span> <span class="token constant">GRPC</span>
<span class="token keyword">import</span> <span class="token constant">NIO</span>
<span class="token keyword">import</span> <span class="token constant">NIOSSL</span>

<span class="token keyword">do</span> <span class="token punctuation">{</span>

    <span class="token keyword">let</span> configuration <span class="token operator">=</span> <span class="token class-name">ClientConnection</span><span class="token punctuation">.</span><span class="token class-name">Configuration</span><span class="token punctuation">(</span>
        target<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">hostAndPort</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;localhost&quot;</span></span><span class="token punctuation">,</span> <span class="token number">5001</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        eventLoopGroup<span class="token punctuation">:</span> <span class="token class-name">MultiThreadedEventLoopGroup</span><span class="token punctuation">(</span>numberOfThreads<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        tls<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span>certificateChain<span class="token punctuation">:</span> <span class="token keyword">try</span> <span class="token class-name">NIOSSLCertificate</span><span class="token punctuation">.</span><span class="token function">fromPEMFile</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;dev.crt&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>map <span class="token punctuation">{</span> <span class="token punctuation">.</span><span class="token function">certificate</span><span class="token punctuation">(</span><span class="token short-argument">$0</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span>

    <span class="token keyword">let</span> client <span class="token operator">=</span> <span class="token class-name">GrpcServicesServiceClient</span><span class="token punctuation">(</span>connection<span class="token punctuation">:</span> <span class="token class-name">ClientConnection</span><span class="token punctuation">(</span>configuration<span class="token punctuation">:</span> configuration<span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;TODO EXAMPLE&quot;</span></span><span class="token punctuation">)</span>

    <span class="token omit keyword">_</span> <span class="token operator">=</span> <span class="token keyword">try</span> client<span class="token punctuation">.</span><span class="token function">postResetTodos</span><span class="token punctuation">(</span><span class="token class-name">ResetTodos</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment">//POST /todos</span>
    <span class="token keyword">var</span> createTodo <span class="token operator">=</span> <span class="token class-name">CreateTodo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    createTodo<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;ServiceStack&quot;</span></span>
    <span class="token keyword">var</span> todo <span class="token operator">=</span> <span class="token keyword">try</span> client<span class="token punctuation">.</span><span class="token function">postCreateTodo</span><span class="token punctuation">(</span>createTodo<span class="token punctuation">)</span><span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>result
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;new todo Id: </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">todo<span class="token punctuation">.</span>id</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">, Title: </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">todo<span class="token punctuation">.</span>title</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>

    <span class="token comment">//GET /todos</span>
    <span class="token keyword">var</span> all <span class="token operator">=</span> <span class="token keyword">try</span> client<span class="token punctuation">.</span><span class="token function">callGetTodos</span><span class="token punctuation">(</span><span class="token class-name">GetTodos</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;todos: </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">all<span class="token punctuation">.</span>results<span class="token punctuation">.</span>count</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>

    <span class="token comment">//GET /todos/1</span>
    <span class="token keyword">var</span> getTodo <span class="token operator">=</span> <span class="token class-name">GetTodo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    getTodo<span class="token punctuation">.</span>id <span class="token operator">=</span> todo<span class="token punctuation">.</span>id
    todo <span class="token operator">=</span> <span class="token keyword">try</span> client<span class="token punctuation">.</span><span class="token function">callGetTodo</span><span class="token punctuation">(</span>getTodo<span class="token punctuation">)</span><span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>result
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;get todo Id: </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">todo<span class="token punctuation">.</span>id</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">, Title: </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">todo<span class="token punctuation">.</span>title</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>

    <span class="token comment">//PUT /todos/1</span>
    <span class="token keyword">var</span> updateTodo <span class="token operator">=</span> <span class="token class-name">UpdateTodo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    updateTodo<span class="token punctuation">.</span>id <span class="token operator">=</span> todo<span class="token punctuation">.</span>id
    updateTodo<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;gRPC&quot;</span></span>
    <span class="token omit keyword">_</span> <span class="token operator">=</span> <span class="token keyword">try</span> client<span class="token punctuation">.</span><span class="token function">putUpdateTodo</span><span class="token punctuation">(</span>updateTodo<span class="token punctuation">)</span><span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment">//GET /todos/1</span>
    todo <span class="token operator">=</span> <span class="token keyword">try</span> client<span class="token punctuation">.</span><span class="token function">callGetTodo</span><span class="token punctuation">(</span>getTodo<span class="token punctuation">)</span><span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>result
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;get todo Id: </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">todo<span class="token punctuation">.</span>id</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">, Title: </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">todo<span class="token punctuation">.</span>title</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>

    <span class="token comment">//DELETE /todos/1</span>
    <span class="token keyword">var</span> deleteTodo <span class="token operator">=</span> <span class="token class-name">DeleteTodo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    deleteTodo<span class="token punctuation">.</span>id <span class="token operator">=</span> todo<span class="token punctuation">.</span>id
    <span class="token omit keyword">_</span> <span class="token operator">=</span> <span class="token keyword">try</span> client<span class="token punctuation">.</span><span class="token function">callDeleteTodo</span><span class="token punctuation">(</span>deleteTodo<span class="token punctuation">)</span><span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment">//GET /todos</span>
    all <span class="token operator">=</span> <span class="token keyword">try</span> client<span class="token punctuation">.</span><span class="token function">callGetTodos</span><span class="token punctuation">(</span><span class="token class-name">GetTodos</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;todos: </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">all<span class="token punctuation">.</span>results<span class="token punctuation">.</span>count</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>

<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;ERROR\\n</span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">error</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><p>Refer to <a href="https://github.com/NetCoreApps/todo-world/tree/master/src/clients/swift" target="_blank" rel="noopener noreferrer">/src/clients/swift</a> for a complete example project.</p>__VP_STATIC_END__`,30),e=[o];function c(l,i,u,k,r,d){return a(),s("div",null,e)}var m=n(p,[["render",c]]);export{f as __pageData,m as default};
