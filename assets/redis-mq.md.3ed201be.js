import{_ as e}from"./servicestack-mqclients.b6ea907e.js";import{_ as a,c as t,o,b as s,e as n}from"./app.14440598.js";const _s='{"title":"Redis MQ","description":"","frontmatter":{"slug":"redis-mq","title":"Redis MQ"},"headers":[{"level":2,"title":"MQ Examples","slug":"mq-examples"},{"level":3,"title":"The SMessage Service","slug":"the-smessage-service"},{"level":2,"title":"Redis MQ Client / Server","slug":"redis-mq-client-server"},{"level":2,"title":"MQ Architecture in ServiceStack","slug":"mq-architecture-in-servicestack"},{"level":3,"title":"Easily testable and swappable","slug":"easily-testable-and-swappable"},{"level":2,"title":"Re-use your existing Web Services!","slug":"re-use-your-existing-web-services"},{"level":2,"title":"Example","slug":"example"},{"level":2,"title":"Redis","slug":"redis"},{"level":3,"title":"RedisMQ Client","slug":"redismq-client"},{"level":3,"title":"Request + Reply MQ Pattern","slug":"request-reply-mq-pattern"}],"relativePath":"redis-mq.md","lastUpdated":1634495308426}',c={},l=s("h2",{id:"mq-examples",tabindex:"-1"},[n("MQ Examples "),s("a",{class:"header-anchor",href:"#mq-examples","aria-hidden":"true"},"#")],-1),p=s("p",null,[n("The "),s("a",{href:"https://github.com/ServiceStack/ServiceStack.UseCases/tree/master/Reusability",target:"_blank",rel:"noopener noreferrer"},"Reusability ServiceStack.UseCase"),n(" contains a good introductory demo of using MQ's(message-queues) in ServiceStack where the same services can be called via Web Service or via MQ. Using MQ's provide instant response times, in addition to reliable and durable execution of your services.")],-1),i=s("h3",{id:"the-smessage-service",tabindex:"-1"},[n("The SMessage Service "),s("a",{class:"header-anchor",href:"#the-smessage-service","aria-hidden":"true"},"#")],-1),u=s("p",null,[n("The "),s("a",{href:"https://github.com/ServiceStack/ServiceStack.UseCases/blob/master/Reusability/SMessageService.cs#L63",target:"_blank",rel:"noopener noreferrer"},"SMessage Service"),n(" shows an example of dividing a service into multiple subtasks and dispatching them for instant response times and parallel processing of blocking operations without needing any multi-threading code in your application logic, e.g:")],-1),r=s("div",{class:"language-csharp"},[s("pre",null,[s("code",null,[s("span",{class:"token keyword"},"public"),n(),s("span",{class:"token return-type class-name"},[s("span",{class:"token keyword"},"object")]),n(),s("span",{class:"token function"},"Any"),s("span",{class:"token punctuation"},"("),s("span",{class:"token class-name"},"SMessage"),n(" request"),s("span",{class:"token punctuation"},")"),n(`
`),s("span",{class:"token punctuation"},"{"),n(`
    `),s("span",{class:"token class-name"},[s("span",{class:"token keyword"},"var")]),n(" sw "),s("span",{class:"token operator"},"="),n(" Stopwatch"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"StartNew"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
    `),s("span",{class:"token keyword"},"if"),n(),s("span",{class:"token punctuation"},"("),s("span",{class:"token operator"},"!"),n("request"),s("span",{class:"token punctuation"},"."),n("Defer"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token comment"},"//Process sequentially or Defer execution"),n(`
    `),s("span",{class:"token punctuation"},"{"),n(`
        `),s("span",{class:"token comment"},"//Executes service sequentially: N+1 service calls, times out if N too big"),n(`
        `),s("span",{class:"token class-name"},[s("span",{class:"token keyword"},"var")]),n(" results "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token keyword"},"new"),n(),s("span",{class:"token constructor-invocation class-name"},[n("List"),s("span",{class:"token punctuation"},"<"),n("SMessageReceipt"),s("span",{class:"token punctuation"},">")]),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
        results`),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"AddRange"),s("span",{class:"token punctuation"},"("),n("Email"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"Send"),s("span",{class:"token punctuation"},"("),n("request"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
        results`),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"AddRange"),s("span",{class:"token punctuation"},"("),n("FacebookR"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"Send"),s("span",{class:"token punctuation"},"("),n("request"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
        results`),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"AddRange"),s("span",{class:"token punctuation"},"("),n("Twitter"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"Send"),s("span",{class:"token punctuation"},"("),n("request"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
        Db`),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"InsertAll"),s("span",{class:"token punctuation"},"("),n("results"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
    `),s("span",{class:"token punctuation"},"}"),n(`
    `),s("span",{class:"token keyword"},"else"),n(`
    `),s("span",{class:"token punctuation"},"{"),n(`
        `),s("span",{class:"token comment"},"//Split in smaller tasks and defers messages in MQ broker for parallel processing"),n(`
        Email`),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"CreateMessages"),s("span",{class:"token punctuation"},"("),n("request"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"ForEach"),s("span",{class:"token punctuation"},"("),n("MessageProducer"),s("span",{class:"token punctuation"},"."),n("Publish"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
        Facebook`),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"CreateMessages"),s("span",{class:"token punctuation"},"("),n("request"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"ForEach"),s("span",{class:"token punctuation"},"("),n("MessageProducer"),s("span",{class:"token punctuation"},"."),n("Publish"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
        Twitter`),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"CreateMessages"),s("span",{class:"token punctuation"},"("),n("request"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"ForEach"),s("span",{class:"token punctuation"},"("),n("MessageProducer"),s("span",{class:"token punctuation"},"."),n("Publish"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
    `),s("span",{class:"token punctuation"},"}"),n(`

    `),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token keyword"},"new"),n(),s("span",{class:"token constructor-invocation class-name"},"SMessageResponse"),n(),s("span",{class:"token punctuation"},"{"),n(`
        TimeTakenMs `),s("span",{class:"token operator"},"="),n(" sw"),s("span",{class:"token punctuation"},"."),n("ElapsedMilliseconds"),s("span",{class:"token punctuation"},","),n(`
    `),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token punctuation"},"}"),n(`
`)])])],-1),k=s("h4",{id:"process-each-service-concurrently-without-holding-up-the-processing-of-other-tasks",tabindex:"-1"},[n("Process each service concurrently without holding up the processing of other tasks "),s("a",{class:"header-anchor",href:"#process-each-service-concurrently-without-holding-up-the-processing-of-other-tasks","aria-hidden":"true"},"#")],-1),d=s("p",null,"Another benefit of dispatching messages into multiple sub tasks is if the Email API is slow, it doesn't hold up the processing of the other tasks which are all running concurrently in the background each individually processing messages as fast as they can.",-1),h=s("h4",{id:"easily-parallelize-and-multiply-your-services-throughput",tabindex:"-1"},[n("Easily Parallelize and Multiply your services throughput "),s("a",{class:"header-anchor",href:"#easily-parallelize-and-multiply-your-services-throughput","aria-hidden":"true"},"#")],-1),m=s("p",null,"The RedisMqServer also supports spawning any number of background threads for individual requests, so if Posting to twitter was an IO intensive operation you can double the throughput by simply assigning 2 or more worker threads, e.g:",-1),g=s("div",{class:"language-csharp"},[s("pre",null,[s("code",null,[n("mqService"),s("span",{class:"token punctuation"},"."),s("span",{class:"token generic-method"},[s("span",{class:"token function"},"RegisterHandler"),s("span",{class:"token generic class-name"},[s("span",{class:"token punctuation"},"<"),n("PostStatusTwitter"),s("span",{class:"token punctuation"},">")])]),s("span",{class:"token punctuation"},"("),n("ExecuteMessage"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token named-parameter punctuation"},"noOfThreads"),s("span",{class:"token punctuation"},":"),s("span",{class:"token number"},"2"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
mqService`),s("span",{class:"token punctuation"},"."),s("span",{class:"token generic-method"},[s("span",{class:"token function"},"RegisterHandler"),s("span",{class:"token generic class-name"},[s("span",{class:"token punctuation"},"<"),n("CallFacebook"),s("span",{class:"token punctuation"},">")])]),s("span",{class:"token punctuation"},"("),n("ExecuteMessage"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
mqService`),s("span",{class:"token punctuation"},"."),s("span",{class:"token generic-method"},[s("span",{class:"token function"},"RegisterHandler"),s("span",{class:"token generic class-name"},[s("span",{class:"token punctuation"},"<"),n("EmailMessage"),s("span",{class:"token punctuation"},">")])]),s("span",{class:"token punctuation"},"("),n("ExecuteMessage"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
`)])])],-1),v=s("h2",{id:"redis-mq-client-server",tabindex:"-1"},[n("Redis MQ Client / Server "),s("a",{class:"header-anchor",href:"#redis-mq-client-server","aria-hidden":"true"},"#")],-1),y=s("p",null,[n("A redis-based message queue client/server that can be hosted in any .NET or "),s("a",{href:"http://ASP.NET",target:"_blank",rel:"noopener noreferrer"},"ASP.NET"),n(" application. All Redis MQ Hosts lives in the "),s("a",{href:"https://github.com/ServiceStack/ServiceStack/tree/master/src/ServiceStack.Server/Messaging/Redis",target:"_blank",rel:"noopener noreferrer"},"ServiceStack.Server"),n(" project and brings the many benefits of using a Message Queue.")],-1),w=s("div",{class:"package-reference-box"},[s("div",{class:"flex"},[s("div",{class:"flex-grow pre-container",style:{background:"#002440"}},[s("pre",{class:"sh copy m-0 p-0 pl-2 py-1 align-middle",style:{background:"#002440"}},[s("p",null,[s("code",null,'<PackageReference Include="ServiceStack.Server" Version="5.*" />')]),n(`
`)])]),s("div",{class:"flex-shrink"},[s("i",{class:"svg-copy inline-block w-8 h-full",title:"copy",onclick:"copy(this)"}),s("b")])]),s("div",{class:"copy-text w-full text-right h-6"})],-1),f=s("h4",{id:"redismqserver",tabindex:"-1"},[s("a",{href:"https://github.com/ServiceStack/ServiceStack/tree/master/src/ServiceStack.Server/Messaging/Redis/RedisMqServer.cs",target:"_blank",rel:"noopener noreferrer"},"RedisMqServer"),n(),s("a",{class:"header-anchor",href:"#redismqserver","aria-hidden":"true"},"#")],-1),b=s("p",null,[n("Works by using a background thread for "),s("strong",null,"each service"),n(". This allows you to process messages from different services concurrently. Recommended if you have any long-running services so other services can still run in parallel.")],-1),S=s("p",null,"Major kudos goes to Redis which thanks to its versatility, has Pub/Sub and Lists primitives that makes implementing a Queue trivial.",-1),_=s("h2",{id:"mq-architecture-in-servicestack",tabindex:"-1"},[n("MQ Architecture in ServiceStack "),s("a",{class:"header-anchor",href:"#mq-architecture-in-servicestack","aria-hidden":"true"},"#")],-1),M=s("p",null,"The logical architecture of how a MQ Publisher and MQ Host works together in ServiceStack:",-1),R=s("p",null,[s("img",{src:e,alt:"ServiceStack MQ Client Architecture"})],-1),q=s("h3",{id:"easily-testable-and-swappable",tabindex:"-1"},[n("Easily testable and swappable "),s("a",{class:"header-anchor",href:"#easily-testable-and-swappable","aria-hidden":"true"},"#")],-1),H=s("p",null,[n("All MQ implementations share the same "),s("a",{href:"https://github.com/ServiceStack/ServiceStack/blob/master/src/ServiceStack.Interfaces/Messaging/IMessageService.cs",target:"_blank",rel:"noopener noreferrer"},"IMessageService"),n(" so they're easily swappable and testable. There is also an "),s("a",{href:"https://github.com/ServiceStack/ServiceStack/blob/master/src/ServiceStack/Messaging/InMemoryTransientMessageService.cs",target:"_blank",rel:"noopener noreferrer"},"InMemoryTransientMessageService"),n(" available, useful for development & testing.")],-1),C=s("p",null,"These versions already sports the major features you've come to expect from a MQ:",-1),x=s("ul",null,[s("li",null,"Each service maintains its own Standard and Priority MQ's"),s("li",null,"Automatic Retries on messages generating errors with Failed messages sent to a DLQ (Dead Letter Queue) when its Retry threshold is reached."),s("li",null,[n("Each message can have a ReplyTo pointing to any Queue, alternatively you can even provide a "),s("strong",null,"ServiceStack endpoint URL"),n(" which will send the response to a Web Service instead. If the web service is not available it falls back into publishing it in the default Response Queue so you never lose a message! MQ/Web Services that don't return any output have their Request DTOs sent to a rolling Out queue which can be monitored by external services (i.e. the publisher/callee) to determine when the request has been processed.")])],-1),T=s("h2",{id:"re-use-your-existing-web-services",tabindex:"-1"},[n("Re-use your existing Web Services! "),s("a",{class:"header-anchor",href:"#re-use-your-existing-web-services","aria-hidden":"true"},"#")],-1),Q=s("p",null,[n("Although you can host RedisMqServer in any "),s("a",{href:"http://ASP.NET",target:"_blank",rel:"noopener noreferrer"},"ASP.NET"),n(" web app, the benefit of hosting inside ServiceStack is that your web services are "),s("strong",null,"already capable"),n(" of processing Redis MQ messages "),s("strong",null,"without any changes required"),n(" since they're already effectively designed to work like a Message service to begin with, i.e. C# POCO-in -> C# POCO-out.")],-1),P=s("p",null,"This is another example of how ServiceStack's prescribed DTO-first architecture continues to pay dividends since each web service is a DI clean-room allowing your C# logic to be kept pure as it only has to deal with untainted POCO DTOs, allowing your same web service to be re-used in: SOAP, REST (JSON,XML,JSV,CSV,HTML) web services, view models for dynamic HTML pages and now as a MQ service!",-1),A=s("h2",{id:"example",tabindex:"-1"},[n("Example "),s("a",{class:"header-anchor",href:"#example","aria-hidden":"true"},"#")],-1),E=s("p",null,"Hooking up a basic send/reply example is as easy as:",-1),N=s("div",{class:"language-csharp"},[s("pre",null,[s("code",null,[s("span",{class:"token comment"},"//DTO messages:"),n(`
`),s("span",{class:"token keyword"},"public"),n(),s("span",{class:"token keyword"},"class"),n(),s("span",{class:"token class-name"},"Hello"),n(),s("span",{class:"token punctuation"},"{"),n(),s("span",{class:"token keyword"},"public"),n(),s("span",{class:"token return-type class-name"},[s("span",{class:"token keyword"},"string")]),n(" Name "),s("span",{class:"token punctuation"},"{"),n(),s("span",{class:"token keyword"},"get"),s("span",{class:"token punctuation"},";"),n(),s("span",{class:"token keyword"},"set"),s("span",{class:"token punctuation"},";"),n(),s("span",{class:"token punctuation"},"}"),n(),s("span",{class:"token punctuation"},"}"),n(`
`),s("span",{class:"token keyword"},"public"),n(),s("span",{class:"token keyword"},"class"),n(),s("span",{class:"token class-name"},"HelloResponse"),n(),s("span",{class:"token punctuation"},"{"),n(),s("span",{class:"token keyword"},"public"),n(),s("span",{class:"token return-type class-name"},[s("span",{class:"token keyword"},"string")]),n(" Result "),s("span",{class:"token punctuation"},"{"),n(),s("span",{class:"token keyword"},"get"),s("span",{class:"token punctuation"},";"),n(),s("span",{class:"token keyword"},"set"),s("span",{class:"token punctuation"},";"),n(),s("span",{class:"token punctuation"},"}"),n(),s("span",{class:"token punctuation"},"}"),n(`

`),s("span",{class:"token class-name"},[s("span",{class:"token keyword"},"var")]),n(" redisFactory "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token keyword"},"new"),n(),s("span",{class:"token constructor-invocation class-name"},"PooledRedisClientManager"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},'"localhost:6379"'),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token class-name"},[s("span",{class:"token keyword"},"var")]),n(" mqHost "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token keyword"},"new"),n(),s("span",{class:"token constructor-invocation class-name"},"RedisMqServer"),s("span",{class:"token punctuation"},"("),n("redisFactory"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token named-parameter punctuation"},"retryCount"),s("span",{class:"token punctuation"},":"),s("span",{class:"token number"},"2"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`

`),s("span",{class:"token comment"},"//Server - MQ Service Impl:"),n(`
mqHost`),s("span",{class:"token punctuation"},"."),s("span",{class:"token generic-method"},[s("span",{class:"token function"},"RegisterHandler"),s("span",{class:"token generic class-name"},[s("span",{class:"token punctuation"},"<"),n("Hello"),s("span",{class:"token punctuation"},">")])]),s("span",{class:"token punctuation"},"("),n("m "),s("span",{class:"token operator"},"=>"),n(`
    `),s("span",{class:"token keyword"},"new"),n(),s("span",{class:"token constructor-invocation class-name"},"HelloResponse"),n(),s("span",{class:"token punctuation"},"{"),n(" Result "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token string"},'"Hello, "'),n(),s("span",{class:"token operator"},"+"),n(" m"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"GetBody"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"."),n("Name "),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
mqHost`),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"Start"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`

`),s("span",{class:"token range operator"},".."),s("span",{class:"token punctuation"},"."),n(`

`),s("span",{class:"token comment"},"//Client - Process Response:"),n(`
mqHost`),s("span",{class:"token punctuation"},"."),s("span",{class:"token generic-method"},[s("span",{class:"token function"},"RegisterHandler"),s("span",{class:"token generic class-name"},[s("span",{class:"token punctuation"},"<"),n("HelloResponse"),s("span",{class:"token punctuation"},">")])]),s("span",{class:"token punctuation"},"("),n("m "),s("span",{class:"token operator"},"=>"),n(),s("span",{class:"token punctuation"},"{"),n(`
    Console`),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"WriteLine"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},'"Received: "'),n(),s("span",{class:"token operator"},"+"),n(" m"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"GetBody"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"."),n("Result"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
mqHost`),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"Start"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`

`),s("span",{class:"token range operator"},".."),s("span",{class:"token punctuation"},"."),n(`

`),s("span",{class:"token comment"},"//Producer - Start publishing messages:"),n(`
`),s("span",{class:"token class-name"},[s("span",{class:"token keyword"},"var")]),n(" mqClient "),s("span",{class:"token operator"},"="),n(" mqHost"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"CreateMessageQueueClient"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
mqClient`),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"Publish"),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"new"),n(),s("span",{class:"token constructor-invocation class-name"},"Hello"),n(),s("span",{class:"token punctuation"},"{"),n(" Name "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token string"},'"ServiceStack"'),n(),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`

`)])])],-1),I=s("h2",{id:"redis",tabindex:"-1"},[n("Redis "),s("a",{class:"header-anchor",href:"#redis","aria-hidden":"true"},"#")],-1),F=s("div",{class:"info custom-block"},[s("p",{class:"custom-block-title"},"INFO"),s("p",null,[n("This is a quote of a "),s("a",{href:"https://groups.google.com/d/msg/servicestack/Jl1xjlLH-4E/kz8mL_bq9zMJ",target:"_blank",rel:"noopener noreferrer"},"google group topic"),n(" to provide more information about ServiceStack and Redis until more documentation/examples are added")])],-1),O=s("p",null,"Redis is a NoSQL datastore that runs as a network server. To start it you need to run an instance of redis-server either locally or remotely accessible.",-1),L=s("p",null,[n("Probably will help to understand the background concepts behind Redis so you can get a better idea of how it works. This StackOverflow answer has a "),s("a",{href:"http://stackoverflow.com/a/2760282/85785",target:"_blank",rel:"noopener noreferrer"},"good overview about Redis in .NET"),n(".")],-1),W=s("p",null,[n("The "),s("code",null,"RedisMqServer"),n(" is in "),s("a",{href:"https://www.nuget.org/packages/ServiceStack.Server",target:"_blank",rel:"noopener noreferrer"},"ServiceStack.Server"),n(" project and can be installed with:")],-1),D=s("div",{class:"package-reference-box"},[s("div",{class:"flex"},[s("div",{class:"flex-grow pre-container",style:{background:"#002440"}},[s("pre",{class:"sh copy m-0 p-0 pl-2 py-1 align-middle",style:{background:"#002440"}},[s("p",null,[s("code",null,'<PackageReference Include="ServiceStack.Server" Version="5.*" />')]),n(`
`)])]),s("div",{class:"flex-shrink"},[s("i",{class:"svg-copy inline-block w-8 h-full",title:"copy",onclick:"copy(this)"}),s("b")])]),s("div",{class:"copy-text w-full text-right h-6"})],-1),j=s("p",null,[n("Redis MQ works by listening for messages published to the central "),s("code",null,"mq:topic:in"),n(" Redis Channel and processes any messages sent in separate background threads which are started from inside your AppHost when calling "),s("code",null,"RedisMqServer.Start()"),n(".")],-1),B=s("p",null,[n("For duplex communication each client and server will require its own AppHost + RedisMqServer Host, although unless your server is going to call HTTP services on the client you can use a "),s("a",{href:"https://github.com/ServiceStack/ServiceStack/blob/master/src/ServiceStack/Testing/BasicAppHost.cs",target:"_blank",rel:"noopener noreferrer"},"BasicAppHost"),n(".")],-1),G=s("p",null,"Here is a simple example of a client/server with HTTP + RedisMQ enabled on the server, and just RedisMQ on the client:",-1),U=s("h4",{id:"shared-cs",tabindex:"-1"},[n("Shared.cs "),s("a",{class:"header-anchor",href:"#shared-cs","aria-hidden":"true"},"#")],-1),V=s("div",{class:"language-csharp"},[s("pre",null,[s("code",null,[s("span",{class:"token keyword"},"using"),n(),s("span",{class:"token namespace"},"System"),s("span",{class:"token punctuation"},";"),n(`

`),s("span",{class:"token keyword"},"namespace"),n(),s("span",{class:"token namespace"},"TestMqShared"),n(`
`),s("span",{class:"token punctuation"},"{"),n(`
    `),s("span",{class:"token keyword"},"public"),n(),s("span",{class:"token keyword"},"class"),n(),s("span",{class:"token class-name"},"Hello"),n(),s("span",{class:"token punctuation"},"{"),n(` 
        `),s("span",{class:"token keyword"},"public"),n(),s("span",{class:"token return-type class-name"},[s("span",{class:"token keyword"},"string")]),n(" Name "),s("span",{class:"token punctuation"},"{"),n(),s("span",{class:"token keyword"},"get"),s("span",{class:"token punctuation"},";"),n(),s("span",{class:"token keyword"},"set"),s("span",{class:"token punctuation"},";"),n(),s("span",{class:"token punctuation"},"}"),n(` 
    `),s("span",{class:"token punctuation"},"}"),n(`
    `),s("span",{class:"token keyword"},"public"),n(),s("span",{class:"token keyword"},"class"),n(),s("span",{class:"token class-name"},"HelloResponse"),n(),s("span",{class:"token punctuation"},"{"),n(` 
        `),s("span",{class:"token keyword"},"public"),n(),s("span",{class:"token return-type class-name"},[s("span",{class:"token keyword"},"string")]),n(" Result "),s("span",{class:"token punctuation"},"{"),n(),s("span",{class:"token keyword"},"get"),s("span",{class:"token punctuation"},";"),n(),s("span",{class:"token keyword"},"set"),s("span",{class:"token punctuation"},";"),n(),s("span",{class:"token punctuation"},"}"),n(` 
    `),s("span",{class:"token punctuation"},"}"),n(`
`),s("span",{class:"token punctuation"},"}"),n(`
`)])])],-1),z=s("h4",{id:"server-cs",tabindex:"-1"},[n("Server.cs "),s("a",{class:"header-anchor",href:"#server-cs","aria-hidden":"true"},"#")],-1),J=s("div",{class:"language-csharp"},[s("pre",null,[s("code",null,[s("span",{class:"token keyword"},"using"),n(),s("span",{class:"token namespace"},"System"),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token keyword"},"using"),n(),s("span",{class:"token namespace"},"Funq"),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token keyword"},"using"),n(),s("span",{class:"token namespace"},"ServiceStack"),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token keyword"},"using"),n(),s("span",{class:"token namespace"},[n("ServiceStack"),s("span",{class:"token punctuation"},"."),n("Messaging"),s("span",{class:"token punctuation"},"."),n("Redis")]),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token keyword"},"using"),n(),s("span",{class:"token namespace"},[n("ServiceStack"),s("span",{class:"token punctuation"},"."),n("Redis")]),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token keyword"},"using"),n(),s("span",{class:"token namespace"},[n("ServiceStack"),s("span",{class:"token punctuation"},"."),n("Testing")]),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token keyword"},"using"),n(),s("span",{class:"token namespace"},"TestMqShared"),s("span",{class:"token punctuation"},";"),n(`

`),s("span",{class:"token keyword"},"namespace"),n(),s("span",{class:"token namespace"},"TestMq"),n(`
`),s("span",{class:"token punctuation"},"{"),n(`
    `),s("span",{class:"token comment"},"//Server"),n(`
    `),s("span",{class:"token keyword"},"public"),n(),s("span",{class:"token keyword"},"class"),n(),s("span",{class:"token class-name"},"HelloService"),n(),s("span",{class:"token punctuation"},":"),n(),s("span",{class:"token type-list"},[s("span",{class:"token class-name"},"Service")]),n(` 
    `),s("span",{class:"token punctuation"},"{"),n(`
        `),s("span",{class:"token keyword"},"public"),n(),s("span",{class:"token return-type class-name"},[s("span",{class:"token keyword"},"object")]),n(),s("span",{class:"token function"},"Any"),s("span",{class:"token punctuation"},"("),s("span",{class:"token class-name"},"Hello"),n(" req"),s("span",{class:"token punctuation"},")"),n(` 
        `),s("span",{class:"token punctuation"},"{"),n(` 
            `),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token keyword"},"new"),n(),s("span",{class:"token constructor-invocation class-name"},"HelloResponse"),n(),s("span",{class:"token punctuation"},"{"),n(" Result "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token string"},'"Hello, "'),n(),s("span",{class:"token operator"},"+"),n(" req"),s("span",{class:"token punctuation"},"."),n("Name "),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},";"),n(` 
        `),s("span",{class:"token punctuation"},"}"),n(`
    `),s("span",{class:"token punctuation"},"}"),n(`

    `),s("span",{class:"token keyword"},"public"),n(),s("span",{class:"token keyword"},"class"),n(),s("span",{class:"token class-name"},"ServerAppHost"),n(),s("span",{class:"token punctuation"},":"),n(),s("span",{class:"token type-list"},[s("span",{class:"token class-name"},"AppHostHttpListenerBase")]),n(` 
    `),s("span",{class:"token punctuation"},"{"),n(`
        `),s("span",{class:"token keyword"},"public"),n(),s("span",{class:"token function"},"ServerAppHost"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},":"),n(),s("span",{class:"token keyword"},"base"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},'"Test Server"'),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token keyword"},"typeof"),s("span",{class:"token punctuation"},"("),s("span",{class:"token type-expression class-name"},"HelloService"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"."),n("Assembly"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{"),s("span",{class:"token punctuation"},"}"),n(`

        `),s("span",{class:"token keyword"},"public"),n(),s("span",{class:"token keyword"},"override"),n(),s("span",{class:"token return-type class-name"},[s("span",{class:"token keyword"},"void")]),n(),s("span",{class:"token function"},"Configure"),s("span",{class:"token punctuation"},"("),s("span",{class:"token class-name"},"Container"),n(" container"),s("span",{class:"token punctuation"},")"),n(` 
        `),s("span",{class:"token punctuation"},"{"),n(`
            `),s("span",{class:"token keyword"},"base"),s("span",{class:"token punctuation"},"."),n(`Routes
                `),s("span",{class:"token punctuation"},"."),s("span",{class:"token generic-method"},[s("span",{class:"token function"},"Add"),s("span",{class:"token generic class-name"},[s("span",{class:"token punctuation"},"<"),n("Hello"),s("span",{class:"token punctuation"},">")])]),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},'"/hello"'),s("span",{class:"token punctuation"},")"),n(`
                `),s("span",{class:"token punctuation"},"."),s("span",{class:"token generic-method"},[s("span",{class:"token function"},"Add"),s("span",{class:"token generic class-name"},[s("span",{class:"token punctuation"},"<"),n("Hello"),s("span",{class:"token punctuation"},">")])]),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},'"/hello/{Name}"'),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`

            `),s("span",{class:"token class-name"},[s("span",{class:"token keyword"},"var")]),n(" redisFactory "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token keyword"},"new"),n(),s("span",{class:"token constructor-invocation class-name"},"PooledRedisClientManager"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},'"localhost:6379"'),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
            container`),s("span",{class:"token punctuation"},"."),s("span",{class:"token generic-method"},[s("span",{class:"token function"},"Register"),s("span",{class:"token generic class-name"},[s("span",{class:"token punctuation"},"<"),n("IRedisClientsManager"),s("span",{class:"token punctuation"},">")])]),s("span",{class:"token punctuation"},"("),n("redisFactory"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(` 
            `),s("span",{class:"token class-name"},[s("span",{class:"token keyword"},"var")]),n(" mqHost "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token keyword"},"new"),n(),s("span",{class:"token constructor-invocation class-name"},"RedisMqServer"),s("span",{class:"token punctuation"},"("),n("redisFactory"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token named-parameter punctuation"},"retryCount"),s("span",{class:"token punctuation"},":"),s("span",{class:"token number"},"2"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`

            `),s("span",{class:"token comment"},"//Server - MQ Service Impl:"),n(`

            `),s("span",{class:"token comment"},"//Listens for 'Hello' messages sent with: mqClient.Publish(new Hello { ... })"),n(`
            mqHost`),s("span",{class:"token punctuation"},"."),s("span",{class:"token generic-method"},[s("span",{class:"token function"},"RegisterHandler"),s("span",{class:"token generic class-name"},[s("span",{class:"token punctuation"},"<"),n("Hello"),s("span",{class:"token punctuation"},">")])]),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"base"),s("span",{class:"token punctuation"},"."),n("ExecuteMessage"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
            mqHost`),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"Start"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(),s("span",{class:"token comment"},"//Starts listening for messages"),n(`
        `),s("span",{class:"token punctuation"},"}"),n(`
    `),s("span",{class:"token punctuation"},"}"),n(`

    `),s("span",{class:"token keyword"},"class"),n(),s("span",{class:"token class-name"},"MainClass"),n(`
    `),s("span",{class:"token punctuation"},"{"),n(`
        `),s("span",{class:"token keyword"},"public"),n(),s("span",{class:"token keyword"},"static"),n(),s("span",{class:"token return-type class-name"},[s("span",{class:"token keyword"},"void")]),n(),s("span",{class:"token function"},"Main"),s("span",{class:"token punctuation"},"("),s("span",{class:"token class-name"},[s("span",{class:"token keyword"},"string"),s("span",{class:"token punctuation"},"["),s("span",{class:"token punctuation"},"]")]),n(" args"),s("span",{class:"token punctuation"},")"),n(`
        `),s("span",{class:"token punctuation"},"{"),n(`
            `),s("span",{class:"token class-name"},[s("span",{class:"token keyword"},"var")]),n(" serverAppHost "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token keyword"},"new"),n(),s("span",{class:"token constructor-invocation class-name"},"ServerAppHost"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
            serverAppHost`),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"Init"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(` 
            serverAppHost`),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"Start"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},'"http://localhost:1400/"'),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
            Console`),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"WriteLine"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},'"Server running.  Press enter to terminate..."'),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
            `),s("span",{class:"token comment"},"//Prevent server from exiting (when running in ConsoleApp)"),n(`
            Console`),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"ReadLine"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(` 
        `),s("span",{class:"token punctuation"},"}"),n(`
    `),s("span",{class:"token punctuation"},"}"),n(`
`),s("span",{class:"token punctuation"},"}"),n(`
`)])])],-1),$=s("h4",{id:"client-cs",tabindex:"-1"},[n("Client.cs "),s("a",{class:"header-anchor",href:"#client-cs","aria-hidden":"true"},"#")],-1),X=s("div",{class:"language-csharp"},[s("pre",null,[s("code",null,[s("span",{class:"token keyword"},"using"),n(),s("span",{class:"token namespace"},"System"),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token keyword"},"using"),n(),s("span",{class:"token namespace"},"Funq"),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token keyword"},"using"),n(),s("span",{class:"token namespace"},"ServiceStack"),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token keyword"},"using"),n(),s("span",{class:"token namespace"},[n("ServiceStack"),s("span",{class:"token punctuation"},"."),n("Messaging")]),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token keyword"},"using"),n(),s("span",{class:"token namespace"},[n("ServiceStack"),s("span",{class:"token punctuation"},"."),n("Messaging"),s("span",{class:"token punctuation"},"."),n("Redis")]),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token keyword"},"using"),n(),s("span",{class:"token namespace"},[n("ServiceStack"),s("span",{class:"token punctuation"},"."),n("Redis")]),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token keyword"},"using"),n(),s("span",{class:"token namespace"},[n("ServiceStack"),s("span",{class:"token punctuation"},"."),n("Testing")]),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token keyword"},"using"),n(),s("span",{class:"token namespace"},"TestMqShared"),s("span",{class:"token punctuation"},";"),n(`

`),s("span",{class:"token keyword"},"namespace"),n(),s("span",{class:"token namespace"},"TestMqCli"),n(`
`),s("span",{class:"token punctuation"},"{"),n(`
    `),s("span",{class:"token keyword"},"class"),n(),s("span",{class:"token class-name"},"MainClass"),n(`
    `),s("span",{class:"token punctuation"},"{"),n(`
        `),s("span",{class:"token keyword"},"public"),n(),s("span",{class:"token keyword"},"static"),n(),s("span",{class:"token return-type class-name"},[s("span",{class:"token keyword"},"void")]),n(),s("span",{class:"token function"},"Main"),s("span",{class:"token punctuation"},"("),s("span",{class:"token class-name"},[s("span",{class:"token keyword"},"string"),s("span",{class:"token punctuation"},"["),s("span",{class:"token punctuation"},"]")]),n(" args"),s("span",{class:"token punctuation"},")"),n(`
        `),s("span",{class:"token punctuation"},"{"),n(`
            `),s("span",{class:"token class-name"},[s("span",{class:"token keyword"},"var")]),n(" redisFactory "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token keyword"},"new"),n(),s("span",{class:"token constructor-invocation class-name"},"PooledRedisClientManager"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},'"localhost:6379"'),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
            `),s("span",{class:"token class-name"},[s("span",{class:"token keyword"},"var")]),n(" mqServer "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token keyword"},"new"),n(),s("span",{class:"token constructor-invocation class-name"},"RedisMqServer"),s("span",{class:"token punctuation"},"("),n("redisFactory"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token named-parameter punctuation"},"retryCount"),s("span",{class:"token punctuation"},":"),s("span",{class:"token number"},"2"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`

            `),s("span",{class:"token comment"},"//Client - MQ Service Impl:"),n(`
            `),s("span",{class:"token comment"},"//Listens for 'HelloResponse' returned by the 'Hello' Service"),n(`
            mqServer`),s("span",{class:"token punctuation"},"."),s("span",{class:"token generic-method"},[s("span",{class:"token function"},"RegisterHandler"),s("span",{class:"token generic class-name"},[s("span",{class:"token punctuation"},"<"),n("HelloResponse"),s("span",{class:"token punctuation"},">")])]),s("span",{class:"token punctuation"},"("),n("m "),s("span",{class:"token operator"},"=>"),n(),s("span",{class:"token punctuation"},"{"),n(`  
                Console`),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"WriteLine"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},'"Received: "'),n(),s("span",{class:"token operator"},"+"),n(" m"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"GetBody"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"."),n("Result"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
                `),s("span",{class:"token comment"},"// See comments below"),n(`
                `),s("span",{class:"token comment"},"// m.Options = (int)MessageOption.None;"),n(`
                `),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token keyword"},"null"),s("span",{class:"token punctuation"},";"),n(`
            `),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`

            `),s("span",{class:"token comment"},"//or to call an existing service with:"),n(`
            `),s("span",{class:"token comment"},"//mqServer.RegisterHandler<HelloResponse>(m =>   "),n(`
            `),s("span",{class:"token comment"},"//    this.ServiceController.ExecuteMessage(m));"),n(`

            mqServer`),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"Start"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(),s("span",{class:"token comment"},"//Starts listening for messages"),n(`

            `),s("span",{class:"token class-name"},[s("span",{class:"token keyword"},"var")]),n(" mqClient "),s("span",{class:"token operator"},"="),n(" mqServer"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"CreateMessageQueueClient"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
            mqClient`),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"Publish"),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"new"),n(),s("span",{class:"token constructor-invocation class-name"},"Hello"),n(),s("span",{class:"token punctuation"},"{"),n(" Name "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token string"},'"Client 1"'),n(),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`

            Console`),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"WriteLine"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},'"Client running.  Press any key to terminate..."'),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
            Console`),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"ReadLine"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(),s("span",{class:"token comment"},"//Prevent self-hosted Console App from exiting"),n(`
        `),s("span",{class:"token punctuation"},"}"),n(`
    `),s("span",{class:"token punctuation"},"}"),n(`
`),s("span",{class:"token punctuation"},"}"),n(`
`)])])],-1),Y=s("p",null,[n("The first RedisMQ host listening to the "),s("code",null,"Hello"),n(" message (i.e. the server) will process the message.")],-1),K=s("p",null,"When the server returns a 'HelloResponse' message it gets put on the 'HelloResponse' Inbox Queue and the first RedisMQ Host listening to the 'HelloResponse' message (i.e. Client) will have their callback fired.",-1),Z=s("p",null,[n("Note that the "),s("code",null,"HelloResponse"),n(" will get put back on a 'transient' message queue, "),s("code",null,"mq.HelloResponse.outq"),n(" with a maximum message limit of 100 (by default). You can subscribe to this queue to get a notification and do further processing, such as recording the number of messages handled. Or you can clear the message "),s("code",null,"NotifyOneWay"),n(" option to prevent this.")],-1),ss=s("h3",{id:"redismq-client",tabindex:"-1"},[n("RedisMQ Client "),s("a",{class:"header-anchor",href:"#redismq-client","aria-hidden":"true"},"#")],-1),ns=s("p",null,[n("Clients can use a "),s("code",null,"RedisMessageProducer"),n(" to be able to publish a message, e.g:")],-1),es=s("div",{class:"language-csharp"},[s("pre",null,[s("code",null,[s("span",{class:"token class-name"},[s("span",{class:"token keyword"},"var")]),n(" redisManager "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token keyword"},"new"),n(),s("span",{class:"token constructor-invocation class-name"},"RedisManagerPool"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},'"localhost:6379"'),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token keyword"},"using"),n(),s("span",{class:"token punctuation"},"("),s("span",{class:"token class-name"},[s("span",{class:"token keyword"},"var")]),n(" mqClient "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token keyword"},"new"),n(),s("span",{class:"token constructor-invocation class-name"},"RedisMessageProducer"),s("span",{class:"token punctuation"},"("),n("redisManager"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},")"),n(`
`),s("span",{class:"token punctuation"},"{"),n(`
    mqClient`),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"Publish"),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"new"),n(),s("span",{class:"token constructor-invocation class-name"},"Hello"),n(),s("span",{class:"token punctuation"},"{"),n(" Name "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token string"},'"Client 1"'),n(),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token punctuation"},"}"),n(`
`)])])],-1),as=s("p",null,[n("Or if preferred can instead use a "),s("code",null,"RedisMessageFactory"),n(" which provide access to both "),s("a",{href:"https://github.com/ServiceStack/ServiceStack/blob/master/src/ServiceStack.Interfaces/Messaging/IMessageQueueClient.cs",target:"_blank",rel:"noopener noreferrer"},"IMessageQueueClient"),n(" and "),s("a",{href:"https://github.com/ServiceStack/ServiceStack/blob/master/src/ServiceStack.Interfaces/Messaging/IMessageProducer.cs",target:"_blank",rel:"noopener noreferrer"},"IMessageProducer"),n(":")],-1),ts=s("div",{class:"language-csharp"},[s("pre",null,[s("code",null,[s("span",{class:"token class-name"},"IMessageFactory"),n(" redisMqFactory "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token keyword"},"new"),n(),s("span",{class:"token constructor-invocation class-name"},"RedisMessageFactory"),s("span",{class:"token punctuation"},"("),n("redisManager"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token keyword"},"using"),n(),s("span",{class:"token punctuation"},"("),s("span",{class:"token class-name"},[s("span",{class:"token keyword"},"var")]),n(" mqClient "),s("span",{class:"token operator"},"="),n(" redisMqFactory"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"CreateMessageQueueClient"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},")"),n(`
`),s("span",{class:"token punctuation"},"{"),n(`
    mqClient`),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"Publish"),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"new"),n(),s("span",{class:"token constructor-invocation class-name"},"Hello"),n(),s("span",{class:"token punctuation"},"{"),n(" Name "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token string"},'"Client 1"'),n(),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token punctuation"},"}"),n(`
`)])])],-1),os=s("h3",{id:"request-reply-mq-pattern",tabindex:"-1"},[n("Request + Reply MQ Pattern "),s("a",{class:"header-anchor",href:"#request-reply-mq-pattern","aria-hidden":"true"},"#")],-1),cs=s("p",null,"However MQ's are normally used for async OneWay messages as any client host listening to 'HelloResponse' could receive the response message, and only 1 will, which is not guaranteed to be the client that sent the original message. For this reason you want to make use of the ReplyTo field of the Message for Request/Reply responses.",-1),ls=s("div",{class:"language-csharp"},[s("pre",null,[s("code",null,[s("span",{class:"token class-name"},[s("span",{class:"token keyword"},"var")]),n(" uniqueCallbackQ "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token string"},'"mq:c1"'),n(),s("span",{class:"token operator"},"+"),n(),s("span",{class:"token string"},'":"'),n(" Guid"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"NewGuid"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"ToString"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},'"N"'),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token class-name"},[s("span",{class:"token keyword"},"var")]),n(" clientMsg "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token keyword"},"new"),n(),s("span",{class:"token constructor-invocation class-name"},[n("Message"),s("span",{class:"token punctuation"},"<"),n("Hello"),s("span",{class:"token punctuation"},">")]),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"new"),n(),s("span",{class:"token constructor-invocation class-name"},"Hello"),n(),s("span",{class:"token punctuation"},"{"),n(" Name "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token string"},'"Client 1"'),n(),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{"),n(`
   ReplyTo `),s("span",{class:"token operator"},"="),n(`  uniqueCallbackQ
`),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},";"),n(`
mqClient`),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"Publish"),s("span",{class:"token punctuation"},"("),n(" clientMsg "),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token comment"},"//Blocks thread on client until reply message is received"),n(`
`),s("span",{class:"token class-name"},[s("span",{class:"token keyword"},"var")]),n(" response "),s("span",{class:"token operator"},"="),n(" mqClient"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"Get"),s("span",{class:"token punctuation"},"("),n("clientMsg"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"."),s("span",{class:"token generic-method"},[s("span",{class:"token function"},"ToMessage"),s("span",{class:"token generic class-name"},[s("span",{class:"token punctuation"},"<"),n("HelloResponse"),s("span",{class:"token punctuation"},">")])]),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`  
`)])])],-1),ps=s("p",null,"Note: The ReplyTo callback url could also be a ServiceStack endpoint that expects a 'HelloResponse' e.g.",-1),is=s("div",{class:"language-csharp"},[s("pre",null,[s("code",null,[s("span",{class:"token class-name"},[s("span",{class:"token keyword"},"var")]),n(" clientMsg "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token keyword"},"new"),n(),s("span",{class:"token constructor-invocation class-name"},[n("Message"),s("span",{class:"token punctuation"},"<"),n("Hello"),s("span",{class:"token punctuation"},">")]),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"new"),n(),s("span",{class:"token constructor-invocation class-name"},"Hello"),n(),s("span",{class:"token punctuation"},"{"),n(" Name "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token string"},'"Client 1"'),n(),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{"),n(`
   ReplyTo `),s("span",{class:"token operator"},"="),n("  "),s("span",{class:"token string"},'"http://clienthost:82/helloresponse"'),n(`
`),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},";"),n(`
`)])])],-1),us=s("p",null,"In this case the server wont put the response message on the back on the MQ and will instead send the response directly to your client web service host.",-1),rs=s("p",null,"There's a few MQ concepts covered above here, I invite you to do your own reading on MQ's in general as it works a little different to normal request/reply web services.",-1),ks=s("p",null,[n("See Also: "),s("a",{href:"http://masonoise.files.wordpress.com/2010/03/redis-cheatsheet-v1.pdf",target:"_blank",rel:"noopener noreferrer"},"Redis Commands (PDF)")],-1),ds=[l,p,i,u,r,k,d,h,m,g,v,y,w,f,b,S,_,M,R,q,H,C,x,T,Q,P,A,E,N,I,F,O,L,W,D,j,B,G,U,V,z,J,$,X,Y,K,Z,ss,ns,es,as,ts,os,cs,ls,ps,is,us,rs,ks];function hs(ms,gs,vs,ys,ws,fs){return o(),t("div",null,ds)}var Ms=a(c,[["render",hs]]);export{_s as __pageData,Ms as default};
