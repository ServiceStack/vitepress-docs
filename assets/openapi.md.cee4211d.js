import{_ as s,a as t,b as a,c as o,d as l,e as c,f as i,g as r,h as u}from"./8-created.76976510.js";import{_ as p,c as d,o as k,b as n,e}from"./app.14440598.js";var h="/assets/bearer-auth.d6d4b2f2.png",g="/assets/1-search.9c5409bb.png";const De='{"title":"Open API","description":"","frontmatter":{"slug":"openapi","title":"Open API"},"headers":[{"level":2,"title":"Installation","slug":"installation"},{"level":2,"title":"Open API Attributes","slug":"open-api-attributes"},{"level":3,"title":"Group APIs with Tags","slug":"group-apis-with-tags"},{"level":3,"title":"Exclude Services from Metadata Pages","slug":"exclude-services-from-metadata-pages"},{"level":3,"title":"Operation filters","slug":"operation-filters"},{"level":3,"title":"Properties naming conventions","slug":"properties-naming-conventions"},{"level":3,"title":"Change default Verbs","slug":"change-default-verbs"},{"level":3,"title":"Miscellaneous configuration options","slug":"miscellaneous-configuration-options"},{"level":2,"title":"Virtual File System","slug":"virtual-file-system"},{"level":3,"title":"Overriding OpenAPI Embedded Resources","slug":"overriding-openapi-embedded-resources"},{"level":3,"title":"Swagger UI Security","slug":"swagger-ui-security"},{"level":3,"title":"Basic Auth in OpenAPI","slug":"basic-auth-in-openapi"},{"level":2,"title":"Generating AutoRest client","slug":"generating-autorest-client"},{"level":3,"title":"AutoRest Generated Clients vs Add ServiceStack Reference","slug":"autorest-generated-clients-vs-add-servicestack-reference"},{"level":3,"title":"Known issues","slug":"known-issues"},{"level":2,"title":"Publish Azure Management API","slug":"publish-azure-management-api"}],"relativePath":"openapi.md","lastUpdated":1634495308426}',m={},_=n("p",null,[n("img",{src:"https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/openapi/openapi-banner.png",alt:""})],-1),b=n("p",null,[n("a",{href:"https://www.openapis.org/",target:"_blank",rel:"noopener noreferrer"},"Open API"),e(" is a specification and complete framework implementation for describing, producing, consuming, and visualizing RESTful web services. ServiceStack implements the "),n("a",{href:"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md",target:"_blank",rel:"noopener noreferrer"},"OpenAPI Spec"),e(" back-end and embeds the Swagger UI front-end in a separate plugin which is available under "),n("a",{href:"http://nuget.org/packages/ServiceStack.Api.OpenApi/",target:"_blank",rel:"noopener noreferrer"},"OpenAPI NuGet package"),e(":")],-1),f=n("div",{class:"package-reference-box"},[n("div",{class:"flex"},[n("div",{class:"flex-grow pre-container",style:{background:"#002440"}},[n("pre",{class:"sh copy m-0 p-0 pl-2 py-1 align-middle",style:{background:"#002440"}},[n("p",null,[n("code",null,'<PackageReference Include="ServiceStack.Api.OpenApi" Version="5.*" />')]),e(`
`)])]),n("div",{class:"flex-shrink"},[n("i",{class:"svg-copy inline-block w-8 h-full",title:"copy",onclick:"copy(this)"}),n("b")])]),n("div",{class:"copy-text w-full text-right h-6"})],-1),w=n("h2",{id:"installation",tabindex:"-1"},[e("Installation "),n("a",{class:"header-anchor",href:"#installation","aria-hidden":"true"},"#")],-1),y=n("p",null,[e("You can enable Open API by registering the "),n("code",null,"OpenApiFeature"),e(" plugin in AppHost with:")],-1),v=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token keyword"},"public"),e(),n("span",{class:"token keyword"},"override"),e(),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"void")]),e(),n("span",{class:"token function"},"Configure"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Container"),e(" container"),n("span",{class:"token punctuation"},")"),e(`
`),n("span",{class:"token punctuation"},"{"),e(`
    `),n("span",{class:"token range operator"},".."),n("span",{class:"token punctuation"},"."),e(`
    Plugins`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},"OpenApiFeature"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`

    `),n("span",{class:"token comment"},"// Uncomment CORS feature if it needs to be accessible from external sites "),e(`
    `),n("span",{class:"token comment"},"// Plugins.Add(new CorsFeature()); "),e(`
    `),n("span",{class:"token range operator"},".."),n("span",{class:"token punctuation"},"."),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])])],-1),A=n("p",null,[e("Then you will be able to view the Swagger UI from "),n("code",null,"/swagger-ui/"),e(". A link to "),n("strong",null,"Swagger UI"),e(" will also be available from your "),n("code",null,"/metadata"),e(),n("a",{href:"/metadata-page.html"},"Metadata Page"),e(".")],-1),S=n("h2",{id:"open-api-attributes",tabindex:"-1"},[e("Open API Attributes "),n("a",{class:"header-anchor",href:"#open-api-attributes","aria-hidden":"true"},"#")],-1),P=n("p",null,[e("Each route could have a separate summary and description. You can set it with "),n("code",null,"Route"),e(" attribute:")],-1),T=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token punctuation"},"["),n("span",{class:"token attribute"},[n("span",{class:"token class-name"},"Route"),n("span",{class:"token attribute-arguments"},[n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"/hello"'),n("span",{class:"token punctuation"},","),e(" Summary "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token string"},'@"Default hello service."'),n("span",{class:"token punctuation"},","),e(` 
    Notes `),n("span",{class:"token operator"},"="),e(),n("span",{class:"token string"},'"Longer description for hello service."'),n("span",{class:"token punctuation"},")")])]),n("span",{class:"token punctuation"},"]"),e(`
`)])])],-1),I=n("p",null,"You can set specific description for each HTTP method like shown below:",-1),O=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token punctuation"},"["),n("span",{class:"token attribute"},[n("span",{class:"token class-name"},"Route"),n("span",{class:"token attribute-arguments"},[n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"/hello/{Name}"'),n("span",{class:"token punctuation"},","),e(),n("span",{class:"token string"},'"GET"'),n("span",{class:"token punctuation"},","),e(" Summary"),n("span",{class:"token operator"},"="),n("span",{class:"token string"},`"Says 'Hello' to provided Name"`),n("span",{class:"token punctuation"},","),e(` 
    Notes `),n("span",{class:"token operator"},"="),e(),n("span",{class:"token string"},`"Longer description of the GET method which says 'Hello'"`),n("span",{class:"token punctuation"},")")])]),n("span",{class:"token punctuation"},"]"),e(`
`),n("span",{class:"token punctuation"},"["),n("span",{class:"token attribute"},[n("span",{class:"token class-name"},"Route"),n("span",{class:"token attribute-arguments"},[n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"/hello/{Name}"'),n("span",{class:"token punctuation"},","),e(),n("span",{class:"token string"},'"POST"'),n("span",{class:"token punctuation"},","),e(" Summary"),n("span",{class:"token operator"},"="),n("span",{class:"token string"},`"Says 'Hello' to provided Name"`),n("span",{class:"token punctuation"},","),e(` 
    Notes `),n("span",{class:"token operator"},"="),e(),n("span",{class:"token string"},`"Longer description of the POST method which says 'Hello'"`),n("span",{class:"token punctuation"},")")])]),n("span",{class:"token punctuation"},"]"),e(`
`)])])],-1),x=n("p",null,[e("You can further document your services in the OpenAPI with the new "),n("code",null,"[Api]"),e(" and "),n("code",null,"[ApiMember]"),e(" annotation attributes, e,g: Here's an example of a fully documented service:")],-1),R=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token punctuation"},"["),n("span",{class:"token attribute"},[n("span",{class:"token class-name"},"Api"),n("span",{class:"token attribute-arguments"},[n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Service Description"'),n("span",{class:"token punctuation"},")")])]),n("span",{class:"token punctuation"},"]"),e(`
`),n("span",{class:"token punctuation"},"["),n("span",{class:"token attribute"},[n("span",{class:"token class-name"},"Tag"),n("span",{class:"token attribute-arguments"},[n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Core Requests"'),n("span",{class:"token punctuation"},")")])]),n("span",{class:"token punctuation"},"]"),e(`
`),n("span",{class:"token punctuation"},"["),n("span",{class:"token attribute"},[n("span",{class:"token class-name"},"ApiResponse"),n("span",{class:"token attribute-arguments"},[n("span",{class:"token punctuation"},"("),e("HttpStatusCode"),n("span",{class:"token punctuation"},"."),e("BadRequest"),n("span",{class:"token punctuation"},","),e(),n("span",{class:"token string"},'"Your request was not understood"'),n("span",{class:"token punctuation"},")")])]),n("span",{class:"token punctuation"},"]"),e(`
`),n("span",{class:"token punctuation"},"["),n("span",{class:"token attribute"},[n("span",{class:"token class-name"},"ApiResponse"),n("span",{class:"token attribute-arguments"},[n("span",{class:"token punctuation"},"("),e("HttpStatusCode"),n("span",{class:"token punctuation"},"."),e("InternalServerError"),n("span",{class:"token punctuation"},","),e(),n("span",{class:"token string"},'"Oops, something broke"'),n("span",{class:"token punctuation"},")")])]),n("span",{class:"token punctuation"},"]"),e(`
`),n("span",{class:"token punctuation"},"["),n("span",{class:"token attribute"},[n("span",{class:"token class-name"},"Route"),n("span",{class:"token attribute-arguments"},[n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"/swagger/{Name}"'),n("span",{class:"token punctuation"},","),e(),n("span",{class:"token string"},'"GET"'),n("span",{class:"token punctuation"},","),e(" Summary "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token string"},'"GET Summary"'),n("span",{class:"token punctuation"},","),e(" Notes "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token string"},'"Notes"'),n("span",{class:"token punctuation"},")")])]),n("span",{class:"token punctuation"},"]"),e(`
`),n("span",{class:"token punctuation"},"["),n("span",{class:"token attribute"},[n("span",{class:"token class-name"},"Route"),n("span",{class:"token attribute-arguments"},[n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"/swagger/{Name}"'),n("span",{class:"token punctuation"},","),e(),n("span",{class:"token string"},'"POST"'),n("span",{class:"token punctuation"},","),e(" Summary "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token string"},'"POST Summary"'),n("span",{class:"token punctuation"},","),e(" Notes"),n("span",{class:"token operator"},"="),n("span",{class:"token string"},'"Notes"'),n("span",{class:"token punctuation"},")")])]),n("span",{class:"token punctuation"},"]"),e(`
`),n("span",{class:"token keyword"},"public"),e(),n("span",{class:"token keyword"},"class"),e(),n("span",{class:"token class-name"},"MyRequestDto"),e(`
`),n("span",{class:"token punctuation"},"{"),e(`
    `),n("span",{class:"token punctuation"},"["),n("span",{class:"token attribute"},[n("span",{class:"token class-name"},"ApiMember"),n("span",{class:"token attribute-arguments"},[n("span",{class:"token punctuation"},"("),e("Name"),n("span",{class:"token operator"},"="),n("span",{class:"token string"},'"Name"'),n("span",{class:"token punctuation"},","),e(" Description "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token string"},'"Name Description"'),n("span",{class:"token punctuation"},","),e(`
        ParameterType `),n("span",{class:"token operator"},"="),e(),n("span",{class:"token string"},'"path"'),n("span",{class:"token punctuation"},","),e(" DataType "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},","),e(" IsRequired "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},")")])]),n("span",{class:"token punctuation"},"]"),e(`
    `),n("span",{class:"token punctuation"},"["),n("span",{class:"token attribute"},[n("span",{class:"token class-name"},"ApiAllowableValues"),n("span",{class:"token attribute-arguments"},[n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Name"'),n("span",{class:"token punctuation"},","),e(),n("span",{class:"token keyword"},"typeof"),n("span",{class:"token punctuation"},"("),n("span",{class:"token type-expression class-name"},"Color"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")")])]),n("span",{class:"token punctuation"},"]"),e(),n("span",{class:"token comment"},"//Enum"),e(`
    `),n("span",{class:"token keyword"},"public"),e(),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"string")]),e(" Name "),n("span",{class:"token punctuation"},"{"),e(),n("span",{class:"token keyword"},"get"),n("span",{class:"token punctuation"},";"),e(),n("span",{class:"token keyword"},"set"),n("span",{class:"token punctuation"},";"),e(),n("span",{class:"token punctuation"},"}"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])])],-1),C=n("p",null,[e("Please note, that if you used "),n("code",null,"ApiMember.DataType"),e(" for annotating "),n("code",null,"SwaggerFeature"),e(" then you need to change the types to OpenAPI type when migrating to "),n("code",null,"OpenApiFeature"),e(". For example, annotation of")],-1),N=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token punctuation"},"["),n("span",{class:"token attribute"},[n("span",{class:"token class-name"},"ApiMember"),n("span",{class:"token attribute-arguments"},[n("span",{class:"token punctuation"},"("),e("DataType"),n("span",{class:"token operator"},"="),n("span",{class:"token string"},'"int"'),n("span",{class:"token punctuation"},")")])]),n("span",{class:"token punctuation"},"]"),e(`
`)])])],-1),j=n("p",null,"need to be changed to",-1),F=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token punctuation"},"["),n("span",{class:"token attribute"},[n("span",{class:"token class-name"},"ApiMember"),n("span",{class:"token attribute-arguments"},[n("span",{class:"token punctuation"},"("),e("DataType"),n("span",{class:"token operator"},"="),n("span",{class:"token string"},'"integer"'),n("span",{class:"token punctuation"},","),e(" Format"),n("span",{class:"token operator"},"="),n("span",{class:"token string"},'"int32"'),n("span",{class:"token punctuation"},")")])]),n("span",{class:"token punctuation"},"]"),e(`
`)])])],-1),E=n("p",null,"Here is the table for type migration",-1),D=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"Swagger Type (DataType)"),n("th",null,"OpenAPI Type (DataType)"),n("th",null,"OpenAPI Format (Format)")])]),n("tbody",null,[n("tr",null,[n("td",null,"Array"),n("td",null,"array"),n("td")]),n("tr",null,[n("td",null,"boolean"),n("td",null,"boolean"),n("td")]),n("tr",null,[n("td",null,"byte"),n("td",null,"integer"),n("td",null,"int")]),n("tr",null,[n("td",null,"Date"),n("td",null,"string"),n("td",null,"date")]),n("tr",null,[n("td"),n("td",null,"string"),n("td",null,"date-time")]),n("tr",null,[n("td",null,"double"),n("td",null,"number"),n("td",null,"double")]),n("tr",null,[n("td",null,"float"),n("td",null,"number"),n("td",null,"float")]),n("tr",null,[n("td",null,"int"),n("td",null,"integer"),n("td",null,"int32")]),n("tr",null,[n("td",null,"long"),n("td",null,"integer"),n("td",null,"int64")]),n("tr",null,[n("td",null,"string"),n("td",null,"string"),n("td")])])],-1),M=n("p",null,[e("You can use "),n("code",null,"[ApiAllowableValues]"),e(" lets you anotate enum properties as well as a restriction for values in array, e.g:")],-1),U=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token punctuation"},"["),n("span",{class:"token attribute"},[n("span",{class:"token class-name"},"ApiAllowableValues"),n("span",{class:"token attribute-arguments"},[n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Includes"'),n("span",{class:"token punctuation"},","),e(" Values "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},[n("span",{class:"token keyword"},"string"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]")]),e(),n("span",{class:"token punctuation"},"{"),e(),n("span",{class:"token string"},'"Genres"'),n("span",{class:"token punctuation"},","),e(),n("span",{class:"token string"},'"Releases"'),n("span",{class:"token punctuation"},","),e(),n("span",{class:"token string"},'"Contributors"'),e(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")])]),n("span",{class:"token punctuation"},"]"),e(`
`),n("span",{class:"token keyword"},"public"),e(),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"string"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]")]),e(" Includes "),n("span",{class:"token punctuation"},"{"),e(),n("span",{class:"token keyword"},"get"),n("span",{class:"token punctuation"},";"),e(),n("span",{class:"token keyword"},"set"),n("span",{class:"token punctuation"},";"),e(),n("span",{class:"token punctuation"},"}"),e(`
`)])])],-1),H=n("h3",{id:"group-apis-with-tags",tabindex:"-1"},[e("Group APIs with Tags "),n("a",{class:"header-anchor",href:"#group-apis-with-tags","aria-hidden":"true"},"#")],-1),G=n("p",null,[e("You can tag the DTO with "),n("code",null,"[Tag]"),e(" attribute. Attributes are are annotated by the same tag are grouped by the tag name in Swagger UI. DTOs can have multiple tags, e.g:")],-1),B=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token punctuation"},"["),n("span",{class:"token attribute"},[n("span",{class:"token class-name"},"Tag"),n("span",{class:"token attribute-arguments"},[n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Core Features"'),n("span",{class:"token punctuation"},")")])]),n("span",{class:"token punctuation"},"]"),e(`
`),n("span",{class:"token punctuation"},"["),n("span",{class:"token attribute"},[n("span",{class:"token class-name"},"Tag"),n("span",{class:"token attribute-arguments"},[n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Scheduler"'),n("span",{class:"token punctuation"},")")])]),n("span",{class:"token punctuation"},"]"),e(`
`),n("span",{class:"token keyword"},"public"),e(),n("span",{class:"token keyword"},"class"),e(),n("span",{class:"token class-name"},"MyRequest"),e(),n("span",{class:"token punctuation"},"{"),e(),n("span",{class:"token range operator"},".."),n("span",{class:"token punctuation"},"."),e(),n("span",{class:"token punctuation"},"}"),e(`
`)])])],-1),V=n("p",null,[e("You can Exclude "),n("strong",null,"properties"),e(" from being listed in OpenAPI with:")],-1),q=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token punctuation"},"["),n("span",{class:"token attribute"},[n("span",{class:"token class-name"},"IgnoreDataMember")]),n("span",{class:"token punctuation"},"]"),e(`
`)])])],-1),z=n("p",null,[e("Exclude "),n("strong",null,"properties"),e(" from being listed in OpenAPI Schema Body with:")],-1),Y=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token punctuation"},"["),n("span",{class:"token attribute"},[n("span",{class:"token class-name"},"ApiMember"),n("span",{class:"token attribute-arguments"},[n("span",{class:"token punctuation"},"("),e("ExcludeInSchema"),n("span",{class:"token operator"},"="),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},")")])]),n("span",{class:"token punctuation"},"]"),e(`
`)])])],-1),$=n("h3",{id:"exclude-services-from-metadata-pages",tabindex:"-1"},[e("Exclude Services from Metadata Pages "),n("a",{class:"header-anchor",href:"#exclude-services-from-metadata-pages","aria-hidden":"true"},"#")],-1),L=n("p",null,[e("To exclude entire Services from showing up in OpenAPI or any other Metadata Services (i.e. Metadata Pages, Postman, NativeTypes, etc), annotate "),n("strong",null,"Request DTO's"),e(" with:")],-1),W=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token punctuation"},"["),n("span",{class:"token attribute"},[n("span",{class:"token class-name"},"Exclude"),n("span",{class:"token attribute-arguments"},[n("span",{class:"token punctuation"},"("),e("Feature"),n("span",{class:"token punctuation"},"."),e("Metadata"),n("span",{class:"token punctuation"},")")])]),n("span",{class:"token punctuation"},"]"),e(`
`),n("span",{class:"token keyword"},"public"),e(),n("span",{class:"token keyword"},"class"),e(),n("span",{class:"token class-name"},"MyRequestDto"),e(),n("span",{class:"token punctuation"},"{"),e(),n("span",{class:"token range operator"},".."),n("span",{class:"token punctuation"},"."),e(),n("span",{class:"token punctuation"},"}"),e(`
`)])])],-1),K=n("h3",{id:"operation-filters",tabindex:"-1"},[e("Operation filters "),n("a",{class:"header-anchor",href:"#operation-filters","aria-hidden":"true"},"#")],-1),J=n("p",null,"You can override operation or parameter definitions by specifying the appropriate filter in plugin configuration:",-1),Q=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[e("Plugins"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},"OpenApiFeature"),e(`
`),n("span",{class:"token punctuation"},"{"),e(`
    OperationFilter `),n("span",{class:"token operator"},"="),e(),n("span",{class:"token punctuation"},"("),e("verb"),n("span",{class:"token punctuation"},","),e(" operation"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token operator"},"=>"),e(" operation"),n("span",{class:"token punctuation"},"."),e("Tags"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"all operations"'),n("span",{class:"token punctuation"},")"),e(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
`)])])],-1),X=n("p",null,"Available configuration options:",-1),Z=n("ul",null,[n("li",null,[n("code",null,"ApiDeclarationFilter"),e(" - allows to modify final result of returned OpenAPI json")]),n("li",null,[n("code",null,"OperationFilter"),e(" - allows to modify operations")]),n("li",null,[n("code",null,"SchemaFilter"),e(" - allows to modify OpenAPI schema for user types")]),n("li",null,[n("code",null,"SchemaPropertyFilter"),e(" - allows to modify propery declarations in OpenAPI schema")])],-1),nn=n("h3",{id:"properties-naming-conventions",tabindex:"-1"},[e("Properties naming conventions "),n("a",{class:"header-anchor",href:"#properties-naming-conventions","aria-hidden":"true"},"#")],-1),en=n("p",null,"You can control naming conventions of generated properties by following configuration options:",-1),sn=n("ul",null,[n("li",null,[n("code",null,"UseCamelCaseSchemaPropertyNames"),e(" - generate camel case property names")]),n("li",null,[n("code",null,"UseLowercaseUnderscoreSchemaPropertyNames"),e(" - generate underscored lower cased property names (to enable this feature "),n("code",null,"UseCamelCaseModelPropertyNames"),e(" must also be set)")])],-1),tn=n("p",null,"Example:",-1),an=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[e("Plugins"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},"OpenApiFeature"),e(`
`),n("span",{class:"token punctuation"},"{"),e(`
    UseCamelCaseSchemaPropertyNames `),n("span",{class:"token operator"},"="),e(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),e(`
    UseLowercaseUnderscoreSchemaPropertyNames `),n("span",{class:"token operator"},"="),e(),n("span",{class:"token boolean"},"true"),e(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
`)])])],-1),on=n("h3",{id:"change-default-verbs",tabindex:"-1"},[e("Change default Verbs "),n("a",{class:"header-anchor",href:"#change-default-verbs","aria-hidden":"true"},"#")],-1),ln=n("p",null,[e("If left unspecified, the "),n("code",null,"[Route]"),e(" attribute allows Services to be called from any HTTP Verb which by default are listed in the Open API specification under the most popular HTTP Verbs, namely "),n("code",null,"GET"),e(", "),n("code",null,"POST"),e(", "),n("code",null,"PUT"),e(" and "),n("code",null,"DELETE"),e(".")],-1),cn=n("p",null,[e("This can be modified with "),n("code",null,"AnyRouteVerbs"),e(" which will let you specify which Verbs should be generated for "),n("strong",null,"ANY"),e(" Routes with unspecified verbs, e.g. we can restrict it to only emit routes for "),n("code",null,"GET"),e(" and "),n("code",null,"POST"),e(" Verbs with:")],-1),rn=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[e("Plugins"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},"OpenApiFeature"),e(`
`),n("span",{class:"token punctuation"},"{"),e(`
    AnyRouteVerbs `),n("span",{class:"token operator"},"="),e("  "),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},[e("List"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token keyword"},"string"),n("span",{class:"token punctuation"},">")]),e(),n("span",{class:"token punctuation"},"{"),e(" HttpMethods"),n("span",{class:"token punctuation"},"."),e("Get"),n("span",{class:"token punctuation"},","),e(" HttpMethods"),n("span",{class:"token punctuation"},"."),e("Post "),n("span",{class:"token punctuation"},"}"),e(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
`)])])],-1),un=n("h3",{id:"miscellaneous-configuration-options",tabindex:"-1"},[e("Miscellaneous configuration options "),n("a",{class:"header-anchor",href:"#miscellaneous-configuration-options","aria-hidden":"true"},"#")],-1),pn=n("ul",null,[n("li",null,[n("code",null,"DisableAutoDtoInBodyParam"),e(" - disables adding "),n("code",null,"body"),e(" parameter for request DTO to operations")]),n("li",null,[n("code",null,"LogoUrl"),e(" - url of the logo image for Swagger UI")])],-1),dn=n("p",null,"Example:",-1),kn=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[e("Plugins"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},"OpenApiFeature"),e(`
`),n("span",{class:"token punctuation"},"{"),e(`
    DisableAutoDtoInBodyParam `),n("span",{class:"token operator"},"="),e(),n("span",{class:"token boolean"},"true"),e(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
`)])])],-1),hn=n("h2",{id:"virtual-file-system",tabindex:"-1"},[e("Virtual File System "),n("a",{class:"header-anchor",href:"#virtual-file-system","aria-hidden":"true"},"#")],-1),gn=n("p",null,"The docs on the Virtual File System shows how to override embedded resources:",-1),mn=n("h3",{id:"overriding-openapi-embedded-resources",tabindex:"-1"},[e("Overriding OpenAPI Embedded Resources "),n("a",{class:"header-anchor",href:"#overriding-openapi-embedded-resources","aria-hidden":"true"},"#")],-1),_n=n("p",null,[e("ServiceStack's "),n("a",{href:"/virtual-file-system.html"},"Virtual File System"),e(" supports multiple file source locations where you can override OpenAPI's embedded files by including your own custom files in the same location as the existing embedded files. This lets you replace built-in ServiceStack embedded resources with your own by simply copying the "),n("a",{href:"https://github.com/ServiceStack/ServiceStack/tree/master/src/ServiceStack.Api.OpenApi/swagger-ui",target:"_blank",rel:"noopener noreferrer"},"/swagger-ui"),e(" files you want to customize and placing them in your Website Directory at:")],-1),bn=n("div",{class:"language-"},[n("pre",null,[n("code",null,`/swagger-ui
    /css
    /fonts
    /images
    /lang
    /lib
    index.html
    swagger-ui.js
`)])],-1),fn=n("h4",{id:"injecting-custom-javascript",tabindex:"-1"},[e("Injecting custom JavaScript "),n("a",{class:"header-anchor",href:"#injecting-custom-javascript","aria-hidden":"true"},"#")],-1),wn=n("p",null,[e("As part of the customization you can add custom "),n("code",null,"patch.js"),e(" and "),n("code",null,"patch-preload.js"),e(":")],-1),yn=n("div",{class:"language-"},[n("pre",null,[n("code",null,`/swagger-ui
    patch.js
    patch-preload.js
`)])],-1),vn=n("p",null,[e("which will be injected in the "),n("code",null,"/swagger-ui"),e(" index page, "),n("code",null,"patch-preload.js"),e(" is embedded before "),n("code",null,"swaggerUi.load()"),e(" is called:")],-1),An=n("div",{class:"language-js"},[n("pre",null,[n("code",null,[n("span",{class:"token comment"},"// contents of patch-preload.js"),e(`

window`),n("span",{class:"token punctuation"},"."),e("swaggerUi"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"load"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
`)])])],-1),Sn=n("p",null,[e("So you can use it to customize the "),n("code",null,"swaggerUi"),e(" configuration object before it's loaded, whilst "),n("code",null,"patch.js"),e(" is embedded just before the end of the "),n("code",null,"</body>"),e(" tag, e.g:")],-1),Pn=n("div",{class:"language-html"},[n("pre",null,[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),e("script")]),e(),n("span",{class:"token attr-name"},"type"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},"'"),e("text/javascript"),n("span",{class:"token punctuation"},"'")]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token script"},[n("span",{class:"token language-javascript"},[e(`
`),n("span",{class:"token comment"},"// contents of patch.js"),e(`
`)])]),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),e("script")]),n("span",{class:"token punctuation"},">")]),e(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),e("body")]),n("span",{class:"token punctuation"},">")]),e(`
`)])])],-1),Tn=n("h3",{id:"swagger-ui-security",tabindex:"-1"},[e("Swagger UI Security "),n("a",{class:"header-anchor",href:"#swagger-ui-security","aria-hidden":"true"},"#")],-1),In=n("p",null,[e("There are 2 custom security methods supported "),n("strong",null,"Bearer"),e(" and "),n("strong",null,"Basic Auth"),e(".")],-1),On=n("p",null,"You can specify to use Swagger's support for API Key Authentication with:",-1),xn=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[e("Plugins"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},"OpenApiFeature"),e(`
`),n("span",{class:"token punctuation"},"{"),e(`
    UseBearerSecurity `),n("span",{class:"token operator"},"="),e(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),e(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
`)])])],-1),Rn=n("p",null,[e("This will instruct Swagger to use their API Key Authentication when clicking the "),n("strong",null,"Authorize"),e(" button which will be sent in API requests to your Authenticated Services. As the "),n("strong",null,"value"),e(" field is for the entire Authorization HTTP Header you'd need to add your JWT Token or API Key prefixed with "),n("code",null,"Bearer "),e(":")],-1),Cn=n("p",null,[n("img",{src:h,alt:""})],-1),Nn=n("p",null,[e('Which you can use to use to Authenticate with "Bearer token" Auth Providers like '),n("a",{href:"/api-key-authprovider.html"},"API Key"),e(" and "),n("a",{href:"/jwt-authprovider.html"},"JWT Auth Providers"),e(".")],-1),jn=n("h3",{id:"basic-auth-in-openapi",tabindex:"-1"},[e("Basic Auth in OpenAPI "),n("a",{class:"header-anchor",href:"#basic-auth-in-openapi","aria-hidden":"true"},"#")],-1),Fn=n("p",null,"You can instruct Swagger to use HTTP Basic Auth with:",-1),En=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[e("Plugins"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},"OpenApiFeature"),e(`
`),n("span",{class:"token punctuation"},"{"),e(`
    UseBasicSecurity `),n("span",{class:"token operator"},"="),e(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),e(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
`)])])],-1),Dn=n("p",null,"This lets Users call protected Services using the Username and Password fields in Swagger UI. Swagger UI sends these credentials with every API request using HTTP Basic Auth, which can be enabled in your AppHost with:",-1),Mn=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[e("Plugins"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},"AuthFeature"),n("span",{class:"token punctuation"},"("),n("span",{class:"token range operator"},".."),n("span",{class:"token punctuation"},"."),n("span",{class:"token punctuation"},","),e(`
    `),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},[e("IAuthProvider"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]")]),e(),n("span",{class:"token punctuation"},"{"),e(` 
        `),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},"BasicAuthProvider"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),e(),n("span",{class:"token comment"},"//Allow Sign-ins with HTTP Basic Auth"),e(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
`)])])],-1),Un=n("p",null,'To login, you need to click "Authorize" button.',-1),Hn=n("p",null,[n("img",{src:s,alt:""})],-1),Gn=n("p",null,"And then enter username and password.",-1),Bn=n("p",null,[n("img",{src:t,alt:""})],-1),Vn=n("p",null,'Also you can click "Try it out" button on services, which requires authentication and browser will prompt a window with user/password field for entering basic auth credentials.',-1),qn=n("p",null,[e("Alternatively you can authenticate outside Swagger (e.g. via an OAuth Provider) which will also let you call protected Services in "),n("code",null,"/swagger-ui"),e(".")],-1),zn=n("h2",{id:"generating-autorest-client",tabindex:"-1"},[e("Generating AutoRest client "),n("a",{class:"header-anchor",href:"#generating-autorest-client","aria-hidden":"true"},"#")],-1),Yn=n("p",null,[e("You can use OpenAPI plugin to automatically generate client using "),n("a",{href:"https://github.com/Azure/Autorest",target:"_blank",rel:"noopener noreferrer"},"Autorest"),e(". To use AutoRest first install it from npm:")],-1),$n=n("div",{class:"language-bash"},[n("pre",null,[n("code",null,[e("$ "),n("span",{class:"token function"},"npm"),e(),n("span",{class:"token function"},"install"),e(` -g autorest
`)])])],-1),Ln=n("p",null,"Then you need to download the Open API specification for your Services using a tool like curl:",-1),Wn=n("div",{class:"language-bash"},[n("pre",null,[n("code",null,[e("$ "),n("span",{class:"token function"},"curl"),e(" http://your.domain/openapi "),n("span",{class:"token operator"},">"),e(` openapi.json
`)])])],-1),Kn=n("p",null,[e("Or using "),n("code",null,"iwr"),e(" if you have PowerShell installed:")],-1),Jn=n("div",{class:"language-bash"},[n("pre",null,[n("code",null,`$ iwr http://your.domain/openapi -o openapi.json
`)])],-1),Qn=n("p",null,[e("You can then use the "),n("code",null,"openapi.json"),e(" with autorest to generate a client for your API in your preferred language, e.g:")],-1),Xn=n("div",{class:"language-bash"},[n("pre",null,[n("code",null,`$ autorest --latest-release -Input openapi.json -CodeGenerator CSharp -OutputDirectory AutoRestClient -Namespace AutoRestClient
`)])],-1),Zn=n("p",null,"This will generate directory containing your model types and REST operations that you can use with the generated client, e.g:",-1),ne=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token keyword"},"using"),e(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),e(" client "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},"SampleProjectAutoRestClient"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"http://localhost:20000"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),e(`
`),n("span",{class:"token punctuation"},"{"),e(`
    `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),e(" dto "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},"SampleDto"),e(),n("span",{class:"token punctuation"},"{"),e(),n("span",{class:"token comment"},"/* .... */"),e(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),e(` 
    `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),e(" result "),n("span",{class:"token operator"},"="),e(" client"),n("span",{class:"token punctuation"},"."),e("SampleOperation"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Post"),n("span",{class:"token punctuation"},"("),n("span",{class:"token named-parameter punctuation"},"body"),n("span",{class:"token punctuation"},":"),e(" dto"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`

    `),n("span",{class:"token comment"},"// process result"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])])],-1),ee=n("p",null,[e("AutoRest clients will allow usage of tooling that have adopted AutoRest and is a good stop gap solution for generating native clients for languages that "),n("a",{href:"/add-servicestack-reference.html"},"Add ServiceStack Reference"),e(" doesn't support yet like Python and Ruby.")],-1),se=n("h3",{id:"autorest-generated-clients-vs-add-servicestack-reference",tabindex:"-1"},[e("AutoRest Generated Clients vs Add ServiceStack Reference "),n("a",{class:"header-anchor",href:"#autorest-generated-clients-vs-add-servicestack-reference","aria-hidden":"true"},"#")],-1),te=n("p",null,[e("However AutoRest generated clients are similar to WCF Service Reference generated clients where it generates RPC-style Clients that emits both implementation logic and models for sending each request that's coupled to external HttpClient and "),n("a",{href:"http://JSON.NET",target:"_blank",rel:"noopener noreferrer"},"JSON.NET"),e(" dependencies. This approach generates significantly more code generation that populates a directory containing "),n("a",{href:"https://github.com/ServiceStack/ServiceStack/tree/master/tests/ServiceStack.OpenApi.Tests/GeneratedClient",target:"_blank",rel:"noopener noreferrer"},"multiple implementation and Model classes"),e(" generated for each Service.")],-1),ae=n("p",null,[e("In contrast "),n("a",{href:"/add-servicestack-reference.html"},"Add ServiceStack Reference"),e(" adopts the venerable "),n("a",{href:"https://martinfowler.com/eaaCatalog/dataTransferObject.html",target:"_blank",rel:"noopener noreferrer"},"Data Transfer Object"),e(", "),n("a",{href:"https://martinfowler.com/eaaCatalog/gateway.html",target:"_blank",rel:"noopener noreferrer"},"Gateway"),e(" and "),n("a",{href:"https://martinfowler.com/eaaCatalog/remoteFacade.html",target:"_blank",rel:"noopener noreferrer"},"Remote Facade"),e(" Service patterns where it only needs to generate clean, implementation-free DTO models that it captures in "),n("strong",null,"a single source file"),e(" for all supported languages.")],-1),oe=n("p",null,[e("The generated DTOs are cleaner and more reusable where it isn't coupled to any Serialization implementation and can be reused in any of ServiceStack's message-based "),n("a",{href:"/csharp-client.html#httpwebrequest-service-clients"},"Service Clients and Serialization Formats"),e(" or different "),n("a",{href:"/service-gateway.html"},"Service Gateway"),e(" implementations. The models are also richer where it's able to include additional metadata attributes and marker interfaces that isn't possible when tunneling through a generic API specification.")],-1),le=n("p",null,[e("The use of intelligent generic Service Clients will always be able to provide a richer more productive development experience that can enable higher-level, value-added functionality like "),n("a",{href:"/error-handling.html"},"Structured Error Handling"),e(", "),n("a",{href:"/cache-aware-clients.html"},"Smart HTTP Caching"),e(", "),n("a",{href:"/auto-batched-requests.html"},"Auto Batching"),e(", "),n("a",{href:"/encrypted-messaging.html#encrypted-service-client"},"Encrypted Messaging"),e(", "),n("a",{href:"/autoquery-rdbms.html#service-clients-support"},"AutoQuery Streaming"),e(", "),n("a",{href:"/csharp-client.html#client--server-request-compression"},"Request Compression"),e(", integrated authentication and lots more.")],-1),ce=n("h3",{id:"known-issues",tabindex:"-1"},[e("Known issues "),n("a",{class:"header-anchor",href:"#known-issues","aria-hidden":"true"},"#")],-1),ie=n("p",null,[e("Autorest generated clients do not support "),n("code",null,"application/octet-stream"),e(" MIME type, which is used when service returns "),n("code",null,"byte[]"),e(" array. You can track "),n("a",{href:"https://github.com/Azure/autorest/issues/1932",target:"_blank",rel:"noopener noreferrer"},"this issue on Github"),e(".")],-1),re=n("h2",{id:"publish-azure-management-api",tabindex:"-1"},[e("Publish Azure Management API "),n("a",{class:"header-anchor",href:"#publish-azure-management-api","aria-hidden":"true"},"#")],-1),ue=n("p",null,[e("Login to "),n("a",{href:"https://portal.azure.com",target:"_blank",rel:"noopener noreferrer"},"Azure Portal"),e(" and search for "),n("code",null,"API management service"),e(".")],-1),pe=n("p",null,[n("img",{src:g,alt:""})],-1),de=n("p",null,[e("Choose "),n("code",null,"API management service"),e(". In opened window click "),n("code",null,"Add"),e(" button.")],-1),ke=n("p",null,[n("img",{src:a,alt:""})],-1),he=n("p",null,[e("Fill the creation form. Put your own values in "),n("code",null,"Name"),e(", "),n("code",null,"Resource Group"),e(", "),n("code",null,"Organization name"),e(" and "),n("code",null,"Administrator email"),e(". When creation form will be ready, click "),n("code",null,"Create"),e(" button.")],-1),ge=n("p",null,[n("img",{src:o,alt:""})],-1),me=n("p",null,"Wait while Management API will be activated. It can take more than forty minutes. When it ready click on created API management resource.",-1),_e=n("p",null,[n("img",{src:l,alt:""})],-1),be=n("p",null,[e("In opened window click "),n("code",null,"APIs - PREVIEW"),e(" menu item on the left pane.")],-1),fe=n("p",null,[n("img",{src:c,alt:""})],-1),we=n("p",null,[e("Choose "),n("code",null,"OpenAPI specification"),e(" in "),n("code",null,"Add API"),e(" section.")],-1),ye=n("p",null,[n("img",{src:i,alt:""})],-1),ve=n("p",null,[e("Fill the url with location of you services, ended with "),n("code",null,"/openapi"),e(" or just click "),n("code",null,"Upload"),e(" button and upload OpenAPI json definition, which is available at "),n("code",null,"/openapi"),e(" path of your services.")],-1),Ae=n("p",null,[n("img",{src:r,alt:""})],-1),Se=n("p",null,"After successfull import you should see list of available operations for your services",-1),Pe=n("p",null,[n("img",{src:u,alt:""})],-1),Te=[_,b,f,w,y,v,A,S,P,T,I,O,x,R,C,N,j,F,E,D,M,U,H,G,B,V,q,z,Y,$,L,W,K,J,Q,X,Z,nn,en,sn,tn,an,on,ln,cn,rn,un,pn,dn,kn,hn,gn,mn,_n,bn,fn,wn,yn,vn,An,Sn,Pn,Tn,In,On,xn,Rn,Cn,Nn,jn,Fn,En,Dn,Mn,Un,Hn,Gn,Bn,Vn,qn,zn,Yn,$n,Ln,Wn,Kn,Jn,Qn,Xn,Zn,ne,ee,se,te,ae,oe,le,ce,ie,re,ue,pe,de,ke,he,ge,me,_e,be,fe,we,ye,ve,Ae,Se,Pe];function Ie(Oe,xe,Re,Ce,Ne,je){return k(),d("div",null,Te)}var Me=p(m,[["render",Ie]]);export{De as __pageData,Me as default};
