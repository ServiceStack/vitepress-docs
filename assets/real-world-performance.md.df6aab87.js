import{_ as e,c as r,o as a,a as t}from"./app.14440598.js";const f='{"title":"Real World Performance","description":"","frontmatter":{"title":"Real World Performance"},"relativePath":"real-world-performance.md","lastUpdated":1634495308426}',n={},s=t(`<p>We maintain a list of external benchmark results here people have been experiencing to provide an idea of the relative performance you can expect from real-world usage:</p><h4 id="get-25k-rows-from-ms-sql-express-and-convert-to-json" tabindex="-1"><a href="https://twitter.com/lukaszgasior/status/331704240085028864" target="_blank" rel="noopener noreferrer">Get 25k rows from MS SQL Express and convert to JSON</a> <a class="header-anchor" href="#get-25k-rows-from-ms-sql-express-and-convert-to-json" aria-hidden="true">#</a></h4><div class="language-"><pre><code>EF &amp; JSON.NET                         2300ms
EF [AsNoTracking] &amp; JSON.NET           973ms
EF [AsNoTracking] &amp; ServiceStack       809ms
Simple.Data &amp; JSON.NET                1598ms
Simple.Data &amp; ServiceStack             933ms
ServiceStack.OrmLite &amp; JSON.NET        405ms
ServiceStack.OrmLite &amp; ServiceStack    245ms
</code></pre></div><h4 id="servicestack-vs-webapi-client-server-end-to-end-results" tabindex="-1"><a href="https://twitter.com/anilmujagic/status/272544925478973440" target="_blank" rel="noopener noreferrer">ServiceStack vs WebApi client / server end-to-end results</a> <a class="header-anchor" href="#servicestack-vs-webapi-client-server-end-to-end-results" aria-hidden="true">#</a></h4><div class="language-"><pre><code>ServiceStack                 9667ms
WebApi                      30407ms
</code></pre></div><p>GitHub project for the benchmarks are at: <a href="https://github.com/anilmujagic/ServiceBenchmark" target="_blank" rel="noopener noreferrer">https://github.com/anilmujagic/ServiceBenchmark</a></p><h4 id="servicestack-a-good-alternative-to-wcf-french" tabindex="-1"><a href="http://sgbd.arbinada.com/node/77" target="_blank" rel="noopener noreferrer">ServiceStack: a good alternative to WCF (French)</a> <a class="header-anchor" href="#servicestack-a-good-alternative-to-wcf-french" aria-hidden="true">#</a></h4><div class="language-"><pre><code>ServiceStack                    19s
WCF Data Services (Optimized)   28s
WCF Data Services               48s
</code></pre></div><h4 id="servicestack-net" tabindex="-1"><a href="http://fir3pho3nixx.blogspot.com/2011/04/servicestacknet.html" target="_blank" rel="noopener noreferrer">ServiceStack.net</a> <a class="header-anchor" href="#servicestack-net" aria-hidden="true">#</a></h4><blockquote><p>One thing that I was completely surprised by today was the performance of the open source <a href="http://ServiceStack.NET" target="_blank" rel="noopener noreferrer">ServiceStack.NET</a> frameworks. Even with the performance tuned release of <a href="http://JSON.NET" target="_blank" rel="noopener noreferrer">JSON.NET</a> I found that ServiceStack.Text beat it by a rediculous margin. It serialises 2x faster and deserialises 4x faster.</p></blockquote><h4 id="redis-vs-ravendb-\u2013-benchmarks-for-net-client-nosql-solutions" tabindex="-1"><a href="http://www.servicestack.net/mythz_blog/?p=474" target="_blank" rel="noopener noreferrer">Redis vs RavenDB \u2013 Benchmarks for .NET Client NoSQL Solutions</a> <a class="header-anchor" href="#redis-vs-ravendb-\u2013-benchmarks-for-net-client-nosql-solutions" aria-hidden="true">#</a></h4><div class="language-"><pre><code>Redis (Cygwin)                254ms
Redis (Cygwin + fsync)        543ms
Raven DB                     2983ms
</code></pre></div>`,12),o=[s];function c(i,d,l,h,p,m){return a(),r("div",null,o)}var k=e(n,[["render",c]]);export{f as __pageData,k as default};
