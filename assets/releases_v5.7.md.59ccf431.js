import{_ as t,c as a,o as e,b as n,e as s}from"./app.14440598.js";var o="/assets/multi-langs.af0b719b.svg";const pp='{"title":"v5.7 Release Notes","description":"","frontmatter":{"title":"v5.7 Release Notes","slug":"v5-7"},"headers":[{"level":2,"title":".NET Core 3","slug":"net-core-3"},{"level":3,"title":"Sync writes disabled by default","slug":"sync-writes-disabled-by-default"},{"level":3,"title":"Internal Changes","slug":"internal-changes"},{"level":3,"title":"Server Events Async APIs","slug":"server-events-async-apis"},{"level":3,"title":"Upgrading to .NET Core 3.0","slug":"upgrading-to-net-core-3-0"},{"level":3,"title":"Upgrading Docker and Travis CI to .NET Core 3.0","slug":"upgrading-docker-and-travis-ci-to-net-core-3-0"},{"level":3,"title":"Troubleshooting","slug":"troubleshooting"},{"level":3,"title":"Upgrade to Fluent Validation v8.5","slug":"upgrade-to-fluent-validation-v8-5"},{"level":3,"title":"Service Plugin APIs","slug":"service-plugin-apis"},{"level":3,"title":"AuthFeature","slug":"authfeature"},{"level":3,"title":"/authenticate alias routes removed by default","slug":"authenticate-alias-routes-removed-by-default"},{"level":2,"title":"OrmLite","slug":"ormlite"},{"level":3,"title":"GetSchemaTable","slug":"getschematable"},{"level":3,"title":"ServiceStack.Text","slug":"servicestack-text"},{"level":3,"title":"Auto Mapping","slug":"auto-mapping"},{"level":2,"title":"#Script","slug":"script"},{"level":3,"title":"1st class #Script Code and Lisp Language support!","slug":"_1st-class-script-code-and-lisp-language-support"},{"level":3,"title":"Transition to JS Pipeline Operator Syntax","slug":"transition-to-js-pipeline-operator-syntax"},{"level":3,"title":"Scripting .NET!","slug":"scripting-net"},{"level":2,"title":"Scripting .NET APIs","slug":"scripting-net-apis"},{"level":3,"title":"Type Resolution","slug":"type-resolution"},{"level":3,"title":"Creating Instances","slug":"creating-instances"},{"level":3,"title":"Calling Methods","slug":"calling-methods"},{"level":3,"title":"Function","slug":"function"},{"level":2,"title":"#Script Code","slug":"script-code"},{"level":3,"title":"Executing #Script Code in .NET","slug":"executing-script-code-in-net"},{"level":3,"title":"Finer grained control","slug":"finer-grained-control"},{"level":3,"title":"Code Scripts","slug":"code-scripts"},{"level":3,"title":"Watched code scripts","slug":"watched-code-scripts"},{"level":2,"title":"Introducing #Script Lisp!","slug":"introducing-script-lisp"},{"level":3,"title":"Script Lisp Overview","slug":"script-lisp-overview"},{"level":3,"title":"Lisp REPL","slug":"lisp-repl"},{"level":3,"title":"Annotated REPL Walk through","slug":"annotated-repl-walk-through"},{"level":3,"title":"Lisp REPL TCP Server","slug":"lisp-repl-tcp-server"},{"level":3,"title":"Password Protection","slug":"password-protection"},{"level":3,"title":"Run and watch Lisp Scripts","slug":"run-and-watch-lisp-scripts"},{"level":3,"title":"Watch lisp scripts","slug":"watch-lisp-scripts"},{"level":3,"title":"Annotated Lisp watch script","slug":"annotated-lisp-watch-script"},{"level":2,"title":"Executing Lisp in .NET","slug":"executing-lisp-in-net"},{"level":3,"title":"Finer grained control","slug":"finer-grained-control-1"},{"level":3,"title":"Evaluating Lisp Script Results","slug":"evaluating-lisp-script-results"},{"level":2,"title":".NET Interop","slug":"net-interop"},{"level":3,"title":"Member Access","slug":"member-access"},{"level":3,"title":"Indexer Access","slug":"indexer-access"},{"level":3,"title":"Constructor Access","slug":"constructor-access"},{"level":3,"title":"Static Member Access","slug":"static-member-access"},{"level":3,"title":"Script Methods","slug":"script-methods"},{"level":3,"title":"Generic Types","slug":"generic-types"},{"level":3,"title":"Property Setters","slug":"property-setters"},{"level":3,"title":"Lisp Lists vs .NET Collections","slug":"lisp-lists-vs-net-collections"},{"level":3,"title":"Annotated .NET Interop Example","slug":"annotated-net-interop-example"},{"level":3,"title":"Importing Global Scripts","slug":"importing-global-scripts"},{"level":3,"title":"Loading Scripts","slug":"loading-scripts"},{"level":3,"title":"Import Scripts from URLs","slug":"import-scripts-from-urls"},{"level":3,"title":"Locally Cached","slug":"locally-cached"},{"level":3,"title":"Import Scripts from Gists","slug":"import-scripts-from-gists"},{"level":3,"title":"Script Lisp Library Index","slug":"script-lisp-library-index"},{"level":3,"title":"Viewing Script Source Code","slug":"viewing-script-source-code"},{"level":3,"title":"Disable Remote Imports","slug":"disable-remote-imports"},{"level":3,"title":"#Script Pages Integration","slug":"script-pages-integration"},{"level":3,"title":"Lisp Argument Scopes","slug":"lisp-argument-scopes"},{"level":3,"title":"Exporting Lisp Functions","slug":"exporting-lisp-functions"},{"level":3,"title":"Controlling Lisp output","slug":"controlling-lisp-output"},{"level":2,"title":"Learn #Script Lisp","slug":"learn-script-lisp"},{"level":3,"title":"Explore APIs in real-time","slug":"explore-apis-in-real-time"},{"level":2,"title":"Happy Hacking!","slug":"happy-hacking"}],"relativePath":"releases/v5.7.md","lastUpdated":1634495308446}',c={},l=n("h2",{id:"net-core-3",tabindex:"-1"},[s(".NET Core 3 "),n("a",{class:"header-anchor",href:"#net-core-3","aria-hidden":"true"},"#")],-1),p=n("p",null,[s("Ordinarily we'd have a longer release cadence in between releases with more features, but with the recent release of .NET Core 3 we've cut this release cycle short so we can release a version of ServiceStack compatible with .NET Core 3+. Other than that the major focus on this release was "),n("code",null,"#Script"),s(" with "),n("a",{href:"#script"},"many new features"),s(" we're excited to share after covering the ServiceStack changes.")],-1),i=n("h3",{id:"sync-writes-disabled-by-default",tabindex:"-1"},[s("Sync writes disabled by default "),n("a",{class:"header-anchor",href:"#sync-writes-disabled-by-default","aria-hidden":"true"},"#")],-1),r=n("p",null,[s("The primary issue in supporting .NET Core 3 was accommodating its decision to disable sync "),n("code",null,"Stream"),s(" writes by default, in-effect disallowing most .NET Serializers from being able to write directly to the Response OutputStream. To work around this, in "),n("strong",null,".NET Core 3"),s(" all sync serializers are first written to a pooled "),n("code",null,"MemoryStream"),s(" before being asynchronously written to the Response's Output Stream.")],-1),u=n("p",null,[s("Essentially all Content Type Serializers (i.e. Serialization Formats) used in ServiceStack other than HTML View Engines (Razor/Markdown/JSON Report) and "),n("a",{href:"https://sharpscript.net/docs/sharp-pages",target:"_blank",rel:"noopener noreferrer"},"#Script Pages"),s(" (written from ground-up to support async writes) are currently buffered in .NET Core 3. (we'll look into extending native async serialization support to our own serializers in a future release).")],-1),k=n("p",null,[s(".NET Core 3 does allow you to "),n("a",{href:"https://github.com/aspnet/AspNetCore/issues/7644",target:"_blank",rel:"noopener noreferrer"},"turn off this restriction on a per-request basis"),s(" which can be controlled by turning off buffering of sync serializers with:")],-1),d=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token function"},"SetConfig"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"HostConfig"),s(),n("span",{class:"token punctuation"},"{"),s(`
    BufferSyncSerializers `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},","),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`)])])],-1),h=n("p",null,[s("Which restores the existing behavior to .NET Core 3 of serializing directly to the Output Stream and marking the request with "),n("code",null,"AllowSynchronousIO=true"),s(".")],-1),g=n("h3",{id:"internal-changes",tabindex:"-1"},[s("Internal Changes "),n("a",{class:"header-anchor",href:"#internal-changes","aria-hidden":"true"},"#")],-1),m=n("p",null,[s("Whilst most of ServiceStack's other internal HTTP Handlers were already being written asynchronously when ServiceStack was rewritten to be built on top of Async Handlers "),n("a",{href:"/releases/v4.0.0.html#server-side-async-support"},"back in its first v4 Release"),s(", .NET Core 3's mandate highlighted our "),n("a",{href:"/metadata-page.html"},"Metadata Pages"),s(" needed to be refactored to use async writes as well as some existing deprecated sync Response Write APIs that needed to be marked to allow Sync. Each of the deprecated sync write APIs have async API equivalents that you can move to when ready.")],-1),f=n("h3",{id:"server-events-async-apis",tabindex:"-1"},[s("Server Events Async APIs "),n("a",{class:"header-anchor",href:"#server-events-async-apis","aria-hidden":"true"},"#")],-1),b=n("p",null,[s("As all Server Events existing "),n("a",{href:"/server-events.html#sending-server-events"},"Notification APIs"),s(" were synchronous, they couldn't be refactored to use async writes, instead usage of these existing APIs have been marked with "),n("code",null,"AllowSynchronousIO=true"),s(".")],-1),y=n("p",null,[s("To perform async writes in "),n("a",{href:"/server-events.html"},"Server Events"),s(" you can use the new "),n("code",null,"*Async"),s(" API equivalents available to all existing sync Notification APIs:")],-1),_=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"interface"),s(),n("span",{class:"token class-name"},"IServerEvents"),s(` 
`),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token return-type class-name"},"Task"),s(),n("span",{class:"token function"},"NotifyAllAsync"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" sel"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"object")]),s(" msg"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"CancellationToken"),s(" ct"),n("span",{class:"token operator"},"="),n("span",{class:"token keyword"},"default"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token return-type class-name"},"Task"),s(),n("span",{class:"token function"},"NotifyChannelAsync"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" chan"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" sel"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"object")]),s(" msg"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"CancellationToken"),s(" ct"),n("span",{class:"token operator"},"="),n("span",{class:"token keyword"},"default"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token return-type class-name"},"Task"),s(),n("span",{class:"token function"},"NotifySubscriptionAsync"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" subId"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" sel"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"object")]),s(" msg"),n("span",{class:"token punctuation"},","),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" chan"),n("span",{class:"token punctuation"},","),n("span",{class:"token class-name"},"CancellationToken"),s(" ct"),n("span",{class:"token operator"},"="),n("span",{class:"token keyword"},"default"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token return-type class-name"},"Task"),s(),n("span",{class:"token function"},"NotifyUserIdAsync"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" userId"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" sel"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"object")]),s(" msg"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" chan"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"CancellationToken"),s(" ct"),n("span",{class:"token operator"},"="),n("span",{class:"token keyword"},"default"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token return-type class-name"},"Task"),s(),n("span",{class:"token function"},"NotifyUserNameAsync"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" userName"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" sel"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"object")]),s(" msg"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" chan"),n("span",{class:"token punctuation"},","),n("span",{class:"token class-name"},"CancellationToken"),s(" ct"),n("span",{class:"token operator"},"="),n("span",{class:"token keyword"},"default"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token return-type class-name"},"Task"),s(),n("span",{class:"token function"},"NotifySessionAsync"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" sessionId"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" sel"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"object")]),s(" msg"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" chan"),n("span",{class:"token punctuation"},","),n("span",{class:"token class-name"},"CancellationToken"),s(" ct"),n("span",{class:"token operator"},"="),n("span",{class:"token keyword"},"default"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])])],-1),w=n("p",null,"If you're utilizing any Server Event handlers, you can change them over to use new Async Handler APIs as well:",-1),v=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"ServerEventsFeature"),s(),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token type-list"},[n("span",{class:"token class-name"},"IPlugin")]),s(` 
`),n("span",{class:"token punctuation"},"{"),s(`
    Func`),n("span",{class:"token operator"},"<"),s("IEventSubscription"),n("span",{class:"token punctuation"},","),s(" Task"),n("span",{class:"token operator"},">"),s(` OnSubscribeAsync
    Func`),n("span",{class:"token operator"},"<"),s("IEventSubscription"),n("span",{class:"token punctuation"},","),s("Task"),n("span",{class:"token operator"},">"),s(` OnUnsubscribeAsync
    Func`),n("span",{class:"token operator"},"<"),s("IEventSubscription"),n("span",{class:"token punctuation"},","),s(" IResponse"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"string"),n("span",{class:"token punctuation"},","),s(" Task"),n("span",{class:"token operator"},">"),s(` OnPublishAsync
`),n("span",{class:"token punctuation"},"}"),s(`
`)])])],-1),S=n("h3",{id:"upgrading-to-net-core-3-0",tabindex:"-1"},[s("Upgrading to .NET Core 3.0 "),n("a",{class:"header-anchor",href:"#upgrading-to-net-core-3-0","aria-hidden":"true"},"#")],-1),x=n("p",null,[s("ServiceStack's "),n("a",{href:"/web-new.html"},".NET Core Project Templates"),s(" continue to be configured to use .NET Core 2.1 LTS until "),n("a",{href:"https://dotnet.microsoft.com/platform/support/policy/dotnet-core",target:"_blank",rel:"noopener noreferrer"},".NET Core 3.1 LTS"),s(" is released (scheduled for November 2019).")],-1),T=n("p",null,"In the meantime you can follow these steps to manually update them to .NET Core 3:",-1),L=n("p",null,[s("Replace the "),n("code",null,"<TargetFramework>"),s(" in the Host and Test projects to target "),n("strong",null,"netcoreapp3.0"),s(":")],-1),A=n("div",{class:"language-xml"},[n("pre",null,[n("code",null,[s("- "),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("TargetFramework")]),n("span",{class:"token punctuation"},">")]),s("netcoreapp2.1"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("TargetFramework")]),n("span",{class:"token punctuation"},">")]),s(`
+ `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("TargetFramework")]),n("span",{class:"token punctuation"},">")]),s("netcoreapp3.0"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("TargetFramework")]),n("span",{class:"token punctuation"},">")]),s(`
`)])])],-1),C=n("p",null,[s("Remove the reference to "),n("strong",null,"Microsoft.AspNetCore.App"),s(" in the host project:")],-1),I=n("div",{class:"language-xml"},[n("pre",null,[n("code",null,[s("- "),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("PackageReference")]),s(),n("span",{class:"token attr-name"},"Include"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("Microsoft.AspNetCore.App"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token punctuation"},"/>")]),s(`
`)])])],-1),E=n("p",null,[s("Replace "),n("code",null,"IHostingEnvironment"),s(" with "),n("code",null,"IWebHostEnvironment"),s(" and add the "),n("strong",null,"Microsoft.Extensions.Hosting"),s(" namespace:")],-1),P=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token operator"},"+"),s(),n("span",{class:"token keyword"},"using"),s(),n("span",{class:"token namespace"},[s("Microsoft"),n("span",{class:"token punctuation"},"."),s("Extensions"),n("span",{class:"token punctuation"},"."),s("Hosting")]),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"void")]),s(),n("span",{class:"token function"},"Configure"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"IApplicationBuilder"),s(" app"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"IWebHostEnvironment"),s(" env"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token operator"},"-"),s(),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"void")]),s(),n("span",{class:"token function"},"Configure"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"IApplicationBuilder"),s(" app"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"IHostingEnvironment"),s(" env"),n("span",{class:"token punctuation"},")"),s(`
`)])])],-1),N=n("p",null,[s("Disable Endpoint Routing for MVC Projects using the "),n("a",{href:"https://github.com/NetCoreApps/Chat/blob/995a6bdabcf14fba65276c963a5d95785d60e7ad/src/Chat/Startup.cs#L60-L65",target:"_blank",rel:"noopener noreferrer"},"default MVC Routing"),s(":")],-1),F=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token operator"},"-"),s(" services"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"AddMvc"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token operator"},"+"),s(" services"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"AddMvc"),n("span",{class:"token punctuation"},"("),s("option "),n("span",{class:"token operator"},"=>"),s(" option"),n("span",{class:"token punctuation"},"."),s("EnableEndpointRouting "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])])],-1),R=n("p",null,[s("For reference here were the commits to upgrade "),n("a",{href:"https://techstacks.io",target:"_blank",rel:"noopener noreferrer"},"techstacks.io"),s(", "),n("a",{href:"http://validation.web-app.io",target:"_blank",rel:"noopener noreferrer"},"validation.web-app.io"),s(" and "),n("a",{href:"http://chat.netcore.io",target:"_blank",rel:"noopener noreferrer"},"chat.netcore.io"),s(" to .NET Core 3.0:")],-1),M=n("ul",null,[n("li",null,[n("a",{href:"https://github.com/NetCoreApps/TechStacks/commit/3d8b88c9f85f429293ca081a0b3b2e6d2a909815",target:"_blank",rel:"noopener noreferrer"},"Upgrade TechStacks to .NET Core 3.0")]),n("li",null,[n("a",{href:"https://github.com/NetCoreApps/Validation/commit/876b38563c49493ac2158ca130e2ec1dee95b222",target:"_blank",rel:"noopener noreferrer"},"Upgrade World Validation to .NET Core 3.0")]),n("li",null,[n("a",{href:"https://github.com/ServiceStack/sharpscript/commit/aa47b53d102a7d4d7a75b54574728487237d5fb1",target:"_blank",rel:"noopener noreferrer"},"Upgrade Sharp Script to .NET Core 3.0")]),n("li",null,[n("a",{href:"https://github.com/NetCoreApps/Chat/commit/db390375b39377fef243871a81c100a3c15f5f57",target:"_blank",rel:"noopener noreferrer"},"Upgrade Chat to .NET Core 3.0"),n("ul",null,[n("li",null,[n("a",{href:"https://github.com/NetCoreApps/Chat/commit/995a6bdabcf14fba65276c963a5d95785d60e7ad",target:"_blank",rel:"noopener noreferrer"},"Switch to Server Events Async APIs")])])])],-1),j=n("h3",{id:"upgrading-docker-and-travis-ci-to-net-core-3-0",tabindex:"-1"},[s("Upgrading Docker and Travis CI to .NET Core 3.0 "),n("a",{class:"header-anchor",href:"#upgrading-docker-and-travis-ci-to-net-core-3-0","aria-hidden":"true"},"#")],-1),D=n("p",null,[s("Projects following our "),n("a",{href:"/deploy-netcore-docker-aws-ecs.html"},"Deployment to Docker AWS ECS guide"),s(" requires a few more changes as travis-ci does not natively support .NET Core 3.0 yet, but it can still be "),n("a",{href:"https://docs.travis-ci.com/user/installing-dependencies/#installing-snap-packages-with-the-snaps-addon",target:"_blank",rel:"noopener noreferrer"},"installed from a snap"),s(" which requires using either their "),n("code",null,"xenial"),s(" or "),n("code",null,"bionic"),s(" distro images.")],-1),q=n("p",null,[s("A complete working "),n("strong",null,".travis.yml"),s(" configuration for building .NET Core 3.0 projects now looks like:")],-1),O=n("h4",{id:"travis-yml",tabindex:"-1"},[n("a",{href:"https://github.com/NetCoreApps/Chat/blob/master/.travis.yml",target:"_blank",rel:"noopener noreferrer"},".travis.yml"),s(),n("a",{class:"header-anchor",href:"#travis-yml","aria-hidden":"true"},"#")],-1),H=n("div",{class:"language-yml"},[n("pre",null,[n("code",null,[n("span",{class:"token key atrule"},"dist"),n("span",{class:"token punctuation"},":"),s(` xenial
`),n("span",{class:"token key atrule"},"addons"),n("span",{class:"token punctuation"},":"),s(`
  `),n("span",{class:"token key atrule"},"snaps"),n("span",{class:"token punctuation"},":"),s(`
  `),n("span",{class:"token punctuation"},"-"),s(),n("span",{class:"token key atrule"},"name"),n("span",{class:"token punctuation"},":"),s(" dotnet"),n("span",{class:"token punctuation"},"-"),s(`sdk
    `),n("span",{class:"token key atrule"},"classic"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token boolean important"},"true"),s(`
    `),n("span",{class:"token key atrule"},"channel"),n("span",{class:"token punctuation"},":"),s(` latest/stable
`),n("span",{class:"token key atrule"},"sudo"),n("span",{class:"token punctuation"},":"),s(` required
`),n("span",{class:"token key atrule"},"language"),n("span",{class:"token punctuation"},":"),s(` csharp
`),n("span",{class:"token key atrule"},"mono"),n("span",{class:"token punctuation"},":"),s(` none
`),n("span",{class:"token key atrule"},"script"),n("span",{class:"token punctuation"},":"),s(`
  `),n("span",{class:"token punctuation"},"-"),s(" sudo snap alias dotnet"),n("span",{class:"token punctuation"},"-"),s(`sdk.dotnet dotnet
  `),n("span",{class:"token punctuation"},"-"),s(" dotnet "),n("span",{class:"token punctuation"},"-"),n("span",{class:"token punctuation"},"-"),s(`version
  `),n("span",{class:"token punctuation"},"-"),s(" chmod +x ./deploy"),n("span",{class:"token punctuation"},"-"),s(`envs.sh
  `),n("span",{class:"token punctuation"},"-"),s(` chmod +x ./scripts/build.sh
  `),n("span",{class:"token punctuation"},"-"),s(` chmod +x ./scripts/deploy.sh
  `),n("span",{class:"token punctuation"},"-"),s(" cd scripts "),n("span",{class:"token important"},"&&"),s(` ./build.sh
  `),n("span",{class:"token punctuation"},"-"),s(" if "),n("span",{class:"token punctuation"},"["),s(' "$TRAVIS_BRANCH" == "master" '),n("span",{class:"token punctuation"},"]"),s(`; then ./deploy.sh; fi
`)])])],-1),W=n("p",null,[s("The .NET Core 3.0 Docker Images are now being "),n("a",{href:"https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/#user-content-net-core-30-images",target:"_blank",rel:"noopener noreferrer"},"published to Microsoft's Container Registry"),s(", the "),n("a",{href:"https://docs.docker.com/engine/examples/dotnetcore/",target:"_blank",rel:"noopener noreferrer"},"recommended Dockerfile format"),s(" for .NET Core 3.0 Apps now looks like:")],-1),G=n("h4",{id:"dockerfile",tabindex:"-1"},[n("a",{href:"https://github.com/NetCoreApps/Chat/blob/master/Dockerfile",target:"_blank",rel:"noopener noreferrer"},"Dockerfile"),s(),n("a",{class:"header-anchor",href:"#dockerfile","aria-hidden":"true"},"#")],-1),V=n("div",{class:"language-dockerfile"},[n("pre",null,[n("code",null,[n("span",{class:"token instruction"},[n("span",{class:"token keyword"},"FROM"),s(" mcr.microsoft.com/dotnet/core/sdk:3.0 "),n("span",{class:"token keyword"},"AS"),s(" build")]),s(`
`),n("span",{class:"token instruction"},[n("span",{class:"token keyword"},"WORKDIR"),s(" /app")]),s(`

`),n("span",{class:"token comment"},"# copy csproj and restore as distinct layers"),s(`
`),n("span",{class:"token instruction"},[n("span",{class:"token keyword"},"COPY"),s(" src/*.sln .")]),s(`
`),n("span",{class:"token instruction"},[n("span",{class:"token keyword"},"COPY"),s(" src/Chat/*.csproj ./Chat/")]),s(`
`),n("span",{class:"token instruction"},[n("span",{class:"token keyword"},"RUN"),s(" dotnet restore")]),s(`

`),n("span",{class:"token comment"},"# copy everything else and build app"),s(`
`),n("span",{class:"token instruction"},[n("span",{class:"token keyword"},"COPY"),s(" src/Chat/. ./Chat/")]),s(`
`),n("span",{class:"token instruction"},[n("span",{class:"token keyword"},"WORKDIR"),s(" /app/Chat")]),s(`
`),n("span",{class:"token instruction"},[n("span",{class:"token keyword"},"RUN"),s(" dotnet publish -c Release -o out")]),s(`

`),n("span",{class:"token comment"},"# Build runtime image"),s(`
`),n("span",{class:"token instruction"},[n("span",{class:"token keyword"},"FROM"),s(" mcr.microsoft.com/dotnet/core/aspnet:3.0 "),n("span",{class:"token keyword"},"AS"),s(" runtime")]),s(`
`),n("span",{class:"token instruction"},[n("span",{class:"token keyword"},"WORKDIR"),s(" /app")]),s(`
`),n("span",{class:"token instruction"},[n("span",{class:"token keyword"},"COPY"),s(),n("span",{class:"token options"},[n("span",{class:"token property"},"--from"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},"build")]),s(" /app/Chat/out ./")]),s(`
`),n("span",{class:"token instruction"},[n("span",{class:"token keyword"},"ENV"),s(" ASPNETCORE_URLS http://*:5000")]),s(`
`),n("span",{class:"token instruction"},[n("span",{class:"token keyword"},"ENTRYPOINT"),s(" ["),n("span",{class:"token string"},'"dotnet"'),s(", "),n("span",{class:"token string"},'"Chat.dll"'),s("]")]),s(`
`)])])],-1),B=n("p",null,[s("More changes in .NET Core 3.0 changes can be found in "),n("a",{href:"https://docs.microsoft.com/en-us/aspnet/core/migration/22-to-30?view=aspnetcore-2.2&tabs=visual-studio",target:"_blank",rel:"noopener noreferrer"},"ASP.NET Core 2.2 to 3.0 Migration Guide")],-1),z=n("h3",{id:"troubleshooting",tabindex:"-1"},[s("Troubleshooting "),n("a",{class:"header-anchor",href:"#troubleshooting","aria-hidden":"true"},"#")],-1),U=n("p",null,[s("If "),n("a",{href:"/netcore-razor.html"},"ServiceStack Razor Pages"),s(" have issues resolving views after upgrading to .NET Core 3.0, disable pre-compiled views:")],-1),Y=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token operator"},"<"),s("MvcRazorCompileOnPublish"),n("span",{class:"token operator"},">"),n("span",{class:"token boolean"},"false"),n("span",{class:"token operator"},"<"),n("span",{class:"token operator"},"/"),s("MvcRazorCompileOnPublish"),n("span",{class:"token operator"},">"),s(`
`)])])],-1),$=n("blockquote",null,[n("p",null,[s("See this "),n("a",{href:"https://forums.servicestack.net/t/razor-pages-working-on-net-core-3-0/7850/6",target:"_blank",rel:"noopener noreferrer"},"Customer Forums Post"),s(" for more info.")])],-1),X=n("h3",{id:"upgrade-to-fluent-validation-v8-5",tabindex:"-1"},[s("Upgrade to Fluent Validation v8.5 "),n("a",{class:"header-anchor",href:"#upgrade-to-fluent-validation-v8-5","aria-hidden":"true"},"#")],-1),K=n("p",null,[s("ServiceStack's interned version of Fluent Validation has been updated to its "),n("a",{href:"https://github.com/JeremySkinner/FluentValidation/releases",target:"_blank",rel:"noopener noreferrer"},"latest v8.5 Release"),s(".")],-1),Q=n("p",null,[s("Interestingly this is the first time a Sharp Script was used to "),n("a",{href:"https://gist.github.com/gistlyn/8b409d00eff942279d3532975fa66965",target:"_blank",rel:"noopener noreferrer"},"partially automate the update"),s(". The productivity of the "),n("a",{href:"https://sharpscript.net/docs/sharp-scripts",target:"_blank",rel:"noopener noreferrer"},"real-time feedback in Sharp Scripts"),s(" crosses the threshold for it being faster to automate in-frequent one-off tasks like this than performing the update manually.")],-1),J=n("h3",{id:"service-plugin-apis",tabindex:"-1"},[s("Service Plugin APIs "),n("a",{class:"header-anchor",href:"#service-plugin-apis","aria-hidden":"true"},"#")],-1),Z=n("p",null,[s("The new Plugin APIs in the "),n("code",null,"Service"),s(" base class lets you avoid singleton access to "),n("code",null,"HostContext.GetPlugin<T>()"),s(" within your Service implementation:")],-1),nn=n("ul",null,[n("li",null,[n("code",null,"T GetPlugin<T>()"),s(" - returns "),n("code",null,"null"),s(" when plugin not registered")]),n("li",null,[n("code",null,"T AssertPlugin<T>()"),s(" - throw if plugin not registered")])],-1),sn=n("h3",{id:"authfeature",tabindex:"-1"},[s("AuthFeature "),n("a",{class:"header-anchor",href:"#authfeature","aria-hidden":"true"},"#")],-1),tn=n("h3",{id:"authenticate-alias-routes-removed-by-default",tabindex:"-1"},[n("code",null,"/authenticate"),s(" alias routes removed by default "),n("a",{class:"header-anchor",href:"#authenticate-alias-routes-removed-by-default","aria-hidden":"true"},"#")],-1),an=n("p",null,[s("Historically ServiceStack included a more formal "),n("code",null,"/authenticate"),s(" alias that could be used instead of the shorter "),n("code",null,"/auth"),s(" route for accessing its Authentication services. But only the "),n("code",null,"/auth"),s(" route was documented and the longer alias didn't see much usage except when it appeared in the Services metadata which presented a potential source of confusion as it included were duplicated routes for Auth.")],-1),en=n("p",null,[s("We've decided to remove the "),n("code",null,"/authenticate"),s(" alias by default, you can use "),n("code",null,"AddAuthenticateAliasRoutes()"),s(" to re-add it when registering the "),n("code",null,"AuthFeature"),s(" plugin, e.g:")],-1),on=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[s("Plugins"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"AuthFeature"),n("span",{class:"token punctuation"},"("),n("span",{class:"token range operator"},".."),n("span",{class:"token punctuation"},"."),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token range operator"},".."),n("span",{class:"token punctuation"},"."),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"AddAuthenticateAliasRoutes"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])])],-1),cn=n("p",null,[s("External Redirects used in the "),n("code",null,"?continue"),s(" params of "),n("code",null,"/auth"),s(" requests are disabled by default, they can be re-enabled with:")],-1),ln=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"AuthFeature"),n("span",{class:"token punctuation"},"("),n("span",{class:"token range operator"},".."),n("span",{class:"token punctuation"},"."),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    ValidateRedirectLinks `),n("span",{class:"token operator"},"="),s(" AuthFeature"),n("span",{class:"token punctuation"},"."),s(`AllowAllRedirects 
`),n("span",{class:"token punctuation"},"}"),s(`
`)])])],-1),pn=n("h2",{id:"ormlite",tabindex:"-1"},[s("OrmLite "),n("a",{class:"header-anchor",href:"#ormlite","aria-hidden":"true"},"#")],-1),rn=n("p",null,[s("New OrmLite Packages have been published that makes use of Microsoft's alternative "),n("code",null,"Microsoft.Data.SQLite"),s(" and "),n("code",null,"Microsoft.Data.SqlClient"),s(),n("a",{href:"http://ADO.NET",target:"_blank",rel:"noopener noreferrer"},"ADO.NET"),s(" Data providers:")],-1),un=n("ul",null,[n("li",null,[n("strong",null,"ServiceStack.OrmLite.Sqlite.Data"),s(" - Sqlite provider that uses "),n("code",null,"Microsoft.Data.SQLite")]),n("li",null,[n("strong",null,"ServiceStack.OrmLite.SqlServer.Data"),s(" - SqlServer provider that uses "),n("code",null,"Microsoft.Data.SqlClient")]),n("li",null,[n("strong",null,"ServiceStack.OrmLite.SqlServer.Data.Core"),s(" - Use "),n("code",null,"Microsoft.Data.SqlClient"),s(" on "),n("a",{href:"/templates-corefx.html"},"ASP.NET Core on .NET Framework")])],-1),kn=n("p",null,[s("They're source-code compatible with OrmLite's existing "),n("strong",null,"OrmLite.Sqlite"),s(" and "),n("strong",null,"OrmLite.SqlServer"),s(" packages where App's will be able to easily switch to these new packages by adding the "),n("code",null,".Data"),s(" suffix to their existing OrmLite NuGet package references.")],-1),dn=n("h3",{id:"getschematable",tabindex:"-1"},[s("GetSchemaTable "),n("a",{class:"header-anchor",href:"#getschematable","aria-hidden":"true"},"#")],-1),hn=n("p",null,[n("a",{href:"http://ADO.NET",target:"_blank",rel:"noopener noreferrer"},"ADO.NET"),s("'s "),n("code",null,"IDataReader.GetSchemaTable()"),s(" for retrieving schema info on a query, can now be accessed from OrmLite with:")],-1),gn=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token class-name"},"DataTable"),s(" schema "),n("span",{class:"token operator"},"="),s(" db"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"GetSchemaTable"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"SELECT * from Table"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])])],-1),mn=n("p",null,[s("Although as this returns an unstructured dump of attributes in a "),n("code",null,"DataTable"),s(" we've also provided APIs to return the results a typed "),n("a",{href:"https://github.com/ServiceStack/ServiceStack.OrmLite/blob/master/src/ServiceStack.OrmLite/ColumnSchema.cs",target:"_blank",rel:"noopener noreferrer"},"ColumnSchema"),s(" POCO:")],-1),fn=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token class-name"},[s("ColumnSchema"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]")]),s(" schema "),n("span",{class:"token operator"},"="),s(" db"),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-method"},[n("span",{class:"token function"},"GetTableColumns"),n("span",{class:"token generic class-name"},[n("span",{class:"token punctuation"},"<"),s("Table"),n("span",{class:"token punctuation"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token class-name"},[s("ColumnSchema"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]")]),s(" schema "),n("span",{class:"token operator"},"="),s(" db"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"GetTableColumns"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"typeof"),n("span",{class:"token punctuation"},"("),n("span",{class:"token type-expression class-name"},"Table"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token class-name"},[s("ColumnSchema"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]")]),s(" schema "),n("span",{class:"token operator"},"="),s(" db"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"GetTableColumns"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"SELECT * from Table"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])])],-1),bn=n("blockquote",null,[n("p",null,[n("code",null,"async"),s(" equivalents available for all new APIs")])],-1),yn=n("h4",{id:"db-script-methods",tabindex:"-1"},[s("DB Script Methods "),n("a",{class:"header-anchor",href:"#db-script-methods","aria-hidden":"true"},"#")],-1),_n=n("p",null,[s("As this Table Schema information is useful when accessing databases in "),n("code",null,"#Script"),s(" with "),n("a",{href:"https://sharpscript.net/docs/db-scripts",target:"_blank",rel:"noopener noreferrer"},"DB Scripts"),s(", this information is also available from:")],-1),wn=n("div",{class:"language-js"},[n("pre",null,[n("code",null,[n("span",{class:"token string"},"'Table'"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"dbColumnNames"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token string"},"'Table'"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"dbColumns"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"|"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token parameter"},"map"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),s("it"),n("span",{class:"token punctuation"},"."),s("ColumnName"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"}," "),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),s("it"),n("span",{class:"token punctuation"},"."),s("DataTypeName"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token template-punctuation string"},"`")]),s(),n("span",{class:"token operator"},"|"),n("span",{class:"token operator"},">"),s(` joinln
`),n("span",{class:"token string"},"'select * from Table'"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"dbDesc"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"|"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token parameter"},"map"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),s("it"),n("span",{class:"token punctuation"},"."),s("ColumnName"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"}," "),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),s("it"),n("span",{class:"token punctuation"},"."),s("DataTypeName"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token template-punctuation string"},"`")]),s(),n("span",{class:"token operator"},"|"),n("span",{class:"token operator"},">"),s(` joinln
`)])])],-1),vn=n("h3",{id:"servicestack-text",tabindex:"-1"},[s("ServiceStack.Text "),n("a",{class:"header-anchor",href:"#servicestack-text","aria-hidden":"true"},"#")],-1),Sn=n("p",null,[s("The "),n("a",{href:"https://github.com/ServiceStack/ServiceStack.Text/blob/master/src/ServiceStack.Text/MemoryProvider.cs",target:"_blank",rel:"noopener noreferrer"},"MemoryProvider"),s(" abstraction is used to take advantage of .NET Core's more performant and low allocation APIs whilst still being able to support .NET Framework from the same code-base. New APIs added in this release include:")],-1),xn=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"MemoryProvider"),s(`
`),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"abstract"),s(),n("span",{class:"token return-type class-name"},"Task"),s(),n("span",{class:"token function"},"WriteAsync"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Stream"),s(" stream"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},[s("ReadOnlySpan"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token keyword"},"char"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token keyword"},"value"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"CancellationToken"),s(" token"),n("span",{class:"token operator"},"="),n("span",{class:"token keyword"},"default"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"abstract"),s(),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"void")]),s(),n("span",{class:"token function"},"Write"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Stream"),s(" stream"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},[s("ReadOnlyMemory"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token keyword"},"char"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token keyword"},"value"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"abstract"),s(),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"void")]),s(),n("span",{class:"token function"},"Write"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Stream"),s(" stream"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},[s("ReadOnlyMemory"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token keyword"},"byte"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token keyword"},"value"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])])],-1),Tn=n("h3",{id:"auto-mapping",tabindex:"-1"},[s("Auto Mapping "),n("a",{class:"header-anchor",href:"#auto-mapping","aria-hidden":"true"},"#")],-1),Ln=n("p",null,[n("a",{href:"/auto-mapping.html"},"Auto Mapping"),s(" now makes usage of implicit casts defined on the target Type as well, e.g:")],-1),An=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" xname "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"Text"'),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-method"},[n("span",{class:"token function"},"ConvertTo"),n("span",{class:"token generic class-name"},[n("span",{class:"token punctuation"},"<"),s("XName"),n("span",{class:"token punctuation"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"//uses implicit string cast in XName"),s(`
`)])])],-1),Cn=n("ul",null,[n("li",null,[s("New "),n("code",null,"Env.IsNetCore3"),s(" can be used to detect if running on .NET Core 3.x")]),n("li",null,[n("code",null,"min()"),s(" and "),n("code",null,"max()"),s(" APIs added to "),n("code",null,"DynamicNumber")])],-1),In=n("h2",{id:"script",tabindex:"-1"},[s("#Script "),n("a",{class:"header-anchor",href:"#script","aria-hidden":"true"},"#")],-1),En=n("p",null,[s("We've seen great reception of "),n("a",{href:"/releases/v5.6.html#gist-desktop-apps"},"Gist Desktop Apps"),s(" from the last v5.6 release with a nice shoutout from "),n("a",{href:"https://twitter.com/jongalloway",target:"_blank",rel:"noopener noreferrer"},"Jon Galloway"),s(" in the "),n("a",{href:"https://www.youtube.com/watch?v=a2lq4yEfJpk&feature=youtu.be&t=1529",target:"_blank",rel:"noopener noreferrer"},"ASP.NET Community August Stand up"),s(", a featured "),n("a",{href:"https://www.hanselman.com/blog/SharpScriptFromServiceStackLetsYouRunNETAppsDirectlyFromAGitHubGist.aspx",target:"_blank",rel:"noopener noreferrer"},"blog post"),s(" from "),n("a",{href:"https://twitter.com/shanselman",target:"_blank",rel:"noopener noreferrer"},"Scott Hanselman"),s(" as well features in Hacker News and Reddit.")],-1),Pn=n("p",null,[s("We've since further enhanced "),n("code",null,"#Script"),s(" capabilities in this release making it more functional then ever, broadening its appeal in its growing list of use-cases.")],-1),Nn=n("h3",{id:"_1st-class-script-code-and-lisp-language-support",tabindex:"-1"},[s("1st class #Script Code and Lisp Language support! "),n("a",{class:"header-anchor",href:"#_1st-class-script-code-and-lisp-language-support","aria-hidden":"true"},"#")],-1),Fn=n("p",null,[s("In addition to enhanced capabilities, it also gains support for multiple languages with "),n("a",{href:"https://sharpscript.net/scode/",target:"_blank",rel:"noopener noreferrer"},"#Script code"),s(" now implemented as a first-class language as well entirely new support for "),n("a",{href:"https://sharpscript.net/lisp/",target:"_blank",rel:"noopener noreferrer"},"Lisp"),s("! - one of the smallest and most powerful languages in existence whose dynamism and extensibility makes it particularly well suited for a range of explanatory programming tasks that can now be harnessed in .NET Core and .NET Framework Apps.")],-1),Rn=n("p",null,[s("You can interactively explore and compare each of "),n("code",null,"#Script"),s(" languages in "),n("strong",null,"C#'s 101 LINQ Examples"),s(":")],-1),Mn=n("div",{class:"text-center"},[n("a",{href:"https://sharpscript.net/linq/restriction-operators",class:"btn btn-outline-primary btn-lg"},"template"),n("a",{href:"https://sharpscript.net/linq/restriction-operators?lang=code",class:"btn btn-outline-primary btn-lg"},"code"),n("a",{href:"https://sharpscript.net/linq/restriction-operators?lang=lisp",class:"btn btn-outline-primary btn-lg"},"lisp")],-1),jn=n("h3",{id:"transition-to-js-pipeline-operator-syntax",tabindex:"-1"},[s("Transition to JS Pipeline Operator Syntax "),n("a",{class:"header-anchor",href:"#transition-to-js-pipeline-operator-syntax","aria-hidden":"true"},"#")],-1),Dn=n("p",null,[s("First we want to announce our intention to move to use JavaScript's proposed "),n("code",null,"|>"),s(),n("a",{href:"https://github.com/tc39/proposal-pipeline-operator",target:"_blank",rel:"noopener noreferrer"},"Pipeline Operator syntax"),s(" that's now moved to "),n("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Pipeline_operator",target:"_blank",rel:"noopener noreferrer"},"stage 1"),s(" proposal where it's become clear that they've chosen to use F#'s pipe forward "),n("code",null,"|>"),s(" operator for its syntax. It's currently only at "),n("strong",null,"Stage 1"),s(" so could still be years before it's adopted in browsers as there's still open questions about its exact semantics, but a version of it is currently available as a "),n("a",{href:"https://babeljs.io/blog/2018/07/19/whats-happening-with-the-pipeline-proposal",target:"_blank",rel:"noopener noreferrer"},"babel plugin"),s(" and in Firefox under an "),n("a",{href:"https://github.com/tc39/proposal-pipeline-operator#implementations",target:"_blank",rel:"noopener noreferrer"},[s("experimental "),n("code",null,"--enable-pipeline-operator")]),s(" flag.")],-1),qn=n("p",null,[s("We'd also like to transition to use the new "),n("code",null,"|>"),s(" syntax for future benefits in improved familiarity for JS developers as well as the source-code compatibility benefits from code portability to compatibility with JS tools, language services and syntax highlighters.")],-1),On=n("p",null,[s("As the existing "),n("code",null,"|"),s(" operator has been fundamental in existing "),n("code",null,"#Script"),s(" code bases we want to transition to the new syntax with the least disruption possible by supporting both syntaxes in parallel over multiple releases so existing code-bases can transition at their own pace, which just involves replacing existing usages of "),n("code",null,"|"),s(" to use "),n("code",null,"|>"),s(", e.g:")],-1),Hn=n("div",null,[n("div",{class:"language-hbs"},[n("pre",{"v-pre":""},[n("code",null,[n("span",{class:"token delimiter punctuation"},"{{"),s(),n("span",{class:"token string"},"'shout'"),s(),n("span",{class:"token punctuation"},"|"),s(),n("span",{class:"token variable"},"upper"),s(),n("span",{class:"token punctuation"},"|"),s(),n("span",{class:"token variable"},"substring"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"|"),s(),n("span",{class:"token variable"},"padRight"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"6"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'_'"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"|"),s(),n("span",{class:"token variable"},"repeat"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token punctuation"},"/"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"to"),s(`

`),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token string"},"'shout'"),s(),n("span",{class:"token punctuation"},"|"),n("span",{class:"token punctuation"},">"),s(),n("span",{class:"token variable"},"upper"),s(),n("span",{class:"token punctuation"},"|"),n("span",{class:"token punctuation"},">"),s(),n("span",{class:"token variable"},"substring"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"|"),n("span",{class:"token punctuation"},">"),s(),n("span",{class:"token variable"},"padRight"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"6"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'_'"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"|"),n("span",{class:"token punctuation"},">"),s(),n("span",{class:"token variable"},"repeat"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),s(`
`)])])])],-1),Wn=n("p",null,[s("When ready you can enforce that only the new "),n("code",null,"|>"),s(" syntax is used by disallowing "),n("code",null,"|"),s(" usage with:")],-1),Gn=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[s("ScriptConfig"),n("span",{class:"token punctuation"},"."),s("AllowUnixPipeSyntax "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},";"),s(`
`)])])],-1),Vn=n("p",null,[s("F#'s "),n("code",null,"|>"),s(" pipe forward operator has now been "),n("a",{href:"https://github.com/tc39/proposal-pipeline-operator",target:"_blank",rel:"noopener noreferrer"},"implemented in multiple languages"),s(" which works as expected when pipe forwarding to a function with a single argument:")],-1),Bn=n("div",{class:"language-js"},[n("pre",null,[n("code",null,[s("a "),n("span",{class:"token operator"},"|"),n("span",{class:"token operator"},">"),s(" f "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"f"),n("span",{class:"token punctuation"},"("),s("a"),n("span",{class:"token punctuation"},")"),s(`
`)])])],-1),zn=n("p",null,[s("But the semantics of how it's applied when forwarding to functions with multiple arguments varies such that "),n("code",null,"a |> f(b)"),s(" desugars to:")],-1),Un=n("div",{class:"language-js"},[n("pre",null,[n("code",null,[n("span",{class:"token function"},"f"),n("span",{class:"token punctuation"},"("),s("a"),n("span",{class:"token punctuation"},","),s(" b"),n("span",{class:"token punctuation"},")"),s("  "),n("span",{class:"token comment"},"// Elixir first argument"),s(`
`),n("span",{class:"token function"},"f"),n("span",{class:"token punctuation"},"("),s("b"),n("span",{class:"token punctuation"},","),s(" a"),n("span",{class:"token punctuation"},")"),s("  "),n("span",{class:"token comment"},"// F# last argument"),s(`
`),n("span",{class:"token function"},"f"),n("span",{class:"token punctuation"},"("),s("b"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),s("a"),n("span",{class:"token punctuation"},")"),s("  "),n("span",{class:"token comment"},"// JS proposal"),s(`
`)])])],-1),Yn=n("p",null,[n("code",null,"#Script"),s(" like Elixir passes it as the first argument which in our opinion is the most intuitive behavior that better supports calling overloaded functions with different parameter counts.")],-1),$n=n("h3",{id:"scripting-net",tabindex:"-1"},[s("Scripting .NET! "),n("a",{class:"header-anchor",href:"#scripting-net","aria-hidden":"true"},"#")],-1),Xn=n("p",null,[s("By default the only functionality and objects "),n("code",null,"#Script"),s(" has access to is what's pre-configured within a new "),n("code",null,"ScriptContext"),n("a",{href:"https://sharpscript.net/docs/sandbox",target:"_blank",rel:"noopener noreferrer"},"sandbox"),s(" which has access to "),n("a",{href:"https://sharpscript.net/docs/default-scripts",target:"_blank",rel:"noopener noreferrer"},"Default Scripts"),s(", "),n("a",{href:"https://sharpscript.net/docs/html-scripts",target:"_blank",rel:"noopener noreferrer"},"HTML Scripts"),s(" and default "),n("a",{href:"https://sharpscript.net/docs/blocks",target:"_blank",rel:"noopener noreferrer"},"Script Blocks"),s(". "),n("code",null,"#Script"),s(" can't call methods on instances or have any other way to invoke a method unless it's explicitly registered.")],-1),Kn=n("p",null,[s("To enable additional functionality, the "),n("code",null,"ScriptContext"),s(" that executes your script can be extended with additional:")],-1),Qn=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" context "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"ScriptContext"),s(),n("span",{class:"token punctuation"},"{"),s(`
    Args `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token range operator"},".."),n("span",{class:"token punctuation"},"."),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s("              "),n("span",{class:"token comment"},"// Global Arguments available to all Scripts, Pages, Partials, etc"),s(`
    ScriptMethods `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token range operator"},".."),n("span",{class:"token punctuation"},"."),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s("     "),n("span",{class:"token comment"},"// Additional Methods"),s(`
    ScriptBlocks `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token range operator"},".."),n("span",{class:"token punctuation"},"."),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s("      "),n("span",{class:"token comment"},"// Additional Script Blocks "),s(`
    FilterTransformers `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token range operator"},".."),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token comment"},"// Additional Stream Transformers"),s(`
    PageFormats `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token range operator"},".."),n("span",{class:"token punctuation"},"."),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s("       "),n("span",{class:"token comment"},"// Additional Text Document Formats"),s(`
    Plugins `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token range operator"},".."),n("span",{class:"token punctuation"},"."),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s("           "),n("span",{class:"token comment"},"// Encapsulated Features e.g. Markdown, Protected or ServiceStack Features"),s(`

    ScanTypes `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token range operator"},".."),n("span",{class:"token punctuation"},"."),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s("         "),n("span",{class:"token comment"},"// Auto register Methods, Blocks and Code Page Types"),s(`
    ScanAssemblies `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token range operator"},".."),n("span",{class:"token punctuation"},"."),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s("    "),n("span",{class:"token comment"},"// Auto register all Methods, Blocks and Code Page Types in Assembly"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Init"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])])],-1),Jn=n("p",null,[s("Although being able to Script .NET Types directly gives your Scripts greater capabilities and opens it up to a lot more use-cases that's especially useful in predominantly #Script-heavy contexts like "),n("a",{href:"https://sharpscript.net//docs/sharp-apps",target:"_blank",rel:"noopener noreferrer"},"Sharp Apps"),s(" and "),n("a",{href:"https://sharpscript.net//docs/sharp-scripts",target:"_blank",rel:"noopener noreferrer"},"Shell Scripts"),s(" giving them maximum power that would otherwise require the usage of "),n("a",{href:"https://sharpscript.net//docs/sharp-apps#plugins",target:"_blank",rel:"noopener noreferrer"},"Plugins"),s(".")],-1),Zn=n("p",null,[s("We can visualize the different scriptability options from the diagram below where by default scripts are limited to functionality "),n("a",{href:"https://sharpscript.net/docs/introduction#net-usage",target:"_blank",rel:"noopener noreferrer"},"defined within their ScriptContext"),s(", whether to "),n("a",{href:"https://sharpscript.net/docs/script-net#script-assemblies-and-types",target:"_blank",rel:"noopener noreferrer"},"limit access to specific Types and Assemblies"),s(" or whether to lift the escape hatch and "),n("a",{href:"https://sharpscript.net/docs/script-net#allowscriptingofalltypes",target:"_blank",rel:"noopener noreferrer"},"allow scripting of any .NET Types"),s(".")],-1),ns=n("p",null,[n("img",{src:"https://sharpscript.net/assets/img/sandbox.svg",alt:""})],-1),ss=n("p",null,[s("The new .NET Scripting support is only available to Script's executed within "),n("strong",null,"trusted contexts"),s(" that are registered with "),n("a",{href:"https://sharpscript.net/docs/protected-scripts",target:"_blank",rel:"noopener noreferrer"},"Protected Scripts"),s(". The different ways to allow scripting of .NET Types include:")],-1),ts=n("h4",{id:"script-assemblies-and-types",tabindex:"-1"},[s("Script Assemblies and Types "),n("a",{class:"header-anchor",href:"#script-assemblies-and-types","aria-hidden":"true"},"#")],-1),as=n("p",null,[s("Using "),n("code",null,"ScriptTypes"),s(" to limit scriptability to "),n("strong",null,"only specific Types"),s(":")],-1),es=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" context "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"ScriptContext"),s(),n("span",{class:"token punctuation"},"{"),s(`
    ScriptMethods `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"ProtectedScripts"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
    ScriptTypes `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"typeof"),n("span",{class:"token punctuation"},"("),n("span",{class:"token type-expression class-name"},"MyType"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token keyword"},"typeof"),n("span",{class:"token punctuation"},"("),n("span",{class:"token type-expression class-name"},"MyType2"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Init"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])])],-1),os=n("p",null,[s("Or you can use "),n("code",null,"ScriptAssemblies"),s(" to allow scripting of "),n("strong",null,"all Types within an Assembly"),s(":")],-1),cs=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" context "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"ScriptContext"),s(),n("span",{class:"token punctuation"},"{"),s(`
    ScriptMethods `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"ProtectedScripts"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
    ScriptAssemblies `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"typeof"),n("span",{class:"token punctuation"},"("),n("span",{class:"token type-expression class-name"},"MyType"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),s("Assembly"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Init"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])])],-1),ls=n("h4",{id:"allowscriptingofalltypes",tabindex:"-1"},[s("AllowScriptingOfAllTypes "),n("a",{class:"header-anchor",href:"#allowscriptingofalltypes","aria-hidden":"true"},"#")],-1),ps=n("p",null,[s("To give your Scripts maximum accessibility where they're able to pierce the well-defined "),n("a",{href:"https://sharpscript.net/docs/sandbox",target:"_blank",rel:"noopener noreferrer"},"ScriptContext sandbox"),s(", you can set "),n("code",null,"AllowScriptingOfAllTypes"),s(" to allow scripting of "),n("strong",null,"all .NET Types"),s(" available in loaded assemblies:")],-1),is=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" context "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"ScriptContext"),s(),n("span",{class:"token punctuation"},"{"),s(`
    ScriptMethods `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"ProtectedScripts"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
    AllowScriptingOfAllTypes `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),s(`
    ScriptNamespaces `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"typeof"),n("span",{class:"token punctuation"},"("),n("span",{class:"token type-expression class-name"},"MyType"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),s("Namespace"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Init"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])])],-1),rs=n("p",null,[n("code",null,"ScriptNamespaces"),s(" is used to include additional Lookup namespaces for resolving Types akin to C# "),n("code",null,"using"),s(" statements.")],-1),us=n("p",null,[s("Using "),n("code",null,"AllowScriptingOfAllTypes"),s(" also allows access to both public and "),n("strong",null,"non-public"),s(" Types.")],-1),ks=n("h2",{id:"scripting-net-apis",tabindex:"-1"},[s("Scripting .NET APIs "),n("a",{class:"header-anchor",href:"#scripting-net-apis","aria-hidden":"true"},"#")],-1),ds=n("p",null,[s("The following "),n("a",{href:"https://sharpscript.net/docs/protected-scripts",target:"_blank",rel:"noopener noreferrer"},"Protected Scripts"),s(" are all that's needed to create new instances, call methods and populate instances of .NET Types, including generic types and generic methods.")],-1),hs=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token comment"},"// Resolve Types"),s(`
Type `),n("span",{class:"token keyword"},"typeof"),n("span",{class:"token punctuation"},"("),n("span",{class:"token type-expression class-name"},[n("span",{class:"token keyword"},"string"),s(" typeName")]),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// Call Methods"),s(`
`),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"object")]),s(),n("span",{class:"token function"},"call"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"object")]),s(" instance"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" name"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"object")]),s(),n("span",{class:"token function"},"call"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"object")]),s(" instance"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" name"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},[s("List"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token keyword"},"object"),n("span",{class:"token punctuation"},">")]),s(" args"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token return-type class-name"},"Delegate"),s(),n("span",{class:"token function"},"Function"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" qualifiedMethodName"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s("                    "),n("span",{class:"token comment"},"// alias F(string)"),s(`

`),n("span",{class:"token comment"},"// Create Instances"),s(`
`),n("span",{class:"token keyword"},"object"),s(),n("span",{class:"token keyword"},"new"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" typeName"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"object"),s(),n("span",{class:"token keyword"},"new"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" typeName"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},[s("List"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token keyword"},"object"),n("span",{class:"token punctuation"},">")]),s(" constructorArgs"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"object")]),s(),n("span",{class:"token function"},"createInstance"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Type"),s(" type"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"object")]),s(),n("span",{class:"token function"},"createInstance"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Type"),s(" type"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},[s("List"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token keyword"},"object"),n("span",{class:"token punctuation"},">")]),s(" constructorArgs"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token return-type class-name"},"ObjectActivator"),s(),n("span",{class:"token function"},"Constructor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" qualifiedConstructorName"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s("     "),n("span",{class:"token comment"},"// alias C(string)"),s(`

`),n("span",{class:"token comment"},"// Populate Instance"),s(`
`),n("span",{class:"token keyword"},"object"),s(),n("span",{class:"token keyword"},"set"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"object")]),s(" instance"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},[s("Dictionary"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token keyword"},"string"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"object"),n("span",{class:"token punctuation"},">")]),s(" args"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])])],-1),gs=n("blockquote",null,[n("p",null,[s("Note: only a Type's "),n("strong",null,"public"),s(" members can be accessed from "),n("code",null,"#Script")])],-1),ms=n("h3",{id:"type-resolution",tabindex:"-1"},[s("Type Resolution "),n("a",{class:"header-anchor",href:"#type-resolution","aria-hidden":"true"},"#")],-1),fs=n("p",null,[s("If you've registered Types using either "),n("code",null,"ScriptTypes"),s(" or "),n("code",null,"ScriptAssemblies"),s(" than you'll be able to reference the Type using "),n("strong",null,"just the Type Name"),s(", unless multiple Types of the same name are registered in which case the "),n("code",null,"typeof()"),s(" will return the "),n("strong",null,"first Type"),s(" registered, all other subsequent Types with the same Name will need to be referenced with their "),n("strong",null,"Full Name"),s(".")],-1),bs=n("div",{class:"language-js"},[n("pre",null,[n("code",null,[n("span",{class:"token keyword"},"typeof"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'MyType'"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"typeof"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'My.Namespace.MyType'"),n("span",{class:"token punctuation"},")"),s(`
`)])])],-1),ys=n("p",null,[s("When "),n("code",null,"AllowScriptingOfAllTypes=true"),s(" is enabled, you can use "),n("code",null,"ScriptNamespaces"),s(" to add Lookup Namespaces for resolving Types, which for #Script Pages, Sharp Apps and Sharp Scripts are pre-configured with:")],-1),_s=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" context "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"ScriptContext"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"//..."),s(`
    ScriptNamespaces `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token string"},'"System"'),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token string"},'"System.Collections.Generic"'),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token string"},'"ServiceStack"'),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Init"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])])],-1),ws=n("p",null,[s("All other Types (other than "),n("a",{href:"https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/built-in-types-table",target:"_blank",rel:"noopener noreferrer"},".NET built-in types"),s(") not registered in "),n("code",null,"ScriptTypes"),s(", "),n("code",null,"ScriptAssemblies"),s(" or have their namespace defined in "),n("code",null,"ScriptNamespaces"),s(" will need to be referenced using their "),n("strong",null,"Full Type Name"),s(". This same Type resolution applies for all references of Types in "),n("code",null,"#Script"),s(".")],-1),vs=n("h4",{id:"examples-configuration",tabindex:"-1"},[s("Examples Configuration "),n("a",{class:"header-anchor",href:"#examples-configuration","aria-hidden":"true"},"#")],-1),Ss=n("p",null,[s("The examples below assumes a "),n("code",null,"ScriptContext"),s(" configured with:")],-1),xs=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" context "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"ScriptContext"),s(),n("span",{class:"token punctuation"},"{"),s(`
    ScriptMethods `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"ProtectedScripts"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
    AllowScriptingOfAllTypes `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),s(`
    ScriptNamespaces `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token string"},'"System"'),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token string"},'"System.Collections.Generic"'),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
    ScriptTypes `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"typeof"),n("span",{class:"token punctuation"},"("),n("span",{class:"token type-expression class-name"},"Ints"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token keyword"},"typeof"),n("span",{class:"token punctuation"},"("),n("span",{class:"token type-expression class-name"},"Adder"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token keyword"},"typeof"),n("span",{class:"token punctuation"},"("),n("span",{class:"token type-expression class-name"},"StaticLog"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token keyword"},"typeof"),n("span",{class:"token punctuation"},"("),n("span",{class:"token type-expression class-name"},"InstanceLog"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token keyword"},"typeof"),n("span",{class:"token punctuation"},"("),n("span",{class:"token type-expression class-name"},[s("GenericStaticLog"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},">")]),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Init"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])])],-1),Ts=n("p",null,[s("With the types for the above classes defined in "),n("a",{href:"https://github.com/ServiceStack/sharpscript/blob/master/src/ScriptTypes.cs",target:"_blank",rel:"noopener noreferrer"},"ScriptTypes.cs"),s(". This is the definition of the "),n("code",null,"Adder"),s(" class that's referenced frequently in the examples below:")],-1),Ls=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Adder"),s(`
`),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"string")]),s(" String "),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token keyword"},"get"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token keyword"},"set"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"double")]),s(" Double "),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token keyword"},"get"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token keyword"},"set"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token function"},"Adder"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" str"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(" String "),n("span",{class:"token operator"},"="),s(" str"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token function"},"Adder"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"double")]),s(" num"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(" Double "),n("span",{class:"token operator"},"="),s(" num"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"string")]),s(),n("span",{class:"token function"},"Add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" str"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(" String "),n("span",{class:"token operator"},"+="),s(" str"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"double")]),s(),n("span",{class:"token function"},"Add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"double")]),s(" num"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(" Double "),n("span",{class:"token operator"},"+="),s(" num"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"override"),s(),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"string")]),s(),n("span",{class:"token function"},"ToString"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(" String "),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),s(),n("span",{class:"token punctuation"},"?"),s(),n("span",{class:"token interpolation-string"},[n("span",{class:"token string"},'$"string: '),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},"String"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'"')]),s(),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token interpolation-string"},[n("span",{class:"token string"},'$"double: '),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},"Double"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'"')]),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])])],-1),As=n("h3",{id:"creating-instances",tabindex:"-1"},[s("Creating Instances "),n("a",{class:"header-anchor",href:"#creating-instances","aria-hidden":"true"},"#")],-1),Cs=n("p",null,"There are 3 different APIs for creating instances of Types:",-1),Is=n("ul",null,[n("li",null,[n("code",null,"new"),s(" - create instances from Type "),n("strong",null,"name"),s(" with specified List of arguments")]),n("li",null,[n("code",null,"createInstance"),s(" - create instance of "),n("strong",null,"Type"),s(" with specified List of arguments")]),n("li",null,[n("code",null,"Constructor"),s(" - create a Constructor "),n("strong",null,"delegate"),s(" that can create instances via method invocation")])],-1),Es=n("p",null,[s("Built-in .NET Types and Types in "),n("code",null,"ScriptTypes"),s(", "),n("code",null,"ScriptAssemblies"),s(" or "),n("code",null,"ScriptNamespaces"),s(" can be created using their Type Name, including generic Types:")],-1),Ps=n("div",{class:"language-js"},[n("pre",null,[n("code",null,[n("span",{class:"token string"},"'int'"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"new"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token string"},"'DateTime'"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"new"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token string"},"'Dictionary<string,DateTime>'"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"new"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`)])])],-1),Ns=n("p",null,[s("Otherwise new instances of Types can be created using their "),n("strong",null,"full Type Name"),s(":")],-1),Fs=n("div",{class:"language-js"},[n("pre",null,[n("code",null,[n("span",{class:"token string"},"'System.Int32'"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"new"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token string"},"'System.Text.StringBuilder'"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"new"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`)])])],-1),Rs=n("p",null,[s("A list of arguments can be passed to the "),n("code",null,"new"),s(" method to call the constructor with the specified arguments:")],-1),Ms=n("div",{class:"language-js"},[n("pre",null,[n("code",null,[n("span",{class:"token string"},"'Ints'"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"new"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token string"},"'Adder'"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"new"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1.0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token string"},"'KeyValuePair<string,int>'"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"new"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'A'"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
`)])])],-1),js=n("h4",{id:"constructor-resolution",tabindex:"-1"},[s("Constructor Resolution "),n("a",{class:"header-anchor",href:"#constructor-resolution","aria-hidden":"true"},"#")],-1),Ds=n("p",null,[n("code",null,"#Script"),s(" will use the constructor that matches the same number of specified arguments, when needed it uses "),n("a",{href:"/auto-mapping.html"},"ServiceStack's Auto Mapping"),s(" to convert instances when their Types don't match, e.g:")],-1),qs=n("div",{class:"language-js"},[n("pre",null,[n("code",null,[n("span",{class:"token string"},"'Ints'"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"new"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1.0"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"2.0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token string"},"'KeyValuePair<char,double>'"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"new"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'A'"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
`)])])],-1),Os=n("p",null,[s("However if there are multiple constructors with the same number of arguments, it will only use the constructor where all its argument Types match with the supplied arguments. Attempting to create an instance of the "),n("code",null,"Adder"),s(" class which only has constructors for "),n("code",null,"string"),s(" or "),n("code",null,"double"),s(" will fail with an "),n("strong",null,"Ambiguous Match Exception"),s(" when trying to create it with an "),n("code",null,"int"),s(":")],-1),Hs=n("div",{class:"language-js"},[n("pre",null,[n("code",null,[n("span",{class:"token string"},"'Adder'"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"new"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s("  "),n("span",{class:"token comment"},"// FAIL: Ambiguous Constructor"),s(`
`)])])],-1),Ws=n("p",null,"In this case you'll need to convert the arguments so its Types matches one of the available constructors:",-1),Gs=n("div",{class:"language-js"},[n("pre",null,[n("code",null,[n("span",{class:"token string"},"'Adder'"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"new"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1.0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token string"},"'Adder'"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"new"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),s("intArg"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toDouble"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token string"},"'Adder'"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"new"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'A'"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token string"},"'Adder'"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"new"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),s("instance"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token template-punctuation string"},"`")]),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// or 'Adder'.new([instance.toString()]) "),s(`
`)])])],-1),Vs=n("h4",{id:"constructor-function",tabindex:"-1"},[s("Constructor function "),n("a",{class:"header-anchor",href:"#constructor-function","aria-hidden":"true"},"#")],-1),Bs=n("p",null,[s("Alternatively you can use the "),n("code",null,"Constructor"),s(" method to specify the constructor you want by specifying the argument types of the constructor you want to use, which will return a delegate that lets you call a method to create instances using that Type's constructor:")],-1),zs=n("div",{class:"language-js"},[n("pre",null,[n("code",null,[n("span",{class:"token function"},"Constructor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'Adder(double)'"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"|"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token parameter"},"to"),s(),n("span",{class:"token operator"},"=>"),s(` doubleAdder
`),n("span",{class:"token function"},"Constructor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'Adder(string)'"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"|"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token parameter"},"to"),s(),n("span",{class:"token operator"},"=>"),s(` stringAdder
`)])])],-1),Us=n("p",null,[s("In this case you will be able to create instances of "),n("code",null,"Adder"),s(" using an "),n("code",null,"int"),s(" argument as the built-in automapping will convert it to the Argument Type of the Constructor you've chosen:")],-1),Ys=n("div",{class:"language-js"},[n("pre",null,[n("code",null,[n("span",{class:"token function"},"doubleAdder"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token function"},"stringAdder"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"// equivalent to:"),s(`
`),n("span",{class:"token function"},"Constructor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'Adder(double)'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token function"},"Constructor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'Adder(string)'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(`
`)])])],-1),$s=n("p",null,"As the Constructor Function returns a delegate you will be able to invoke it like a normal method where it can also be invoked as an extension method or inside a filter expression:",-1),Xs=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token function"},"Constructor"),n("span",{class:"token punctuation"},"("),s("'"),n("span",{class:"token function"},"Uri"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"string"),n("span",{class:"token punctuation"},")"),s("'"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"|"),n("span",{class:"token operator"},">"),s(" to "),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token return-type class-name"},"url"),s(`

`),n("span",{class:"token function"},"url"),n("span",{class:"token punctuation"},"("),s("'http"),n("span",{class:"token punctuation"},":"),n("span",{class:"token operator"},"/"),n("span",{class:"token operator"},"/"),s("example"),n("span",{class:"token punctuation"},"."),s("org'"),n("span",{class:"token punctuation"},")"),s(`
'http`),n("span",{class:"token punctuation"},":"),n("span",{class:"token operator"},"/"),n("span",{class:"token operator"},"/"),s("example"),n("span",{class:"token punctuation"},"."),s("org'"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"url"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
'http`),n("span",{class:"token punctuation"},":"),n("span",{class:"token operator"},"/"),n("span",{class:"token operator"},"/"),s("example"),n("span",{class:"token punctuation"},"."),s("org' "),n("span",{class:"token operator"},"|"),n("span",{class:"token operator"},">"),s(` url

`),n("span",{class:"token comment"},"// equivalent to:"),s(`
'Uri'`),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"new"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),s("'http"),n("span",{class:"token punctuation"},":"),n("span",{class:"token operator"},"/"),n("span",{class:"token operator"},"/"),s("example"),n("span",{class:"token punctuation"},"."),s("org'"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token function"},"Constructor"),n("span",{class:"token punctuation"},"("),s("'"),n("span",{class:"token function"},"Uri"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"string"),n("span",{class:"token punctuation"},")"),s("'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),s("'http"),n("span",{class:"token punctuation"},":"),n("span",{class:"token operator"},"/"),n("span",{class:"token operator"},"/"),s("example"),n("span",{class:"token punctuation"},"."),s("org'"),n("span",{class:"token punctuation"},")"),s(`
`)])])],-1),Ks=n("h4",{id:"c-alias",tabindex:"-1"},[s("C() alias "),n("a",{class:"header-anchor",href:"#c-alias","aria-hidden":"true"},"#")],-1),Qs=n("p",null,[s("To reduce syntax noise when needing to create a lot of constructors you can use the much shorter alias "),n("code",null,"C"),s(" instead of "),n("code",null,"Constructor"),s(":")],-1),Js=n("div",{class:"language-js"},[n("pre",null,[n("code",null,[n("span",{class:"token constant"},"C"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'Uri(string)'"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"|"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token parameter"},"to"),s(),n("span",{class:"token operator"},"=>"),s(` url
`),n("span",{class:"token constant"},"C"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'Adder(double)'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(`
`)])])],-1),Zs=n("h4",{id:"createinstance",tabindex:"-1"},[s("createInstance "),n("a",{class:"header-anchor",href:"#createinstance","aria-hidden":"true"},"#")],-1),nt=n("p",null,[s("The "),n("code",null,"createInstance"),s(" is like "),n("code",null,"new"),s(" except it's used to create instances from a "),n("code",null,"Type"),s(" instead of its "),n("code",null,"string"),s(" Type Name:")],-1),st=n("div",{class:"language-js"},[n("pre",null,[n("code",null,[n("span",{class:"token keyword"},"typeof"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'Ints'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"createInstance"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"typeof"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'Adder'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"createInstance"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1.0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"typeof"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'KeyValuePair<string,int>'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"createInstance"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'A'"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
`)])])],-1),tt=n("h4",{id:"set",tabindex:"-1"},[s("set "),n("a",{class:"header-anchor",href:"#set","aria-hidden":"true"},"#")],-1),at=n("p",null,[s("Once you've created instance you can further populate it using the "),n("code",null,"set"),s(" method which will let you populate "),n("strong",null,"public properties"),s(" with a JS Object literal, performing any auto-mapping conversions as needed:")],-1),et=n("div",{class:"language-js"},[n("pre",null,[n("code",null,[n("span",{class:"token string"},"'Ints'"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"new"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"set"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token constant"},"C"),n("span",{class:"token operator"},":"),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token constant"},"D"),n("span",{class:"token operator"},":"),n("span",{class:"token number"},"4.0"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token function"},"Constructor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'Ints(int,int)'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"set"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token constant"},"C"),n("span",{class:"token operator"},":"),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token constant"},"D"),n("span",{class:"token operator"},":"),n("span",{class:"token number"},"4.0"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`)])])],-1),ot=n("p",null,[s("As "),n("code",null,"set"),s(" returns the instance, it can be used within a chained expression:")],-1),ct=n("div",{class:"language-js"},[n("pre",null,[n("code",null,[s("instance"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"set"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token constant"},"C"),n("span",{class:"token operator"},":"),n("span",{class:"token number"},"3"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"set"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token constant"},"D"),n("span",{class:"token operator"},":"),n("span",{class:"token number"},"4.0"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"call"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'GetTotal'"),n("span",{class:"token punctuation"},")"),s(`
`)])])],-1),lt=n("h3",{id:"calling-methods",tabindex:"-1"},[s("Calling Methods "),n("a",{class:"header-anchor",href:"#calling-methods","aria-hidden":"true"},"#")],-1),pt=n("p",null,[s("Use the "),n("code",null,"call"),s(" and "),n("code",null,"Function"),s(" APIs to call methods on .NET Types:")],-1),it=n("ul",null,[n("li",null,[n("code",null,"call"),s(" - invoke a method on an instance")]),n("li",null,[n("code",null,"Function"),s(" - create a Function "),n("strong",null,"delegate"),s(" that can invoke methods via normal method invocation")])],-1),rt=n("h4",{id:"call",tabindex:"-1"},[s("call "),n("a",{class:"header-anchor",href:"#call","aria-hidden":"true"},"#")],-1),ut=n("p",null,"In its most simplest form you can invoke an instance method that doesn't have any arguments using just its name:",-1),kt=n("div",{class:"language-js"},[n("pre",null,[n("code",null,[n("span",{class:"token string"},"'Ints'"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"new"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"|"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token parameter"},"to"),s(),n("span",{class:"token operator"},"=>"),s(` ints
`),n("span",{class:"token function"},"ints"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"call"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'GetMethod'"),n("span",{class:"token punctuation"},")"),s(`
`)])])],-1),dt=n("p",null,"Any arguments can be specified in an arguments list:",-1),ht=n("div",{class:"language-js"},[n("pre",null,[n("code",null,[n("span",{class:"token string"},"'Adder'"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"new"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1.0"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"2.0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"|"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token parameter"},"to"),s(),n("span",{class:"token operator"},"=>"),s(` adder3
`),n("span",{class:"token function"},"adder3"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"call"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'Add'"),n("span",{class:"token punctuation"},","),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"3.0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"//= 6.0"),s(`
`)])])],-1),gt=n("h4",{id:"method-resolution",tabindex:"-1"},[s("Method Resolution "),n("a",{class:"header-anchor",href:"#method-resolution","aria-hidden":"true"},"#")],-1),mt=n("p",null,[s("The same Resolution rules in "),n("strong",null,"Constructor Resolution"),s(" also applies when calling methods where any "),n("strong",null,"ambiguous methods"),s(" needs to be called with arguments containing the "),n("strong",null,"exact types"),s(" (as above), or you can specify the argument types of the method you want to call, in which case it will let you use the built-in Auto Mapping to call a method expecting a "),n("code",null,"double"),s(" with an "),n("code",null,"int"),s(" argument:")],-1),ft=n("div",{class:"language-js"},[n("pre",null,[n("code",null,[n("span",{class:"token function"},"adder3"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"call"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'Add(double)'"),n("span",{class:"token punctuation"},","),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
`)])])],-1),bt=n("h4",{id:"generic-methods",tabindex:"-1"},[s("Generic Methods "),n("a",{class:"header-anchor",href:"#generic-methods","aria-hidden":"true"},"#")],-1),yt=n("p",null,"You can call generic methods by specifying the Generic Type in the method name:",-1),_t=n("div",{class:"language-js"},[n("pre",null,[n("code",null,[n("span",{class:"token string"},"'Ints'"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"new"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"call"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'GenericMethod<string>'"),n("span",{class:"token punctuation"},","),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'A'"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
`)])])],-1),wt=n("p",null,[n("code",null,"call"),s(" only invokes instance methods, to call static methods you'll need to use "),n("code",null,"Function"),s(".")],-1),vt=n("h3",{id:"function",tabindex:"-1"},[s("Function "),n("a",{class:"header-anchor",href:"#function","aria-hidden":"true"},"#")],-1),St=n("p",null,[s("Function is a universal accessor for .NET Types where it can create a cached "),n("strong",null,"delegate"),s(" to access Instance, Static and Generic Static Types - Including Nested Types (aka Inner Classes), Instance, Static and Generic Methods of those Types as well as their Instance and Static Properties, Fields and Constants.")],-1),xt=n("p",null,[s("As a simple example we'll use "),n("code",null,"Function"),s(" to create a delegate to call .NET's "),n("code",null,"System.Console.WriteLine(string)"),s(" static method:")],-1),Tt=n("div",{class:"language-js"},[n("pre",null,[n("code",null,[n("span",{class:"token function"},"Function"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'Console.WriteLine(string)'"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"|"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token parameter"},"to"),s(),n("span",{class:"token operator"},"=>"),s(` writeln
`)])])],-1),Lt=n("p",null,"Which lets you call it like a regular Script method:",-1),At=n("div",{class:"language-js"},[n("pre",null,[n("code",null,[n("span",{class:"token function"},"writeln"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'A'"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token string"},"'A'"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"writeln"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token function"},"Function"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'Console.WriteLine(string)'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'A'"),n("span",{class:"token punctuation"},")"),s(`
`)])])],-1),Ct=n("p",null,[s("All Examples below uses classes defined in "),n("a",{href:"https://github.com/ServiceStack/sharpscript/blob/master/src/ScriptTypes.cs",target:"_blank",rel:"noopener noreferrer"},"ScriptTypes.cs"),s(".")],-1),It=n("h4",{id:"instance-methods",tabindex:"-1"},[s("Instance Methods "),n("a",{class:"header-anchor",href:"#instance-methods","aria-hidden":"true"},"#")],-1),Et=n("p",null,[n("code",null,"Function"),s(" create delegates that lets you genericize the different types of method invocations in .NET, including instance methods, generic methods and "),n("code",null,"void"),s(" Action methods on an "),n("strong",null,"instance"),s(":")],-1),Pt=n("div",{class:"language-js"},[n("pre",null,[n("code",null,[n("span",{class:"token string"},"'InstanceLog'"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"new"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'A'"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"|"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token parameter"},"to"),s(),n("span",{class:"token operator"},"=>"),s(` o
`),n("span",{class:"token function"},"Function"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'InstanceLog.Log'"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"|"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token parameter"},"to"),s(),n("span",{class:"token operator"},"=>"),s(" log              "),n("span",{class:"token comment"},"// instance void method"),s(`
`),n("span",{class:"token function"},"Function"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'InstanceLog.AllLogs'"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"|"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token parameter"},"to"),s(),n("span",{class:"token operator"},"=>"),s(" allLogs      "),n("span",{class:"token comment"},"// instance method"),s(`
`),n("span",{class:"token function"},"Function"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'InstanceLog.Log<int>'"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"|"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token parameter"},"to"),s(),n("span",{class:"token operator"},"=>"),s(" genericLog  "),n("span",{class:"token comment"},"// instance generic method"),s(`

o`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'B'"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),s("o"),n("span",{class:"token punctuation"},","),n("span",{class:"token string"},"'C'"),n("span",{class:"token punctuation"},")"),s(`
o`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"genericLog"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(`
o `),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token function"},"genericLog"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),s(`    
o`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"allLogs"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"|"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token parameter"},"to"),s(),n("span",{class:"token operator"},"=>"),s(` snapshotLogs
`)])])],-1),Nt=n("h4",{id:"static-type-methods",tabindex:"-1"},[s("Static Type Methods "),n("a",{class:"header-anchor",href:"#static-type-methods","aria-hidden":"true"},"#")],-1),Ft=n("p",null,[s("As well as calling static methods and static "),n("code",null,"void"),s(" Action methods on a "),n("strong",null,"static Type"),s(":")],-1),Rt=n("div",{class:"language-js"},[n("pre",null,[n("code",null,[n("span",{class:"token function"},"Function"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'StaticLog.Clear'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token function"},"Function"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'StaticLog.Log'"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"|"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token parameter"},"to"),s(),n("span",{class:"token operator"},"=>"),s(" log                "),n("span",{class:"token comment"},"// static void method"),s(`
`),n("span",{class:"token function"},"Function"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'StaticLog.AllLogs'"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"|"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token parameter"},"to"),s(),n("span",{class:"token operator"},"=>"),s(" allLogs        "),n("span",{class:"token comment"},"// static method"),s(`
`),n("span",{class:"token function"},"Function"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'StaticLog.Log<int>'"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"|"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token parameter"},"to"),s(),n("span",{class:"token operator"},"=>"),s(" genericLog    "),n("span",{class:"token comment"},"// static generic method"),s(`

`),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'A'"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token string"},"'B'"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token function"},"genericLog"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'C'"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token function"},"allLogs"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"|"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token parameter"},"to"),s(),n("span",{class:"token operator"},"=>"),s(` snapshotLogs
`)])])],-1),Mt=n("h4",{id:"generic-static-type-methods",tabindex:"-1"},[s("Generic Static Type Methods "),n("a",{class:"header-anchor",href:"#generic-static-type-methods","aria-hidden":"true"},"#")],-1),jt=n("p",null,[s("Including calling generic static methods on a "),n("strong",null,"generic static Type"),s(":")],-1),Dt=n("div",{class:"language-js"},[n("pre",null,[n("code",null,[n("span",{class:"token function"},"Function"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'GenericStaticLog<string>.Clear()'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token function"},"Function"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'GenericStaticLog<string>.Log(string)'"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"|"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token parameter"},"to"),s(),n("span",{class:"token operator"},"=>"),s(" log      "),n("span",{class:"token comment"},"// generic type static void method"),s(`
`),n("span",{class:"token function"},"Function"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'GenericStaticLog<string>.AllLogs'"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"|"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token parameter"},"to"),s(),n("span",{class:"token operator"},"=>"),s(" allLogs      "),n("span",{class:"token comment"},"// generic type static method"),s(`
`),n("span",{class:"token function"},"Function"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'GenericStaticLog<string>.Log<int>'"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"|"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token parameter"},"to"),s(),n("span",{class:"token operator"},"=>"),s(" genericLog  "),n("span",{class:"token comment"},"// generic type generic static method"),s(`

`),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'A'"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token string"},"'B'"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token function"},"genericLog"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'C'"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token function"},"allLogs"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"|"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token parameter"},"to"),s(),n("span",{class:"token operator"},"=>"),s(` snapshotLogs
`)])])],-1),qt=n("h4",{id:"f-alias",tabindex:"-1"},[s("F() alias "),n("a",{class:"header-anchor",href:"#f-alias","aria-hidden":"true"},"#")],-1),Ot=n("p",null,[s("You can use the shorter "),n("code",null,"F()"),s(" alias to reduce syntax noise when writing #Script that heavily interops directly with .NET Classes.")],-1),Ht=n("h4",{id:"instance-and-static-properties-fields-and-constants",tabindex:"-1"},[s("Instance and Static Properties, Fields and Constants "),n("a",{class:"header-anchor",href:"#instance-and-static-properties-fields-and-constants","aria-hidden":"true"},"#")],-1),Wt=n("p",null,"In addition to being able to create Delegates that genericize access to .NET Methods, it can also be used to create a delegate for accessing Instance and Static Properties, Fields and Constants including members of Inner Classes, e.g:",-1),Gt=n("p",null,"Each of the members of the following Type definition:",-1),Vt=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"StaticLog"),s(`
`),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"string")]),s(" Prop "),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token keyword"},"get"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"StaticLog.Prop"'),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" Field "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"StaticLog.Field"'),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" Const "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"StaticLog.Const"'),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"string")]),s(" InstanceProp "),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token keyword"},"get"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"StaticLog.InstanceProp"'),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" InstanceField "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"StaticLog.InstanceField"'),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Inner1"),s(`
    `),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"string")]),s(" Prop1 "),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token keyword"},"get"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"StaticLog.Inner1.Prop1"'),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" Field1 "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"StaticLog.Inner1.Field1"'),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" Const1 "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"StaticLog.Inner1.Const1"'),n("span",{class:"token punctuation"},";"),s(`

        `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"string")]),s(" InstanceProp1 "),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token keyword"},"get"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"StaticLog.Inner1.InstanceProp1"'),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" InstanceField1 "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"StaticLog.Inner1.InstanceField1"'),n("span",{class:"token punctuation"},";"),s(`

        `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Inner2"),s(`
        `),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"string")]),s(" Prop2 "),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token keyword"},"get"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"StaticLog.Inner1.Inner2.Prop2"'),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" Field2 "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"StaticLog.Inner1.Inner2.Field2"'),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" Const2 "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"StaticLog.Inner1.Inner2.Const2"'),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])])],-1),Bt=n("p",null,[s("Can be accessed the same way, where you can use "),n("code",null,"Function"),s(" to create a zero-argument delegate for static members that can be immediately invoked, or a 1 argument Delegate for instance members.")],-1),zt=n("p",null,[s("Examples below uses Function's shorter "),n("code",null,"F()"),s(" alias:")],-1),Ut=n("div",{class:"language-js"},[n("pre",null,[n("code",null,[n("span",{class:"token constant"},"F"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'StaticLog.Prop'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token constant"},"F"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'StaticLog.Field'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token constant"},"F"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'StaticLog.Const'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token constant"},"F"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'StaticLog.Inner1.Prop1'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token constant"},"F"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'StaticLog.Inner1.Field1'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token constant"},"F"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'StaticLog.Inner1.Const1'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token constant"},"F"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'StaticLog.Inner1.Inner2.Prop2'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token constant"},"F"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'StaticLog.Inner1.Inner2.Field2'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token constant"},"F"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'StaticLog.Inner1.Inner2.Const2'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token string"},"'StaticLog'"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"new"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"|"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token parameter"},"to"),s(),n("span",{class:"token operator"},"=>"),s(` o
`),n("span",{class:"token constant"},"F"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'StaticLog.InstanceProp'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),s("o"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token constant"},"F"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'StaticLog.InstanceField'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),s("o"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token string"},"'StaticLog.Inner1'"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"new"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"|"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token parameter"},"to"),s(),n("span",{class:"token operator"},"=>"),s(` o
`),n("span",{class:"token constant"},"F"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'StaticLog.Inner1.InstanceProp1'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),s("o"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token constant"},"F"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'StaticLog.Inner1.InstanceField1'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),s("o"),n("span",{class:"token punctuation"},")"),s(`
`)])])],-1),Yt=n("h2",{id:"script-code",tabindex:"-1"},[s("#Script Code "),n("a",{class:"header-anchor",href:"#script-code","aria-hidden":"true"},"#")],-1),$t=n("p",null,[s("The initial support for "),n("code",null,"code"),s(" statements was implemented using a "),n("a",{href:"https://sharpscript.net/docs/transformers#code-transformation",target:"_blank",rel:"noopener noreferrer"},"simple pre-processor"),s(" that wrapped each line within a template expression - a technique inspired by CoffeeScript who used input source code transformation to reduce implementation burden.")],-1),Xt=n("p",null,[s("However the naivety of this approach showed itself when implementing smarter "),n("a",{href:"https://sharpscript.net/docs/blocks",target:"_blank",rel:"noopener noreferrer"},"Script Blocks"),s(" whose body you'd want precise control over depending on the type of functionality it provides and the context from where it's used.")],-1),Kt=n("p",null,[s("For the new "),n("a",{href:"https://sharpscript.net/docs/blocks#csv",target:"_blank",rel:"noopener noreferrer"},"CSV"),s(" and "),n("a",{href:"https://sharpscript.net/docs/blocks#keyvalues",target:"_blank",rel:"noopener noreferrer"},"keyvalues"),s(" Script Blocks used in "),n("a",{href:"https://sharpscript.net/usecases/live-documents",target:"_blank",rel:"noopener noreferrer"},"Live Documents"),s(" you'll always want to ensure the body is captured in unstructured free-text, e.g:")],-1),Qt=n("p",null,[n("a",{href:"https://sharpscript.net/docs/blocks#csv",target:"_blank",rel:"noopener noreferrer"},[n("img",{src:"https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/sharpscript/csv-block.png",alt:""})])],-1),Jt=n("div",null,[n("div",{class:"language-"},[n("pre",{"v-pre":""},[n("code",null,`    {{#keyvalues monthlyRevenues ':'}}
        Salary:         4000
        App Royalties:  200
    {{/keyvalues}}
`)])])],-1),Zt=n("p",null,[s("Likewise when used in "),n("code",null,"code"),s(" statements:")],-1),na=n("div",{class:"language-"},[n("pre",null,[n("code",null,`    #keyvalues monthlyExpenses
        Rent            1000
        Internet        50
        Mobile          50
        Food            400
        Misc            200
    /keyvalues
`)])],-1),sa=n("p",null,[s("But for blocks like "),n("a",{href:"https://sharpscript.net/docs/blocks#capture",target:"_blank",rel:"noopener noreferrer"},"capture"),s(" which captures dynamically generated output, it's preferred the body be expressed using templates:")],-1),ta=n("div",null,[n("div",{class:"language-hbs"},[n("pre",{"v-pre":""},[n("code",null,[n("span",{class:"token delimiter punctuation"},"{{"),n("span",{class:"token block keyword"},"#capture"),s(),n("span",{class:"token variable"},"out"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"ul"),n("span",{class:"token punctuation"},">"),s(`
    `),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"#"),n("span",{class:"token variable"},"each"),s(),n("span",{class:"token variable"},"range"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"li"),n("span",{class:"token punctuation"},">"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token variable"},"it"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"li"),n("span",{class:"token punctuation"},">"),s(`
    `),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"each"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"ul"),n("span",{class:"token punctuation"},">"),s(`
`),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"capture"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),s(`
`)])])])],-1),aa=n("p",null,[s("Even when used from within "),n("code",null,"code"),s(" statements:")],-1),ea=n("div",null,[n("div",{class:"language-hbs"},[n("pre",{"v-pre":""},[n("code",null,[n("span",{class:"token block keyword"},"#capture"),s(),n("span",{class:"token variable"},"out"),s(`
    `),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"ul"),n("span",{class:"token punctuation"},">"),s(`
    `),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"#"),n("span",{class:"token variable"},"each"),s(),n("span",{class:"token variable"},"range"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"li"),n("span",{class:"token punctuation"},">"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token variable"},"it"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"li"),n("span",{class:"token punctuation"},">"),s(`
    `),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"each"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"ul"),n("span",{class:"token punctuation"},">"),s(`
`),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"capture"),s(`
`)])])])],-1),oa=n("p",null,[s("Whilst the new "),n("a",{href:"https://sharpscript.net/docs/blocks#function",target:"_blank",rel:"noopener noreferrer"},"function blocks"),s(" body should always be defined using "),n("code",null,"code"),s(" statement block:")],-1),ca=n("div",{class:"language-hbs"},[n("pre",null,[n("code",null,[n("span",{class:"token block keyword"},"#function"),s(),n("span",{class:"token variable"},"fib"),n("span",{class:"token punctuation"},"("),n("span",{class:"token variable"},"num"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"#"),n("span",{class:"token variable"},"if"),s(),n("span",{class:"token variable"},"num"),s(),n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},"="),s(),n("span",{class:"token number"},"1"),s(`
        `),n("span",{class:"token variable"},"return"),n("span",{class:"token punctuation"},"("),n("span",{class:"token variable"},"num"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"if"),s(`
    `),n("span",{class:"token variable"},"return"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token variable"},"fib"),n("span",{class:"token punctuation"},"("),n("span",{class:"token variable"},"num-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"+"),s(),n("span",{class:"token variable"},"fib"),n("span",{class:"token punctuation"},"("),n("span",{class:"token variable"},"num-"),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"function"),s(`
`)])])],-1),la=n("p",null,'Likewise when defined in "template" mode:',-1),pa=n("div",null,[n("div",{class:"language-hbs"},[n("pre",{"v-pre":""},[n("code",null,[n("span",{class:"token delimiter punctuation"},"{{"),n("span",{class:"token block keyword"},"#function"),s(),n("span",{class:"token variable"},"fib"),n("span",{class:"token punctuation"},"("),n("span",{class:"token variable"},"num"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"#"),n("span",{class:"token variable"},"if"),s(),n("span",{class:"token variable"},"num"),s(),n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},"="),s(),n("span",{class:"token number"},"1"),s(`
        `),n("span",{class:"token variable"},"return"),n("span",{class:"token punctuation"},"("),n("span",{class:"token variable"},"num"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"if"),s(`
    `),n("span",{class:"token variable"},"return"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token variable"},"fib"),n("span",{class:"token punctuation"},"("),n("span",{class:"token variable"},"num-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"+"),s(),n("span",{class:"token variable"},"fib"),n("span",{class:"token punctuation"},"("),n("span",{class:"token variable"},"num-"),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"function"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),s(`
`)])])])],-1),ia=n("p",null,"None of this was possible with our previous naive implementation. In Razor terms, this is akin to trying to support using Tag libraries from within a C# Statement blocks:",-1),ra=n("div",{class:"language-xml"},[n("pre",null,[n("code",null,[s(`@{
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("environment")]),s(),n("span",{class:"token attr-name"},"names"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("Staging,Production"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s(`
        `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("strong")]),n("span",{class:"token punctuation"},">")]),s("HostingEnvironment.EnvironmentName is Staging or Production"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("strong")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("environment")]),n("span",{class:"token punctuation"},">")]),s(`    
}
`)])])],-1),ua=n("p",null,'The easiest solution would be to not support it and only allow script blocks when in "Template Mode".',-1),ka=n("p",null,[s("But as "),n("a",{href:"https://sharpscript.net/docs/blocks",target:"_blank",rel:"noopener noreferrer"},"Script Blocks"),s(" are a powerful tool for defining nearly any kind of DSL and "),n("code",null,"code"),s(" statement blocks being preferred for all other use-cases that doesn't involve generating text output, we decided to implement it properly, with "),n("code",null,"code"),s(" statement blocks being implemented as a first-class language and script blocks being able to specify how their "),n("a",{href:"https://sharpscript.net/docs/blocks#user-content-script-block-body",target:"_blank",rel:"noopener noreferrer"},"body should be parsed"),s(".")],-1),da=n("p",null,[s("As a first-class language we can also offer the same language services as "),n("code",null,"#Script"),s(" templates:")],-1),ha=n("h3",{id:"executing-script-code-in-net",tabindex:"-1"},[s("Executing #Script Code in .NET "),n("a",{class:"header-anchor",href:"#executing-script-code-in-net","aria-hidden":"true"},"#")],-1),ga=n("p",null,[s("To capture rendered output from "),n("code",null,"code"),s(" blocks you can use the new "),n("code",null,"RenderCode*"),s(" APIs:")],-1),ma=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token comment"},"// render code statements"),s(`
`),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" output "),n("span",{class:"token operator"},"="),s(" context"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"RenderCode"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},`"now |> dateFormat('HH:mm:ss')"`),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(` 

`),n("span",{class:"token comment"},"// async"),s(`
`),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" output "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"await"),s(" context"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"RenderCodeAsync"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},`"now |> dateFormat('HH:mm:ss')"`),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(` 
`)])])],-1),fa=n("p",null,[s("These APIs match the high-level APIs for rendering normal "),n("code",null,"#Script"),s(":")],-1),ba=n("div",null,[n("div",{class:"language-csharp"},[n("pre",{"v-pre":""},[n("code",null,[n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" output "),n("span",{class:"token operator"},"="),s(" context"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"RenderScript"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},`"{{ now |> dateFormat('HH:mm:ss') }}"`),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(` 
`),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" output "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"await"),s(" context"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"RenderScriptAsync"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},`"{{ now |> dateFormat('HH:mm:ss') }}"`),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])])])],-1),ya=n("h3",{id:"finer-grained-control",tabindex:"-1"},[s("Finer grained control "),n("a",{class:"header-anchor",href:"#finer-grained-control","aria-hidden":"true"},"#")],-1),_a=n("p",null,[s("The high-level APIs above wraps the finer-grained functionality below which works by rendering a "),n("code",null,"SharpPage"),s(" configured with the "),n("code",null,"code"),s(" language in a "),n("code",null,"PageResult"),s(" that all languages use:")],-1),wa=n("div",null,[n("div",{class:"language-csharp"},[n("pre",{"v-pre":""},[n("code",null,[n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" context "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"ScriptContext"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Init"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" dynamicPage "),n("span",{class:"token operator"},"="),s(" context"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"CodeSharpPage"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},`"now |> dateFormat('HH:mm:ss')"`),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s("           "),n("span",{class:"token comment"},"// render code"),s(`
`),n("span",{class:"token comment"},`//var dynamicPage = context.SharpScriptPage("{{ now |> dateFormat('HH:mm:ss') }}"); // render #Script`),s(`
`),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" output "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"PageResult"),n("span",{class:"token punctuation"},"("),s("dynamicPage"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"RenderScript"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"//async"),s(`
`),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" output "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"await"),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"PageResult"),n("span",{class:"token punctuation"},"("),s("dynamicPage"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"RenderScriptAsync"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])])])],-1),va=n("p",null,[s("To instead capture the return value of a script block you can use the new "),n("code",null,"EvaluateCode"),s(" APIs, e.g:")],-1),Sa=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" result "),n("span",{class:"token operator"},"="),s(" context"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"EvaluateCode"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"return (1 + 1)"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"//= 2"),s(`
`)])])],-1),xa=n("p",null,[s("The generic overloads below utilizes ServiceStack's "),n("a",{href:"/auto-mapping.html"},"Auto Mapping utils"),s(" to convert the return value into your preferred type, e.g:")],-1),Ta=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"double")]),s(" result "),n("span",{class:"token operator"},"="),s(" context"),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-method"},[n("span",{class:"token function"},"EvaluateCode"),n("span",{class:"token generic class-name"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token keyword"},"double"),n("span",{class:"token punctuation"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"return (1 + 1)"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"//= 2.0"),s(`
`),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" result "),n("span",{class:"token operator"},"="),s(" context"),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-method"},[n("span",{class:"token function"},"EvaluateCode"),n("span",{class:"token generic class-name"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token keyword"},"string"),n("span",{class:"token punctuation"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"return (1 + 1)"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},'//= "2"'),s(`
`)])])],-1),La=n("p",null,"Which can also be used for more powerful conversions like converting an Object Dictionary into your preferred POCO:",-1),Aa=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" result "),n("span",{class:"token operator"},"="),s(" context"),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-method"},[n("span",{class:"token function"},"EvaluateCode"),n("span",{class:"token generic class-name"},[n("span",{class:"token punctuation"},"<"),s("Customer"),n("span",{class:"token punctuation"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"`select * from customer where id=@id` |> dbSingle({id}) |>return"'),s(`
    `),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"ObjectDictionary"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"id"'),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])])],-1),Ca=n("h3",{id:"code-scripts",tabindex:"-1"},[s("Code Scripts "),n("a",{class:"header-anchor",href:"#code-scripts","aria-hidden":"true"},"#")],-1),Ia=n("p",null,[s("The same functionality in Sharp Scripts is also available in #Script Code, except instead of using the "),n("code",null,"*.ss"),s(" file extension for executing "),n("code",null,"#Script"),s(" you'd use the "),n("code",null,"*.sc"),s(" file extension which will allow you to use the web and app dotnet tools to watch or run code scripts:")],-1),Ea=n("pre",null,[n("code",null,`$ web run code.sc
$ web watch code.sc
`)],-1),Pa=n("h3",{id:"watched-code-scripts",tabindex:"-1"},[s("Watched code scripts "),n("a",{class:"header-anchor",href:"#watched-code-scripts","aria-hidden":"true"},"#")],-1),Na=n("p",null,[s("Here's a quick demo showcasing the same functionality in "),n("a",{href:"https://sharpscript.net/docs/sharp-scripts",target:"_blank",rel:"noopener noreferrer"},"Sharp Scripts"),s(" is also available in "),n("code",null,"*.sc"),s(" scripts which provides instant feedback whilst you develop in real-time:")],-1),Fa=n("blockquote",null,[n("p",null,[s("YouTube: "),n("a",{href:"https://youtu.be/TQPOZ0kVpw4",target:"_blank",rel:"noopener noreferrer"},"youtu.be/TQPOZ0kVpw4")])],-1),Ra=n("p",null,[n("a",{href:"https://youtu.be/TQPOZ0kVpw4",target:"_blank",rel:"noopener noreferrer"},[n("img",{src:"https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/sharpscript/code-sc.gif",alt:""})])],-1),Ma=n("p",null,"When you've re-designed your library to support multiple languages, the next one becomes much easier to add \u{1F603} But still being mindful of library size, we'd only want to include support for small and powerful languages - and there's few with a better power to weight ratio than Lisp!",-1),ja=n("h2",{id:"introducing-script-lisp",tabindex:"-1"},[s("Introducing #Script Lisp! "),n("a",{class:"header-anchor",href:"#introducing-script-lisp","aria-hidden":"true"},"#")],-1),Da=n("p",null,[n("code",null,"#Script"),s(" is itself designed as a small, expressive and wrist-friendly dynamic scripting language that for maximum familiarity is modelled after the world's most popular and ubiquitous scripting Language, JavaScript. Its minimal syntax was inspired by other small but powerful languages which heavily utilizes functions instead of adopting a larger language grammar defining different bespoke syntax for language constructs.")],-1),qa=n("p",null,[s("Small Languages like Smalltalk, despite being one of the most influential languages in history, is famous for its minimal "),n("a",{href:"https://en.wikipedia.org/wiki/Smalltalk#Syntax",target:"_blank",rel:"noopener noreferrer"},"syntax that fits on a post card"),s(". A language with arguably better power to size ratio is "),n("a",{href:"https://en.wikipedia.org/wiki/Lisp_%28programming_language%29",target:"_blank",rel:"noopener noreferrer"},"Lisp"),s(" which the inventor of Smalltalk, Alan Kay has credited it as being the "),n("a",{href:"https://en.wikiquote.org/wiki/Lisp_%28programming_language%29",target:"_blank",rel:"noopener noreferrer"},"greatest single programming language ever designed"),s(" after realizing:")],-1),Oa=n("blockquote",null,[n("p",null,[s("\u201Cthe half page of code on the bottom of page 13\u2026 was Lisp in itself. These were "),n("a",{href:"http://www.michaelnielsen.org/ddi/lisp-as-the-maxwells-equations-of-software/",target:"_blank",rel:"noopener noreferrer"},"\u201CMaxwell\u2019s Equations of Software!\u201D")])],-1),Ha=n("p",null,[n("a",{href:"http://languagelog.ldc.upenn.edu/myl/llog/jmc.pdf",target:"_blank",rel:"noopener noreferrer"},"Lisp's unprecedented elegance and simplicity"),s(" spawned a "),n("a",{href:"https://en.wikipedia.org/wiki/List_of_Lisp-family_programming_languages",target:"_blank",rel:"noopener noreferrer"},"myriad of dialects"),s(", some noteworthy implementations illustrating the beauty of its small size and expressive power is "),n("a",{href:"http://norvig.com/lispy.html",target:"_blank",rel:"noopener noreferrer"},"lispy"),s(" by by "),n("a",{href:"http://norvig.com",target:"_blank",rel:"noopener noreferrer"},"Peter Norvig"),s(" (Director of Google Research) that implements a Lisp interpreter in just "),n("strong",null,"117 lines of Python 3 code"),s(" (inc. a REPL).")],-1),Wa=n("p",null,[s("Another compact dialect is "),n("a",{href:"https://github.com/zick/ZickStandardLisp",target:"_blank",rel:"noopener noreferrer"},"Zick Standard Lisp"),s(" which "),n("a",{href:"https://github.com/zick",target:"_blank",rel:"noopener noreferrer"},"@zick"),s(" has implemented in "),n("strong",null,"42 different languages"),s(" including a "),n("a",{href:"https://github.com/zick/ZickStandardLisp/blob/master/lisp.lsp",target:"_blank",rel:"noopener noreferrer"},"recursive Lisp evaluator in Lisp"),s(" implemented in only "),n("strong",null,"66 lines of code"),s(".")],-1),Ga=n("p",null,[s("A more complete Lisp implementation in C# is the elegant "),n("a",{href:"https://github.com/nukata/lisp-in-cs",target:"_blank",rel:"noopener noreferrer"},"Nukata Lisp"),s(" by "),n("a",{href:"https://github.com/nukata",target:"_blank",rel:"noopener noreferrer"},"SUZUKI Hisao"),s(" which is a Common Lisp-like "),n("a",{href:"https://stackoverflow.com/q/4578574/85785",target:"_blank",rel:"noopener noreferrer"},"Lisp-1"),s(" dialect with tail call optimization and partially hygienic macros, although has some notable limitations including a "),n("a",{href:"https://github.com/nukata/lisp-in-cs/blob/d4258ec4b5681b0854a0d464b708df9ae26bbe3c/lisp.cs#L1216-L1391",target:"_blank",rel:"noopener noreferrer"},"small standard library"),s(", only uses the "),n("code",null,"double"),s(" numeric type and doesn't contain .NET Scripting support.")],-1),Va=n("h3",{id:"script-lisp-overview",tabindex:"-1"},[s("Script Lisp Overview "),n("a",{class:"header-anchor",href:"#script-lisp-overview","aria-hidden":"true"},"#")],-1),Ba=n("p",null,[n("a",{href:"https://github.com/ServiceStack/ServiceStack/blob/master/src/ServiceStack.Common/Script/ScriptLanguage.Lisp.cs",target:"_blank",rel:"noopener noreferrer"},"ScriptLisp"),s(" is an enhanced version of "),n("a",{href:"https://github.com/nukata/lisp-in-cs",target:"_blank",rel:"noopener noreferrer"},"Nukata Lisp"),s(" with a number of new features that reuses "),n("code",null,"#Script"),s(" existing scripting capabilities to provide seamless integration with both the rest of "),n("code",null,"#Script"),s(" (see "),n("a",{href:"http://localhost:5000/docs/syntax#language-blocks-and-expressions",target:"_blank",rel:"noopener noreferrer"},"Language Blocks an Expressions"),s(") and .NET including "),n("a",{href:"https://sharpscript.net/docs/script-net",target:"_blank",rel:"noopener noreferrer"},"Scripting of .NET Types"),s(", support for all .NET numeric types and access to its comprehensive library of over "),n("strong",null,"1000+"),s(),n("a",{href:"https://sharpscript.net/docs/methods",target:"_blank",rel:"noopener noreferrer"},"Script Methods"),s(" - optimally designed for accessing .NET functionality from a dynamic language.")],-1),za=n("p",null,[s("To improve compatibility with existing Common Lisp source code it also implements most of the "),n("a",{href:"http://jtra.cz/stuff/lisp/sclr/",target:"_blank",rel:"noopener noreferrer"},"Simplified Common Lisp Reference"),s(" as well as all missing functions required to implement C# LINQ 101 Examples in Lisp:")],-1),Ua=n("div",{class:"text-center my-3"},[n("a",{href:"https://sharpscript.net/linq/restriction-operators?lang=lisp",class:"btn btn-outline-primary btn-lg"},"Lisp LINQ Examples")],-1),Ya=n("p",null,[s("To improve readability and familiarity it also adopts a number of "),n("strong",null,"Clojure"),s(" syntax for defining a "),n("a",{href:"https://clojure.org/guides/learn/syntax#_literal_collections",target:"_blank",rel:"noopener noreferrer"},"data list and map"),s(" literals, "),n("a",{href:"https://clojure.org/guides/learn/functions#_anonymous_function_syntax",target:"_blank",rel:"noopener noreferrer"},"anonymous functions"),s(", syntax in "),n("a",{href:"https://clojure.org/guides/learn/functions#_java_interop",target:"_blank",rel:"noopener noreferrer"},"Java Interop"),s(" for .NET Interop, "),n("a",{href:"https://clojure.org/guides/learn/hashed_colls#_field_accessors",target:"_blank",rel:"noopener noreferrer"},"keyword syntax for indexing collections"),s(" and accessing index accessors and Clojure's popular shorter aliases for "),n("code",null,"fn"),s(", "),n("code",null,"def"),s(", "),n("code",null,"defn"),s(" - improving source-code compatibility with Clojure.")],-1),$a=n("h3",{id:"lisp-repl",tabindex:"-1"},[s("Lisp REPL "),n("a",{class:"header-anchor",href:"#lisp-repl","aria-hidden":"true"},"#")],-1),Xa=n("p",null,[s("In addition to being a 1st class language option in "),n("code",null,"#Script"),s(", Lisp's dynamism and extensibility makes it particularly well suited for explanatory programming whose access via a REPL is now built into the latest "),n("a",{href:"/dotnet-tool.html"},"x"),s(" and "),n("a",{href:"/netcore-windows-desktop.html"},"app"),s(" dotnet tools which can be quickly installed in any Windows, macOS or Linux OS (with "),n("a",{href:"https://dotnet.microsoft.com/download/dotnet-core/3.0",target:"_blank",rel:"noopener noreferrer"},".NET Core"),s(") with:")],-1),Ka=n("pre",null,[n("code",null,`$ dotnet tool install -g web
`)],-1),Qa=n("p",null,"Or if you have a previous version installed, update to the latest version with:",-1),Ja=n("pre",null,[n("code",null,`$ dotnet tool update -g web
`)],-1),Za=n("p",null,"Where you'll then be able to bring up an instant Lisp REPL with:",-1),ne=n("pre",null,[n("code",null,`$ web lisp
`)],-1),se=n("p",null,[s("The quick demo below shows the kind of exploratory programming available where you can query the "),n("code",null,"scriptMethods"),s(" available, query an objects "),n("code",null,"props"),s(", query the Lisp interpreter's global "),n("code",null,"symbols"),s(" table containing all its global state including all defined lisp functions, macros and variables:")],-1),te=n("blockquote",null,[n("p",null,[s("YouTube: "),n("a",{href:"https://youtu.be/RR7yk6ReNnQ",target:"_blank",rel:"noopener noreferrer"},"youtu.be/RR7yk6ReNnQ")])],-1),ae=n("p",null,[n("a",{href:"https://youtu.be/RR7yk6ReNnQ",target:"_blank",rel:"noopener noreferrer"},[n("img",{src:"https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/sharpscript/web-lisp.gif",alt:""})])],-1),ee=n("h3",{id:"annotated-repl-walk-through",tabindex:"-1"},[s("Annotated REPL Walk through "),n("a",{class:"header-anchor",href:"#annotated-repl-walk-through","aria-hidden":"true"},"#")],-1),oe=n("p",null,"Here's an annotated version of the demo below which explains what each of the different expressions is doing.",-1),ce=n("p",null,[s("Just like "),n("a",{href:"https://sharpscript.net/docs/sharp-scripts",target:"_blank",rel:"noopener noreferrer"},"Sharp Scripts"),s(" and "),n("a",{href:"https://sharpscript.net/docs/sharp-apps",target:"_blank",rel:"noopener noreferrer"},"Sharp Apps"),s(" the Lisp REPL runs within the "),n("a",{href:"https://sharpscript.net/docs/sharp-pages",target:"_blank",rel:"noopener noreferrer"},"#Script Pages"),s(" ScriptContext "),n("a",{href:"https://sharpscript.net/docs/sandbox",target:"_blank",rel:"noopener noreferrer"},"sandbox"),s(" that when run from a Sharp App folder, starts a .NET Core App Server that simulates a fully configured .NET Core App. In this case it's running in the "),n("a",{href:"https://github.com/sharp-apps/redis",target:"_blank",rel:"noopener noreferrer"},"redis Sharp App"),s(" directory where it was able to access its static web assets as well as its redis-server connection configured in its "),n("a",{href:"https://github.com/sharp-apps/redis/blob/master/app.settings",target:"_blank",rel:"noopener noreferrer"},"app.settings"),s(".")],-1),le=n("div",{class:"language-lisp"},[n("pre",null,[n("code",null,[n("span",{class:"token comment"},"; quick lisp test!"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"+"),s(),n("span",{class:"token number"},"1"),s(),n("span",{class:"token number"},"2"),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; List of ScriptMethodInfo that the ScriptContext running this Lisp Interpreter has access to"),s(`
scriptMethods

`),n("span",{class:"token comment"},"; first script method"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token lisp-property property"},":0"),s(" scriptMethods"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; show public properties of ScriptMethodInfo "),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"props"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token lisp-property property"},":0"),s(" scriptMethods"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; show 1 property per line"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"joinln"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"props"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token lisp-property property"},":0"),s(" scriptMethods"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; show both Property Type and Name"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"joinln"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"propTypes"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token lisp-property property"},":0"),s(" scriptMethods"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; view the Names of all avaialble script methods"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"joinln"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"map"),s(" .Name scriptMethods"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; view all script methods starting with 'a'"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"globln"),s(),n("span",{class:"token string"},'"a*"'),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"map"),s(" .Name scriptMethods"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; view all script methods starting with 'env'"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"globln"),s(),n("span",{class:"token string"},'"env*"'),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"map"),s(" .Name scriptMethods"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; print environment info about this machine seperated by spaces"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"printlns"),s(" envOSVersion envMachineName envFrameworkDescription envLogicalDrives"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; expand logical drives"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"printlns"),s(" envOSVersion envMachineName envFrameworkDescription "),n("span",{class:"token string"},[s('"'),n("span",{class:"token argument"},"-"),s(' drives:"')]),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"join"),s(" envLogicalDrives "),n("span",{class:"token string"},'" "'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; view all current global symbols defined in this Lisp interpreter"),s(`
symbols

`),n("span",{class:"token comment"},"; view all symbols starting with 'c'"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"globln"),s(),n("span",{class:"token string"},'"c*"'),s(" symbols"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; see how many symbols are defined in this interpreter"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"count"),s(" symbols"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; see how many script methods there are available"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"count"),s(" scriptMethods"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; view the method signature for all script methods starting with 'all'"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"globln"),s(),n("span",{class:"token string"},'"all*"'),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"map"),s(" .Signature scriptMethods"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; count all files accessible from the configured ScriptContext"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"count"),s(" allFiles"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; view the public properties of the first IVirtualFile"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"props"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token lisp-property property"},":0"),s(" allFiles"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; display the VirtualPath of all available files"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"joinln"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"map"),s(" .VirtualPath allFiles"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; display the method signature for all script methods starting with 'findFiles'"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"globln"),s(),n("span",{class:"token string"},'"findFiles*"'),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"map"),s(" .Signature scriptMethods"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; see how many .html files are available to this App"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"count"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"findFiles"),s(),n("span",{class:"token string"},'"*.html"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; see how many .js files are available to this App"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"count"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"findFiles"),s(),n("span",{class:"token string"},'"*.js"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; show the VirtualPath of all .html files"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"joinln"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"map"),s(" .VirtualPath "),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"findFiles"),s(),n("span",{class:"token string"},'"*.html"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; view the VirtualPath's of the 1st and 2nd .html files"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token lisp-property property"},":0"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"map"),s(" .VirtualPath "),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"findFiles"),s(),n("span",{class:"token string"},'"*.html"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token lisp-property property"},":1"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"map"),s(" .VirtualPath "),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"findFiles"),s(),n("span",{class:"token string"},'"*.html"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; view the text file contents of the 1st and 2nd .html files"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"fileTextContents"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token lisp-property property"},":0"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"map"),s(" .VirtualPath "),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"findFiles"),s(),n("span",{class:"token string"},'"*.html"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"fileTextContents"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token lisp-property property"},":1"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"map"),s(" .VirtualPath "),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"findFiles"),s(),n("span",{class:"token string"},'"*.html"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; display the method signatures of all script methods starting with 'redis'"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"globln"),s(),n("span",{class:"token string"},'"redis*"'),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"map"),s(" .Signature scriptMethods"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; search for all Redis Keys starting with 'urn:' in the redis-server instances this App is configured with"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"redisSearchKeys"),s(),n("span",{class:"token string"},'"urn:*"'),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; display the first redis search entry"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token lisp-property property"},":0"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"redisSearchKeys"),s(),n("span",{class:"token string"},'"urn:*"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; display the key names of all redis keys starting with 'urn:'"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"joinln"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"map"),s(),n("span",{class:"token lisp-property property"},":id"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"redisSearchKeys"),s(),n("span",{class:"token string"},'"urn:*"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; find out the redis-server data type of the 'urn:tags' key"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"redisCall"),s(),n("span",{class:"token string"},[s('"'),n("span",{class:"token argument"},"TYPE"),s(' urn:tags"')]),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; view all tags in the 'urn:tags' sorted set"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"redisCall"),s(),n("span",{class:"token string"},[s('"'),n("span",{class:"token argument"},"ZRANGE"),s(' urn:tags 0 -1"')]),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; view the string contents of the 'urn:question:1' key"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"redisCall"),s(),n("span",{class:"token string"},[s('"'),n("span",{class:"token argument"},"GET"),s(' urn:question:1"')]),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; parse the json contents of question 1 and display its tag names"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token lisp-property property"},":Tags"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"parseJson"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"redisCall"),s(),n("span",{class:"token string"},[s('"'),n("span",{class:"token argument"},"GET"),s(' urn:question:1"')]),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; extract the 2nd tag of question 1"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token lisp-property property"},":1"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token lisp-property property"},":Tags"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"parseJson"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"redisCall"),s(),n("span",{class:"token string"},[s('"'),n("span",{class:"token argument"},"GET"),s(' urn:question:1"')]),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; clear the Console screen"),s(`
clear

`),n("span",{class:"token comment"},"; exit the Lisp REPL"),s(`
quit
`)])])],-1),pe=n("h4",{id:"enable-features-and-access-resources-with-app-settings",tabindex:"-1"},[s("Enable features and access resources with app.settings "),n("a",{class:"header-anchor",href:"#enable-features-and-access-resources-with-app-settings","aria-hidden":"true"},"#")],-1),ie=n("p",null,[s("You can configure the Lisp REPL with any of the resources and features that "),n("a",{href:"https://sharpscript.net/docs/sharp-apps",target:"_blank",rel:"noopener noreferrer"},"Sharp Apps"),s(" and "),n("a",{href:"https://sharpscript.net/docs/gist-desktop-apps",target:"_blank",rel:"noopener noreferrer"},"Gist Desktop Apps"),s(" have access to, by creating a plain text "),n("code",null,"app.settings"),s(" file with all the features and resources you want the Lisp REPL to have access to, e.g. this "),n("a",{href:"https://sharpscript.net/docs/sharp-apps#pure-cloud-apps",target:"_blank",rel:"noopener noreferrer"},"Pure Cloud App app.settings"),s(" allows the Lisp REPL to use "),n("a",{href:"https://sharpscript.net/docs/db-scripts",target:"_blank",rel:"noopener noreferrer"},"Database Scripts"),s(" against a AWS PostgreSQL RDS server and query remote "),n("a",{href:"/virtual-file-system.html"},"S3 Virtual Files"),s(" using "),n("a",{href:"https://sharpscript.net/docs/protected-scripts#virtual-file-system-apis",target:"_blank",rel:"noopener noreferrer"},"Virtual File System APIs"),s(":")],-1),re=n("pre",null,[n("code",null,`# Note: values prefixed with '$' are resolved from Environment Variables
name AWS S3 PostgreSQL Web App
db postgres
db.connection $AWS_RDS_POSTGRES
files s3
files.config {AccessKey:$AWS_S3_ACCESS_KEY,SecretKey:$AWS_S3_SECRET_KEY,Region:us-east-1,Bucket:rockwind}
`)],-1),ue=n("p",null,[s("See the "),n("a",{href:"https://sharpscript.net/docs/sharp-apps#registering-servicestack-plugins",target:"_blank",rel:"noopener noreferrer"},"plugins app.settings"),s(" for examples of how to load and configure "),n("a",{href:"/plugins.html"},"ServiceStack Plugins"),s(".")],-1),ke=n("h3",{id:"lisp-repl-tcp-server",tabindex:"-1"},[s("Lisp REPL TCP Server "),n("a",{class:"header-anchor",href:"#lisp-repl-tcp-server","aria-hidden":"true"},"#")],-1),de=n("p",null,[s("In addition to launching a Lisp REPL from the Console above, you can also open a Lisp REPL into any ServiceStack App configured with the "),n("code",null,"LispReplTcpServer"),s(" ServiceStack plugin. This effectively opens a "),n("strong",null,'"programmable gateway"'),s(" into any ServiceStack App where it's able to perform live queries, access IOC dependencies, invoke internal Server functions and query the state of a running Server which like the "),n("a",{href:"/debugging.html#debug-inspector"},"Debug Inspector"),s(" can provide invaluable insight when diagnosing issues on a remote server.")],-1),he=n("p",null,[s("To see it in action we'll enable it one of our production Apps "),n("a",{href:"https://techstacks.io",target:"_blank",rel:"noopener noreferrer"},"techstacks.io"),s(" which as it's a Vuetify SPA App is only configured with an empty "),n("code",null,"SharpPagesFeature"),s(" as it doesn't use any server-side scripting features.")],-1),ge=n("p",null,[s("We'll enable it in "),n("code",null,"DebugMode"),s(" where we can enable by setting "),n("code",null,"DebugMode"),s(" in our App's "),n("code",null,"appsettings.Production.json"),s(" which will launch a TCP Socket Server which by default is configured to listen to the "),n("strong",null,"loopback"),s(" IP on port "),n("code",null,"5005"),s(".")],-1),me=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("Config"),n("span",{class:"token punctuation"},"."),s("DebugMode"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"{"),s(`
    Plugins`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"LispReplTcpServer"),s(),n("span",{class:"token punctuation"},"{"),s(`
        ScriptMethods `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"DbScripts"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
        ScriptNamespaces `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"nameof"),n("span",{class:"token punctuation"},"("),s("TechStacks"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
            `),n("span",{class:"token interpolation-string"},[n("span",{class:"token string"},'$"'),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},[n("span",{class:"token keyword"},"nameof"),n("span",{class:"token punctuation"},"("),s("TechStacks"),n("span",{class:"token punctuation"},")")]),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},"."),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},[n("span",{class:"token keyword"},"nameof"),n("span",{class:"token punctuation"},"("),s("ServiceInterface"),n("span",{class:"token punctuation"},")")]),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'"')]),n("span",{class:"token punctuation"},","),s(`
            `),n("span",{class:"token interpolation-string"},[n("span",{class:"token string"},'$"'),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},[n("span",{class:"token keyword"},"nameof"),n("span",{class:"token punctuation"},"("),s("TechStacks"),n("span",{class:"token punctuation"},")")]),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},"."),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},[n("span",{class:"token keyword"},"nameof"),n("span",{class:"token punctuation"},"("),s("ServiceModel"),n("span",{class:"token punctuation"},")")]),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'"')]),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])])],-1),fe=n("blockquote",null,[n("p",null,[n("a",{href:"https://sharpscript.net/docs/script-net#type-resolution",target:"_blank",rel:"noopener noreferrer"},"ScriptNamespaces"),s(" behaves like C#'s "),n("code",null,"using Namespace;"),s(" statement letting you reference Types by "),n("code",null,"Name"),s(" instead of its fully-qualified Namespace.")])],-1),be=n("p",null,[s("Whilst you can now connect to it with basic "),n("code",null,"telnet"),s(", it's a much nicer experience to use it with the "),n("a",{href:"https://linux.die.net/man/1/rlwrap",target:"_blank",rel:"noopener noreferrer"},"rlwrap"),s(" readline wrap utility which provides an enhanced experience with line editing, persistent history and completion.")],-1),ye=n("pre",null,[n("code",null,`$ sudo apt-get install rlwrap
`)],-1),_e=n("p",null,"Then you can open a TCP Connection to connect to a new Lisp REPL with:",-1),we=n("pre",null,[n("code",null,`$ rlwrap telnet localhost 5005
`)],-1),ve=n("p",null,[s("Where you now have full scriptability of the running server as allowed by "),n("a",{href:"https://sharpscript.net/docs/sharp-pages",target:"_blank",rel:"noopener noreferrer"},"#Script Pages"),s(),n("code",null,"SharpPagesFeature"),s(" which allows "),n("a",{href:"https://sharpscript.net/docs/script-net#allowscriptingofalltypes",target:"_blank",rel:"noopener noreferrer"},"scripting of all .NET Types"),s(" by default.")],-1),Se=n("h4",{id:"techstacks-tcp-lisp-repl-demo",tabindex:"-1"},[s("TechStacks TCP Lisp REPL Demo "),n("a",{class:"header-anchor",href:"#techstacks-tcp-lisp-repl-demo","aria-hidden":"true"},"#")],-1),xe=n("p",null,[s("In this demo we'll explore some of the possibilities of scripting the live "),n("a",{href:"https://techstacks.io",target:"_blank",rel:"noopener noreferrer"},"techstacks.io"),s(" Server where we can "),n("code",null,"resolve"),s(" IOC dependencies to send out tweets using its registered "),n("code",null,"ITwitterUpdates"),s(" dependency, view the source and load a remote "),n("a",{href:"https://gist.github.com/gistlyn/3624b0373904cfb2fc7bb3c2cb9dc1a3",target:"_blank",rel:"noopener noreferrer"},"parse-rss"),s(" lisp function into the new Lisp interpreter attached to the TCP connection, use it to parse "),n("a",{href:"https://news.ycombinator.com/rss",target:"_blank",rel:"noopener noreferrer"},"Hacker News RSS Feed"),s(" into a .NET Collection where it can be more easily queried using its built-in functions which is used to construct an email body with "),n("strong",null,"HN's current Top 5 links"),s(".")],-1),Te=n("p",null,[s("It then uses "),n("a",{href:"https://sharpscript.net/docs/db-scripts",target:"_blank",rel:"noopener noreferrer"},"DB Scripts"),s(" to explore its configured AWS RDS PostgreSQL RDBMS, listing its DB tables and viewing its column names and definitions before retrieving the Email addresses of all "),n("strong",null,"Admin"),s(" users, sending them each an email with HN's Top 5 Links by publishing "),n("strong",null,"5x"),s(),n("code",null,"SendEmail"),s(" Request DTOs using the "),n("a",{href:"https://sharpscript.net/docs/servicestack-scripts#publishmessage",target:"_blank",rel:"noopener noreferrer"},"publishMessage"),s(" ServiceStack Script to where they're processed in the background by its configured "),n("a",{href:"/messaging.html"},"MQ Server"),s(" that uses it to execute the "),n("code",null,"SendEmail"),s(" ServiceStack Service where it uses its configured AWS SES SMTP Server to finally send out the Emails:")],-1),Le=n("blockquote",null,[n("p",null,[s("YouTube: "),n("a",{href:"https://youtu.be/HO523cFkDfk",target:"_blank",rel:"noopener noreferrer"},"youtu.be/HO523cFkDfk")])],-1),Ae=n("p",null,[n("a",{href:"https://youtu.be/HO523cFkDfk",target:"_blank",rel:"noopener noreferrer"},[n("img",{src:"https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/sharpscript/lisp-tcp-repl.gif",alt:""})])],-1),Ce=n("h3",{id:"password-protection",tabindex:"-1"},[s("Password Protection "),n("a",{class:"header-anchor",href:"#password-protection","aria-hidden":"true"},"#")],-1),Ie=n("p",null,[s("Since TCP Server effectively opens your remote Server up to being scripted you'll want to ensure the TCP Server is only accessible within a trusted network, effectively treating it the same as "),n("a",{href:"https://redis.io/topics/security",target:"_blank",rel:"noopener noreferrer"},"Redis Security Model"),s(".")],-1),Ee=n("p",null,[s("A secure approach would be to leave the default of only binding to "),n("code",null,"IPAddress.Loopback"),s(" so only trusted users with SSH access will be able to access it, which they'll still be able to access remotely via "),n("code",null,"Local PC > ssh > telnet 127.0.0.1 5005"),s(".")],-1),Pe=n("p",null,[s("Just like "),n("a",{href:"https://redis.io/commands/auth",target:"_blank",rel:"noopener noreferrer"},"Redis AUTH"),s(" you can also add password protection for an additional layer of Security:")],-1),Ne=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[s("Plugins"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"LispReplTcpServer"),s(),n("span",{class:"token punctuation"},"{"),s(`
    RequireAuthSecret `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token range operator"},".."),n("span",{class:"token punctuation"},"."),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])])],-1),Fe=n("p",null,[s("Which will only allow access to users with the "),n("a",{href:"/debugging.html#authsecret"},"configured AuthSecret"),s(":")],-1),Re=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token function"},"SetConfig"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"HostConfig"),s(),n("span",{class:"token punctuation"},"{"),s(` 
    AdminAuthSecret `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"secretz"'),s(` 
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])])],-1),Me=n("h4",{id:"annotated-lisp-tcp-repl-transcript",tabindex:"-1"},[s("Annotated Lisp TCP REPL Transcript "),n("a",{class:"header-anchor",href:"#annotated-lisp-tcp-repl-transcript","aria-hidden":"true"},"#")],-1),je=n("div",{class:"language-lisp"},[n("pre",null,[n("code",null,[n("span",{class:"token comment"},"; resolve `ITwitterUpdates` IOC dependency and assign it to `twitter`"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"def"),s(" twitter "),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"resolve"),s(),n("span",{class:"token string"},'"ITwitterUpdates"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; view its concrete Type Name"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"typeName"),s(" twitter"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; view its method names "),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"joinln"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"methods"),s(" twitter"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; view its method signatures "),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"joinln"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"methodTypes"),s(" twitter"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; use it to send tweet from its @webstacks account"),s(`
`),n("span",{class:"token punctuation"},"("),s(".Tweet twitter "),n("span",{class:"token string"},`"Who's using #Script Lisp? https://sharpscript.net/lisp"`),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; view all available scripts in #Script Lisp Library Index gist.github.com/3624b0373904cfb2fc7bb3c2cb9dc1a3"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"gistindex"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; view the source code of the `parse-rss` library"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"load-src"),s(),n("span",{class:"token string"},'"index:parse-rss"'),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; assign the XML contents of HN's RSS feed to `xml`"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"def"),s(" xml "),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"urlContents"),s(),n("span",{class:"token string"},'"https://news.ycombinator.com/rss"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; preview its first 1000 chars"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"subString"),s(" xml "),n("span",{class:"token number"},"0"),s(),n("span",{class:"token number"},"1000"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; use `parse-rss` to parse the RSS feed into a .NET Collection and assign it to `rss`"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"def"),s(" rss "),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"parse-rss"),s(" xml"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; view the `title`, `description` and the first `item` in the RSS feed:"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token lisp-property property"},":title"),s(" rss"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token lisp-property property"},":description"),s(" rss"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token lisp-property property"},":0"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token lisp-property property"},":items"),s(" rss"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; view the links of all RSS feed items"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"joinln"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"map"),s(),n("span",{class:"token lisp-property property"},":link"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token lisp-property property"},":items"),s(" rss"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; view the links and titles of the top 5 news items"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"joinln"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"map"),s(),n("span",{class:"token lisp-property property"},":link"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"take"),s(),n("span",{class:"token number"},"5"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token lisp-property property"},":items"),s(" rss"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"joinln"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"map"),s(),n("span",{class:"token lisp-property property"},":title"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"take"),s(),n("span",{class:"token number"},"5"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token lisp-property property"},":items"),s(" rss"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; construct a plain-text numbered list of the top 5 HN Links and assign it to `body`"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"joinln"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"map-index"),s(" #"),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"str"),s(" %2 "),n("span",{class:"token punctuation"},"("),n("span",{class:"token lisp-property property"},":title"),s(" %1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"take"),s(),n("span",{class:"token number"},"5"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token lisp-property property"},":items"),s(" rss"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"joinln"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"map-index"),s(" #"),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"str"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"padLeft"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"1+"),s(" %2"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token string"},'". "'),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token lisp-property property"},":title"),s(" %1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"take"),s(),n("span",{class:"token number"},"5"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token lisp-property property"},":items"),s(" rss"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"def"),s(" body "),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"joinln"),s(` 
    `),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"map-index"),s(" #"),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"str"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"padLeft"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"1+"),s(" %2"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token string"},'". "'),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token lisp-property property"},":title"),s(" %1"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token string"},'"\\n"'),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token lisp-property property"},":link"),s(" %1"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token string"},'"\\n"'),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"take"),s(),n("span",{class:"token number"},"5"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token lisp-property property"},":items"),s(" rss"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; view all TechStacks PostgreSQL AWS RDS tables"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"dbTableNames"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"joinln"),s(" dbTableNames"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; view the column names and definitions of the `technology` table"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"joinln"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"dbColumnNames"),s(),n("span",{class:"token string"},'"technology"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"joinln"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"dbColumns"),s(),n("span",{class:"token string"},'"technology"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; search for all `user` tables"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"globln"),s(),n("span",{class:"token string"},'"*user*"'),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"dbTableNames"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; view how many Admin Users with Emails there are"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"dbScalar"),s(),n("span",{class:"token string"},`"select count(email) from custom_user_auth where roles like '%Admin%'"`),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; assign the Admin Users email to the `emails` list"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"def"),s(" emails "),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"map"),s(),n("span",{class:"token lisp-property property"},":email"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"dbSelect"),s(),n("span",{class:"token string"},`"select email from custom_user_auth where roles like '%Admin%'"`),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; search for all `operation` script methods"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"globln"),s(),n("span",{class:"token string"},'"*operation*"'),s(" scriptMethods"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; search for all `email` Request DTOs"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"globln"),s(),n("span",{class:"token string"},'"*email*"'),s(" metaAllOperationNames"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; view the properties available on the `SendEmail` Request DTO"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"props"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"SendEmail"),s("."),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; search for all `publish` script methods that can publish messages"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"globln"),s(),n("span",{class:"token string"},'"publish*"'),s(" scriptMethods"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; create and publish 5x `SendEmail` Request DTOs for processing by TechStacks configured MQ Server"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"doseq"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"to"),s(" emails"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"publishMessage"),s(),n("span",{class:"token string"},'"SendEmail"'),s(" { "),n("span",{class:"token lisp-property property"},":To"),s(" to "),n("span",{class:"token lisp-property property"},":Subject"),s(),n("span",{class:"token string"},[s('"Top 5 '),n("span",{class:"token argument"},"HN"),s(' Links"')]),s(),n("span",{class:"token lisp-property property"},":Body"),s(" body }"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
`)])])],-1),De=n("h3",{id:"run-and-watch-lisp-scripts",tabindex:"-1"},[s("Run and watch Lisp Scripts "),n("a",{class:"header-anchor",href:"#run-and-watch-lisp-scripts","aria-hidden":"true"},"#")],-1),qe=n("p",null,[s("The same "),n("a",{href:"https://sharpscript.net/docs/sharp-scripts",target:"_blank",rel:"noopener noreferrer"},"Sharp Scripts"),s(" functionality for "),n("code",null,"#Script"),s(" is also available to Lisp scripts where you can use the "),n("code",null,"web"),s(" and "),n("code",null,"app"),s(" dotnet tools to "),n("strong",null,"run"),s(" and "),n("strong",null,"watch"),s(" stand-alone Lisp scripts with the "),n("code",null,".l"),s(" file extension, e.g:")],-1),Oe=n("pre",null,[n("code",null,`$ web run lisp.l
$ web watch lisp.l
`)],-1),He=n("p",null,[s("To clarify the behavioural differences between the Lisp REPL's above which uses the "),n("strong",null,"same Lisp interpreter"),s(" to maintain state changes across each command, the "),n("code",null,"watch"),s(" Script is run with a "),n("strong",null,"new Lisp Interpreter"),s(" which starts with a "),n("strong",null,"fresh"),s(" copy of the Global symbols table so any state changes after each "),n("code",null,"Ctrl+S"),s(" save point is discarded.")],-1),We=n("h3",{id:"watch-lisp-scripts",tabindex:"-1"},[s("Watch "),n("code",null,"lisp"),s(" scripts "),n("a",{class:"header-anchor",href:"#watch-lisp-scripts","aria-hidden":"true"},"#")],-1),Ge=n("p",null,[s("This quick demo illustrates the same functionality in "),n("a",{href:"https://sharpscript.net/docs/sharp-scripts",target:"_blank",rel:"noopener noreferrer"},"Sharp Scripts"),s(" is also available in "),n("code",null,"lisp"),s(" scripts where it provides instant feedback whilst you develop in real-time:")],-1),Ve=n("blockquote",null,[n("p",null,[s("YouTube: "),n("a",{href:"https://youtu.be/rIgEP8ssikY",target:"_blank",rel:"noopener noreferrer"},"youtu.be/rIgEP8ssikY")])],-1),Be=n("p",null,[n("a",{href:"https://youtu.be/rIgEP8ssikY",target:"_blank",rel:"noopener noreferrer"},[n("img",{src:"https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/sharpscript/lisp-l.gif",alt:""})])],-1),ze=n("h3",{id:"annotated-lisp-watch-script",tabindex:"-1"},[s("Annotated Lisp watch script "),n("a",{class:"header-anchor",href:"#annotated-lisp-watch-script","aria-hidden":"true"},"#")],-1),Ue=n("div",{class:"language-lisp"},[n("pre",null,[n("code",null,[n("span",{class:"token comment"},";<!--"),s(`
`),n("span",{class:"token comment"},"; db sqlite"),s(`
`),n("span",{class:"token comment"},"; db.connection northwind.sqlite"),s(`
`),n("span",{class:"token comment"},"; files s3"),s(`
`),n("span",{class:"token comment"},"; files.config {AccessKey:$AWS_S3_ACCESS_KEY,SecretKey:$AWS_S3_SECRET_KEY,Region:us-east-1,Bucket:rockwind}"),s(`
`),n("span",{class:"token comment"},";-->"),s(`

`),n("span",{class:"token comment"},"; delete remove.txt file"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"sh"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"str"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"if"),s(" isWin "),n("span",{class:"token string"},'"del"'),s(),n("span",{class:"token string"},'"rm"'),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token string"},'" remove.txt"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; View all `northwind.sqlite` RDBMS Tables"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"textDump"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"dbTableNames"),n("span",{class:"token punctuation"},")"),s(" { "),n("span",{class:"token lisp-property property"},":caption"),s(),n("span",{class:"token string"},'"Northwind"'),s(" } "),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; Display first `customer` row in Single Row View showing all Table Columns"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"textDump"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"dbSelect"),s(),n("span",{class:"token string"},'"select * from customer limit 1"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; Display all Customers in London"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"def"),s(" city "),n("span",{class:"token string"},'"London"'),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"textDump"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"dbSelect"),s(),n("span",{class:"token string"},'"select Id, CompanyName, ContactName from customer where city = @city"'),s(" { "),n("span",{class:"token lisp-property property"},":city"),s(" city } "),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; View all root files and folders in configured S3 Virtual File Provider"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"joinln"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"map"),s(" #"),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"str"),s(),n("span",{class:"token punctuation"},"("),s(".Name %"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token string"},'"/"'),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"allRootDirectories"),s(" vfsContent"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"joinln"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"map"),s(" .Name "),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"allRootFiles"),s(" vfsContent"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"; Show first 10 *.png files in S3 VFS Provider"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"def"),s(" pattern "),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"or"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"first"),s(" ARGV"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token string"},'"*.png"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"joinln"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"map"),s(" .VirtualPath "),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"take"),s(),n("span",{class:"token number"},"10"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"findFiles"),s(" vfsContent pattern"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
`)])])],-1),Ye=n("h4",{id:"page-arguments",tabindex:"-1"},[s("Page Arguments "),n("a",{class:"header-anchor",href:"#page-arguments","aria-hidden":"true"},"#")],-1),$e=n("p",null,[s("You can also use the same syntax for declaring any "),n("code",null,"app.settings"),s(" page arguments used in "),n("code",null,"#Script"),s(" and "),n("code",null,"code"),s(" Scripts:")],-1),Xe=n("div",{class:"language-html"},[n("pre",null,[n("code",null,[n("span",{class:"token comment"},`<!--
db sqlite
db.connection northwind.sqlite
-->`),s(`
`)])])],-1),Ke=n("p",null,[s("But for compatibility with any Lisp syntax highlighters and code editors they can also be prefixed with a "),n("code",null,";"),s(" line comment as seen above.")],-1),Qe=n("h2",{id:"executing-lisp-in-net",tabindex:"-1"},[s("Executing Lisp in .NET "),n("a",{class:"header-anchor",href:"#executing-lisp-in-net","aria-hidden":"true"},"#")],-1),Je=n("p",null,[s("Lisp like all "),n("code",null,"#Script"),s(" languages are executed within a "),n("code",null,"ScriptContext"),s(" that defines all functionality available to them, i.e:")],-1),Ze=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" context "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"ScriptContext"),s(),n("span",{class:"token punctuation"},"{"),s(`
    Args `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token range operator"},".."),n("span",{class:"token punctuation"},"."),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s("              "),n("span",{class:"token comment"},"// Global Arguments available to all Scripts, Pages, Partials, etc"),s(`
    ScriptMethods `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token range operator"},".."),n("span",{class:"token punctuation"},"."),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s("     "),n("span",{class:"token comment"},"// Additional Methods"),s(`
    ScriptBlocks `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token range operator"},".."),n("span",{class:"token punctuation"},"."),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s("      "),n("span",{class:"token comment"},"// Additional Script Blocks "),s(`
    FilterTransformers `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token range operator"},".."),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token comment"},"// Additional Stream Transformers"),s(`
    PageFormats `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token range operator"},".."),n("span",{class:"token punctuation"},"."),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s("       "),n("span",{class:"token comment"},"// Additional Text Document Formats"),s(`
    Plugins `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token range operator"},".."),n("span",{class:"token punctuation"},"."),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s("           "),n("span",{class:"token comment"},"// Encapsulated Features e.g. Markdown, Protected or ServiceStack Features"),s(`

    ScanTypes `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token range operator"},".."),n("span",{class:"token punctuation"},"."),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s("         "),n("span",{class:"token comment"},"// Auto register Methods, Blocks and Code Page Types"),s(`
    ScanAssemblies `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token range operator"},".."),n("span",{class:"token punctuation"},"."),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s("    "),n("span",{class:"token comment"},"// Auto register all Methods, Blocks and Code Page Types in Assembly"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Init"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])])],-1),no=n("p",null,[s("To render "),n("code",null,"lisp"),s(" you'll first need to register the Lisp Language with the "),n("code",null,"ScriptContext"),s(" you're using:")],-1),so=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" context "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"ScriptContext"),s(),n("span",{class:"token punctuation"},"{"),s(`
    ScriptLanguages `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(" ScriptLisp"),n("span",{class:"token punctuation"},"."),s("Language "),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Init"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])])],-1),to=n("p",null,[s("Then use "),n("code",null,"RenderLisp"),s(" (i.e. instead of "),n("code",null,"RenderScript"),s(") to render Lisp code, e.g:")],-1),ao=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token comment"},"// render lisp"),s(`
`),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" output "),n("span",{class:"token operator"},"="),s(" context"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"RenderLisp"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"(dateFormat now \\"HH:mm:ss\\")"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(` 

`),n("span",{class:"token comment"},"// async"),s(`
`),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" output "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"await"),s(" context"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"RenderLispAsync"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"(dateFormat now \\"HH:mm:ss\\")"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(` 
`)])])],-1),eo=n("p",null,[s("These APIs match the high-level APIs for rendering normal "),n("code",null,"#Script"),s(":")],-1),oo=n("div",null,[n("div",{class:"language-csharp"},[n("pre",{"v-pre":""},[n("code",null,[n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" output "),n("span",{class:"token operator"},"="),s(" context"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"RenderScript"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},`"{{ now |> dateFormat('HH:mm:ss') }}"`),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(` 
`),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" output "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"await"),s(" context"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"RenderScriptAsync"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},`"{{ now |> dateFormat('HH:mm:ss') }}"`),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])])])],-1),co=n("h3",{id:"finer-grained-control-1",tabindex:"-1"},[s("Finer grained control "),n("a",{class:"header-anchor",href:"#finer-grained-control-1","aria-hidden":"true"},"#")],-1),lo=n("p",null,[s("The high-level APIs above wraps the finer-grained functionality below which works by rendering a "),n("code",null,"SharpPage"),s(" configured with the "),n("code",null,"lisp"),s(" language in a "),n("code",null,"PageResult"),s(" that all languages use:")],-1),po=n("div",null,[n("div",{class:"language-csharp"},[n("pre",{"v-pre":""},[n("code",null,[n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" context "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"ScriptContext"),s(),n("span",{class:"token punctuation"},"{"),s(`
    ScriptLanguages `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(" ScriptLisp"),n("span",{class:"token punctuation"},"."),s("Language "),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Init"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" dynamicPage "),n("span",{class:"token operator"},"="),s(" context"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"LispSharpPage"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"(dateFormat now \\"HH:mm:ss\\")"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s("          "),n("span",{class:"token comment"},"// render lisp"),s(`
`),n("span",{class:"token comment"},`//var dynamicPage = context.SharpScriptPage("{{ now |> dateFormat('HH:mm:ss') }}"); // render #Script`),s(`
`),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" output "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"PageResult"),n("span",{class:"token punctuation"},"("),s("dynamicPage"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"RenderScript"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"//async"),s(`
`),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" output "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"await"),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"PageResult"),n("span",{class:"token punctuation"},"("),s("dynamicPage"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"RenderScriptAsync"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])])])],-1),io=n("h3",{id:"evaluating-lisp-script-results",tabindex:"-1"},[s("Evaluating Lisp Script Results "),n("a",{class:"header-anchor",href:"#evaluating-lisp-script-results","aria-hidden":"true"},"#")],-1),ro=n("p",null,[s("If you instead wanted to access return values instead of its rendered output, use the "),n("code",null,"EvaluateLisp()"),s(" APIs:")],-1),uo=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" result "),n("span",{class:"token operator"},"="),s(" context"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"EvaluateLisp"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"(return (+ 1 1))"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"//= 2"),s(`
`)])])],-1),ko=n("p",null,[s("The generic overloads below utilizes ServiceStack's "),n("a",{href:"/auto-mapping.html"},"Auto Mapping utils"),s(" to convert the return value into your preferred type, e.g:")],-1),ho=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"double")]),s(" result "),n("span",{class:"token operator"},"="),s(" context"),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-method"},[n("span",{class:"token function"},"EvaluateLisp"),n("span",{class:"token generic class-name"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token keyword"},"double"),n("span",{class:"token punctuation"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"(return (+ 1 1))"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"//= 2.0"),s(`
`),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" result "),n("span",{class:"token operator"},"="),s(" context"),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-method"},[n("span",{class:"token function"},"EvaluateLisp"),n("span",{class:"token generic class-name"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token keyword"},"string"),n("span",{class:"token punctuation"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"(return (+ 1 1))"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},'//= "2"'),s(`
`)])])],-1),go=n("p",null,"Which can also be used for more powerful conversions like converting an Object Dictionary into your preferred POCO:",-1),mo=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" result "),n("span",{class:"token operator"},"="),s(" context"),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-method"},[n("span",{class:"token function"},"EvaluateLisp"),n("span",{class:"token generic class-name"},[n("span",{class:"token punctuation"},"<"),s("Customer"),n("span",{class:"token punctuation"},">")])]),n("span",{class:"token punctuation"},"("),s(`
    `),n("span",{class:"token string"},'"(return (dbSingle \\"select * from customer where id=@id\\" { :id id }))"'),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"ObjectDictionary"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"id"'),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])])],-1),fo=n("h2",{id:"net-interop",tabindex:"-1"},[s(".NET Interop "),n("a",{class:"header-anchor",href:"#net-interop","aria-hidden":"true"},"#")],-1),bo=n("p",null,[s("The syntax for .NET Interop is inspired directly from Clojure's syntax used for "),n("a",{href:"https://clojure.org/reference/java_interop",target:"_blank",rel:"noopener noreferrer"},"Java Interop"),s(". See "),n("a",{href:"https://sharpscript.net/docs/script-net#type-resolution",target:"_blank",rel:"noopener noreferrer"},"Scripting .NET Type Resolution"),s(" for how to configure Types and imported Namespaces you want your Lisp scripts to have access to.")],-1),yo=n("h3",{id:"member-access",tabindex:"-1"},[s("Member Access "),n("a",{class:"header-anchor",href:"#member-access","aria-hidden":"true"},"#")],-1),_o=n("p",null,[s("The "),n("code",null,"'.'"),s(" prefix if for accessing an instance members which can be used for retrieving a properties public properties, fields and invoking instance methods, e.g:")],-1),wo=n("ul",null,[n("li",null,[n("strong",null,"(.Property instance)")]),n("li",null,[n("strong",null,"(.Field instance)")]),n("li",null,[n("strong",null,"(.Method instance ...args)")])],-1),vo=n("h3",{id:"indexer-access",tabindex:"-1"},[s("Indexer Access "),n("a",{class:"header-anchor",href:"#indexer-access","aria-hidden":"true"},"#")],-1),So=n("p",null,[s("Use "),n("code",null,"':'"),s(" prefix for accessing a Types indexer or for indexing collections, e.g:")],-1),xo=n("ul",null,[n("li",null,[n("strong",null,"(:key indexer)")]),n("li",null,[n("strong",null,'(:"string key" dictionary)')]),n("li",null,[n("strong",null,"(:n list)")]),n("li",null,[n("strong",null,"(:n array)")]),n("li",null,[n("strong",null,"(:n enumerable)")]),n("li",null,[n("strong",null,"(:n indexer)")])],-1),To=n("p",null,"It can also be used to access an instance public Properties and Fields:",-1),Lo=n("ul",null,[n("li",null,[n("strong",null,"(:Property instance)")]),n("li",null,[n("strong",null,"(:Field instance)")])],-1),Ao=n("p",null,[s("However for readability we recommend using "),n("code",null,"'.'"),s(" prefix above to convey instance member access.")],-1),Co=n("h3",{id:"constructor-access",tabindex:"-1"},[s("Constructor Access "),n("a",{class:"header-anchor",href:"#constructor-access","aria-hidden":"true"},"#")],-1),Io=n("p",null,[s("Use "),n("code",null,"'.'"),s(),n("strong",null,"suffix"),s(" for creating instances of Types:")],-1),Eo=n("ul",null,[n("li",null,[n("strong",null,"(Type. ...args)")]),n("li",null,[n("strong",null,"(Namespace.Type. ...args)")])],-1),Po=n("p",null,[s("You can also create instances using the "),n("a",{href:"https://sharpscript.net/docs/script-net#creating-instances",target:"_blank",rel:"noopener noreferrer"},"new script method"),s(", which as it accepts a "),n("code",null,"string"),s(" Type Name can be used to create generic classes with multiple generic args, e.g:")],-1),No=n("ul",null,[n("li",null,[n("strong",null,'(new "Type" ...args)')]),n("li",null,[n("strong",null,'(new "Type<T1,T2,T3>" ...args)')])],-1),Fo=n("h3",{id:"static-member-access",tabindex:"-1"},[s("Static Member Access "),n("a",{class:"header-anchor",href:"#static-member-access","aria-hidden":"true"},"#")],-1),Ro=n("p",null,[s("Use the "),n("code",null,"'/'"),s(" separator to access a Type's static members or to invoke its static methods, e.g:")],-1),Mo=n("ul",null,[n("li",null,[n("strong",null,"(StaticType/Property)")]),n("li",null,[n("strong",null,"(StaticType/Field)")]),n("li",null,[n("strong",null,"(StaticType/Const)")]),n("li",null,[n("strong",null,"(StaticType/Method ...args)")])],-1),jo=n("p",null,[s("Use "),n("code",null,"'.'"),s(" dot notation for specifying the fully-qualified Type name or to reference its Inner classes, e.g:")],-1),Do=n("ul",null,[n("li",null,[n("strong",null,"(Namespace.StaticType/Member)")]),n("li",null,[n("strong",null,"(Namespace.StaticType.InnerType/Member)")])],-1),qo=n("h3",{id:"script-methods",tabindex:"-1"},[s("Script Methods "),n("a",{class:"header-anchor",href:"#script-methods","aria-hidden":"true"},"#")],-1),Oo=n("p",null,[s("Use "),n("code",null,"'/'"),s(" prefix to reference any Script Method registered in your "),n("code",null,"ScriptContext"),s(":")],-1),Ho=n("ul",null,[n("li",null,[n("strong",null,"(/scriptMethod ...args)")])],-1),Wo=n("p",null,[s("Script Methods without arguments can be referenced as an "),n("a",{href:"https://sharpscript.net/docs/default-scripts#as-bindings",target:"_blank",rel:"noopener noreferrer"},"argument binding"),s(" that when referenced as an argument (i.e. without brackets) are implicitly evaluated, in-effect making them a calculated property:")],-1),Go=n("ul",null,[n("li",null,[n("strong",null,"/methodAsBinding")])],-1),Vo=n("p",null,[s("While a "),n("code",null,"'/'"),s(" prefix indicates a reference to a "),n("a",{href:"https://sharpscript.net/docs/methods",target:"_blank",rel:"noopener noreferrer"},"script method"),s(", for readability it can be excluded as when there's no existing symbol defined in the Lisp interpreter's symbol table it will fallback to referencing a script method:")],-1),Bo=n("ul",null,[n("li",null,[n("strong",null,"(scriptMethod ...args)")]),n("li",null,[n("strong",null,"methodAsBinding")])],-1),zo=n("p",null,[s("This does mean that when there exists a "),n("code",null,"symbol"),s(" of the same name defined you will need to use the "),n("code",null,"'/'"),s(" prefix to reference a script method.")],-1),Uo=n("h3",{id:"generic-types",tabindex:"-1"},[s("Generic Types "),n("a",{class:"header-anchor",href:"#generic-types","aria-hidden":"true"},"#")],-1),Yo=n("p",null,"All references above support referencing generic types and methods with a single generic Type argument, e.g:",-1),$o=n("ul",null,[n("li",null,[n("strong",null,"(StaticType/Method<T>)")]),n("li",null,[n("strong",null,"(GenericStaticType<T>/Member)")]),n("li",null,[n("strong",null,"(GenericStaticType<T>/Method<T>)")]),n("li",null,[n("strong",null,"(GenericType<T>.)")])],-1),Xo=n("p",null,[s("As "),n("code",null,"','"),s(" is one of Lisp's few syntax tokens ("),n("a",{href:"http://www.lispworks.com/documentation/HyperSpec/Body/02_df.htm",target:"_blank",rel:"noopener noreferrer"},"unquoting"),s(") it prevents them from being able to use them to specify multiple generic arguments.")],-1),Ko=n("p",null,[s("Instead you'll need to use the "),n("a",{href:"https://sharpscript.net/docs/script-net#creating-instances",target:"_blank",rel:"noopener noreferrer"},"Constructor function"),s(" for referencing constructors with multiple generic arguments where you'll also need to specify the types of the exact constructor you want to call, e.g:")],-1),Qo=n("ul",null,[n("li",null,[n("strong",null,'(/C "Tuple<String,int>(String,int)")')])],-1),Jo=n("p",null,[s("The difference between the "),n("code",null,"/C"),s(" script method constructor function and Lisp's "),n("code",null,"C"),s(" function is that the script method only returns a reference to the constructor which you'll need to invoke with arguments to create an instance:")],-1),Zo=n("ul",null,[n("li",null,[n("strong",null,'((/C "Tuple<String,int>(String,int)") "A" 1)')])],-1),nc=n("p",null,[s("Whilst Lisp's "),n("code",null,"C"),s(" function will auto-invoke the constructor function with the supplied arguments in a single expression:")],-1),sc=n("ul",null,[n("li",null,[n("strong",null,'(C "Tuple<String,int>(String,int)" "A" 1)')])],-1),tc=n("p",null,[s("Likewise when needing to invoke generic methods with multiple generic args you'll need to use "),n("a",{href:"https://sharpscript.net/docs/script-net#function",target:"_blank",rel:"noopener noreferrer"},"Function"),s(":")],-1),ac=n("ul",null,[n("li",null,[n("strong",null,'((/F "Tuple.Create<String,int>(String,int)") "A" 1)')])],-1),ec=n("p",null,[s("Or Script Lisp's "),n("code",null,"F"),s(" function for invoking a function reference in a single expression:")],-1),oc=n("ul",null,[n("li",null,[n("strong",null,'(F "Tuple.Create<String,int>(String,int)" "A" 1)')])],-1),cc=n("p",null,[s("For more examples and information see "),n("a",{href:"https://sharpscript.net/docs/script-net",target:"_blank",rel:"noopener noreferrer"},"Scripting .NET Types"),s(".")],-1),lc=n("h3",{id:"property-setters",tabindex:"-1"},[s("Property Setters "),n("a",{class:"header-anchor",href:"#property-setters","aria-hidden":"true"},"#")],-1),pc=n("p",null,[s("You can populate multiple properties on an instance using the "),n("a",{href:"https://sharpscript.net/docs/script-net#user-content-set",target:"_blank",rel:"noopener noreferrer"},"set script method"),s(", e.g:")],-1),ic=n("ul",null,[n("li",null,[n("strong",null,"(set instance { :Prop arg ... })")])],-1),rc=n("p",null,"Alternatively properties can be set individually with:",-1),uc=n("ul",null,[n("li",null,[n("strong",null,"(.Prop instance arg)")])],-1),kc=n("h3",{id:"lisp-lists-vs-net-collections",tabindex:"-1"},[s("Lisp Lists vs .NET Collections "),n("a",{class:"header-anchor",href:"#lisp-lists-vs-net-collections","aria-hidden":"true"},"#")],-1),dc=n("p",null,[s("A potential source of friction when interoperating with .NET is that Lisp Lists are "),n("a",{href:"https://cs.gmu.edu/~sean/lisp/cons/",target:"_blank",rel:"noopener noreferrer"},"Cons Cells"),s(" so that a code or data list in Lisp, i.e:")],-1),hc=n("pre",null,[n("code",null,`'(1 2 3)
[1 2 3]
`)],-1),gc=n("p",null,"Is implemented as a Linked List of Cons cells:",-1),mc=n("pre",null,[n("code",null,`(1 . (2 . (3 . null)))
`)],-1),fc=n("p",null,"Which is what Lisp's core functions expect to operate on, namely:",-1),bc=n("pre",null,[n("code",null,`car cdr caar cadr cdar cddr caaar caadr cadar caddr cdaar cdadr cddar cdddr append mapcar consp cons?
listp list? memq member assq assoc nreverse last nconc dolist dotimes mapcan mapc nthcdr nbutlast 
`)],-1),yc=n("p",null,[s("These core Lisp functions can't be used against .NET collections directly, instead you can use "),n("code",null,"(to-cons collection)"),s(" to convert a .NET "),n("code",null,"IEnumerable"),s(" collection into a cons list, e.g:")],-1),_c=n("pre",null,[n("code",null,`(cdr (to-cons netEnumerable))
`)],-1),wc=n("p",null,[s("Should you need to do the inverse you can use "),n("code",null,"(to-list cons-list)"),s(" to convert a cons list to a .NET List, e.g:")],-1),vc=n("pre",null,[n("code",null,`(to-list (range 10))
`)],-1),Sc=n("p",null,[s("We've made Script Lisp's cons "),n("code",null,"Cell"),s(" an "),n("code",null,"IEnumerable"),s(" so that "),n("strong",null,"all other built-in Lisp functions"),s(" can operate on both cons cells and .NET Collections where instead of iterating a list with "),n("code",null,"(do-list)"),s(" you can use "),n("code",null,"(do-seq)"),s(" to iterate both .NET Collections and cons cells, e.g:")],-1),xc=n("pre",null,[n("code",null,`(do-seq (x collection) (println x) )
`)],-1),Tc=n("h3",{id:"annotated-net-interop-example",tabindex:"-1"},[s("Annotated .NET Interop Example "),n("a",{class:"header-anchor",href:"#annotated-net-interop-example","aria-hidden":"true"},"#")],-1),Lc=n("p",null,"To see what this looks like in action here's an annotated simple real-world example that heavily utilizes .NET interop:",-1),Ac=n("div",{class:"language-lisp"},[n("pre",null,[n("code",null,[n("span",{class:"token comment"},"; define function and assign to `parse-rss` value in Lisp interpreters symbols table"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"defn"),s(" parse-rss "),n("span",{class:"token punctuation"},"["),s("xml"),n("span",{class:"token punctuation"},"]"),s(`
    `),n("span",{class:"token comment"},"; define local variables used within this scope"),s(`
    `),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token punctuation"},"("),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"to"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"doc"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"channel"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"items"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"el"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token comment"},"; use XDocument.Parse() to parse xml string argument containing xml and assign to `doc`"),s(`
        `),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"def"),s(" doc "),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"System"),s(".Xml.Linq.XDocument/Parse xml"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token comment"},"; create empty ObjectDictionary (wrapper for Dictionary<string,object>) and assign to `to`"),s(`
        `),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"def"),s(" to "),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"ObjectDictionary"),s("."),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token comment"},"; create empty List of ObjectDictionary and assign to `items`"),s(`
        `),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"def"),s(" items "),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"List<ObjectDictionary>"),s("."),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token comment"},"; descend into first <channel> XML element and assign to `channel`"),s(`
        `),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"def"),s(" channel "),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"first"),s(),n("span",{class:"token punctuation"},"("),s(".Descendants doc "),n("span",{class:"token string"},'"channel"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token comment"},"; use `XLinqExtensions.FirstElement()` extension method to assign channels first XML element to `el`"),s(`
        `),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"def"),s(" el "),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"XLinqExtensions/FirstElement"),s(" channel"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

        `),n("span",{class:"token comment"},"; iterate through all elements up to the first <item> and add them as top-level entries in `to`"),s(`
        `),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"not="),s(),n("span",{class:"token punctuation"},"("),s(".LocalName "),n("span",{class:"token punctuation"},"("),s(".Name el"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token string"},'"item"'),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token comment"},"; add current XML element name and value entry to `to`"),s(`
            `),n("span",{class:"token punctuation"},"("),s(".Add to "),n("span",{class:"token punctuation"},"("),s(".LocalName "),n("span",{class:"token punctuation"},"("),s(".Name el"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"("),s(".Value el"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token comment"},"; move to next element using `XLinqExtensions.NextElement()` extension method"),s(`
            `),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"def"),s(" el "),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"XLinqExtensions/NextElement"),s(" el"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

        `),n("span",{class:"token comment"},"; add all rss <item>'s to `items` list"),s(`
        `),n("span",{class:"token comment"},"; iterate through all `channel` child <item> XML elements"),s(`
        `),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"doseq"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"elItem"),s(),n("span",{class:"token punctuation"},"("),s(".Descendants channel "),n("span",{class:"token string"},'"item"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token comment"},"; create empty ObjectDictionary and assign to `item`"),s(`
            `),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"def"),s(" item "),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"ObjectDictionary"),s("."),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
            
            `),n("span",{class:"token comment"},"; use `XLinqExtensions.FirstElement()` to assign <item> first XML element to `el`"),s(`
            `),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"def"),s(" el "),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"XLinqExtensions/FirstElement"),s(" elItem"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"while"),s(` el
                `),n("span",{class:"token comment"},"; add current XML element name and value entry to `item`"),s(`
                `),n("span",{class:"token punctuation"},"("),s(".Add item "),n("span",{class:"token punctuation"},"("),s(".LocalName "),n("span",{class:"token punctuation"},"("),s(".Name el"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"("),s(".Value el"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
                `),n("span",{class:"token comment"},"; move to next element using `XLinqExtensions.NextElement()` extension method"),s(`
                `),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"def"),s(" el "),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"XLinqExtensions/NextElement"),s(" el"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

            `),n("span",{class:"token comment"},"; add `item` ObjectDictionary to `items` List"),s(`
            `),n("span",{class:"token punctuation"},"("),s(".Add items item"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

        `),n("span",{class:"token comment"},"; add `items` ObjectDictionary List to `to` at key `items`"),s(`
        `),n("span",{class:"token punctuation"},"("),s(".Add to "),n("span",{class:"token string"},'"items"'),s(" items"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token comment"},"; return `to` ObjectDictionary"),s(`
        to
    `),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},")"),s(`
`)])])],-1),Cc=n("p",null,"For comparison, this would be the equivalent implementation in C#:",-1),Ic=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token return-type class-name"},"ObjectDictionary"),s(),n("span",{class:"token function"},"ParseRss"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" xml"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" to "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"ObjectDictionary"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" items "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},[s("List"),n("span",{class:"token punctuation"},"<"),s("ObjectDictionary"),n("span",{class:"token punctuation"},">")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" doc "),n("span",{class:"token operator"},"="),s(" XDocument"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Parse"),n("span",{class:"token punctuation"},"("),s("xml"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" channel "),n("span",{class:"token operator"},"="),s(" doc"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Descendants"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"channel"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"First"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" el "),n("span",{class:"token operator"},"="),s(" channel"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"FirstElement"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s("el"),n("span",{class:"token punctuation"},"."),s("Name "),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token string"},'"item"'),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"{"),s(`
        to`),n("span",{class:"token punctuation"},"["),s("el"),n("span",{class:"token punctuation"},"."),s("Name"),n("span",{class:"token punctuation"},"."),s("LocalName"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(" el"),n("span",{class:"token punctuation"},"."),s("Value"),n("span",{class:"token punctuation"},";"),s(`
        el `),n("span",{class:"token operator"},"="),s(" el"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"NextElement"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" elItems "),n("span",{class:"token operator"},"="),s(" channel"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Descendants"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"item"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"foreach"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" elItem "),n("span",{class:"token keyword"},"in"),s(" elItems"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" item "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"ObjectDictionary"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        el `),n("span",{class:"token operator"},"="),s(" elItem"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"FirstElement"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s("el "),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"{"),s(`
            item`),n("span",{class:"token punctuation"},"["),s("el"),n("span",{class:"token punctuation"},"."),s("Name"),n("span",{class:"token punctuation"},"."),s("LocalName"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(" el"),n("span",{class:"token punctuation"},"."),s("Value"),n("span",{class:"token punctuation"},";"),s(`
            el `),n("span",{class:"token operator"},"="),s(" el"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"NextElement"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`

        items`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Add"),n("span",{class:"token punctuation"},"("),s("item"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

    to`),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"items"'),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(" items"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"return"),s(" to"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])])],-1),Ec=n("h3",{id:"importing-global-scripts",tabindex:"-1"},[s("Importing Global Scripts "),n("a",{class:"header-anchor",href:"#importing-global-scripts","aria-hidden":"true"},"#")],-1),Pc=n("p",null,[s("Importing scripts in Lisp is essentially a 2-stage process of parsing Lisp source code into an "),n("a",{href:"https://en.wikipedia.org/wiki/S-expression",target:"_blank",rel:"noopener noreferrer"},"SExpression"),s(", (basically Lisp's AST of tokenized elements captured in a "),n("a",{href:"https://cs.gmu.edu/~sean/lisp/cons/",target:"_blank",rel:"noopener noreferrer"},"2-field Cons Cell"),s(") then evaluating it in a Lisp interpreter where any defined symbols are captured in its Symbols table.")],-1),Nc=n("p",null,[s('Lisp Script captures its "standard library" in a Global Interpreter which serves as the starting template for all other Lisp Interpreters which starts with a copy of the Global symbols table which you can further populate with your own common functions using '),n("code",null,"Lisp.Import()"),s(", e.g:")],-1),Fc=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[s("Lisp"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Import"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},`@"
(defun fib (n)
    (if (< n 2)
        1
        (+ (fib (- n 1))
        (fib (- n 2)) )))"`),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])])],-1),Rc=n("h3",{id:"loading-scripts",tabindex:"-1"},[s("Loading Scripts "),n("a",{class:"header-anchor",href:"#loading-scripts","aria-hidden":"true"},"#")],-1),Mc=n("p",null,[s("Loading scripts within a Lisp script works similarly except they're only loaded into that Lisp interpreters symbol table, a new one of which is created in each new "),n("code",null,"PageResult"),s(".")],-1),jc=n("p",null,[s("Scripts loaded locally are loaded from the "),n("code",null,"ScriptContext"),s(" configured "),n("a",{href:"/virtual-file-system.html"},"Virtual Files Provider"),s(" which for "),n("a",{href:"https://sharpscript.net/docs/sharp-pages",target:"_blank",rel:"noopener noreferrer"},"#Script Pages"),s(),n("code",null,"SharpPagesFeature"),s(" is configured to use the App's cascading virtual file sources.")],-1),Dc=n("p",null,[s("A new "),n("code",null,"ScriptContext"),s(" starts with an empty "),n("a",{href:"/virtual-file-system.html#virtual-file-systems-available"},"MemoryVirtualFiles"),s(" which you can write files to with:")],-1),qc=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" context "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"ScriptContext"),s(),n("span",{class:"token punctuation"},"{"),s(`
    ScriptLanguages `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(" ScriptLisp"),n("span",{class:"token punctuation"},"."),s("Language "),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
    ScriptMethods `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"ProtectedScripts"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
context`),n("span",{class:"token punctuation"},"."),s("VirtualFiles"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"WriteFile"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"lib1.l"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"(defn lib-calc [a b] (+ a b))"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
context`),n("span",{class:"token punctuation"},"."),s("VirtualFiles"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"WriteFile"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"/dir/lib2.l"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"(defn lib-calc [a b] (* a b))"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
context`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Init"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])])],-1),Oc=n("p",null,[s("You can load these scripts by symbol name where it assumes a "),n("code",null,".l"),s(" extension, by quoting the argument so Lisp doesn't try to evaluate it as an argument, e.g:")],-1),Hc=n("div",{class:"language-lisp"},[n("pre",null,[n("code",null,[n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"load"),s(),n("span",{class:"token quoted-symbol variable symbol"},"'lib1"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"lib-calc"),s(),n("span",{class:"token number"},"4"),s(),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},";= 9"),s(`
`)])])],-1),Wc=n("p",null,"Alternatively you can specify the virtual path to the script. You can load multiple scripts with the same definitions, in Lisp this just updates the value assigned to the symbol name with the latest definition, e.g:",-1),Gc=n("div",{class:"language-lisp"},[n("pre",null,[n("code",null,[n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"load"),s(),n("span",{class:"token string"},'"lib1.l"'),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"lib-calc"),s(),n("span",{class:"token number"},"4"),s(),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},";= 9"),s(`

`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"load"),s(),n("span",{class:"token string"},'"/dir/lib2.l"'),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"lib-calc"),s(),n("span",{class:"token number"},"4"),s(),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},";= 20"),s(`
`)])])],-1),Vc=n("h3",{id:"import-scripts-from-urls",tabindex:"-1"},[s("Import Scripts from URLs "),n("a",{class:"header-anchor",href:"#import-scripts-from-urls","aria-hidden":"true"},"#")],-1),Bc=n("p",null,[s("Inspired by "),n("a",{href:"https://deno.land",target:"_blank",rel:"noopener noreferrer"},"Deno"),s(" you can also import remote scripts from URLs, e.g:")],-1),zc=n("div",{class:"language-lisp"},[n("pre",null,[n("code",null,[n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"load"),s(),n("span",{class:"token string"},'"https://example.org/lib.l"'),n("span",{class:"token punctuation"},")"),s(`
`)])])],-1),Uc=n("h3",{id:"locally-cached",tabindex:"-1"},[s("Locally Cached "),n("a",{class:"header-anchor",href:"#locally-cached","aria-hidden":"true"},"#")],-1),Yc=n("p",null,[s("Like "),n("a",{href:"https://deno.land/manual.html",target:"_blank",rel:"noopener noreferrer"},"Deno"),s(" all remote resources are cached after first use so after it's loaded once it only loads the locally cached version of the script (where it will still work in an airplane without an internet connection). This cache is maintained under a "),n("code",null,".lisp"),s(" folder at your configured Virtual Files provider (that can be deleted to clear any caches).")],-1),$c=n("p",null,[s("For Sharp Scripts or Apps using the "),n("code",null,"web"),s(" or "),n("code",null,"app"),s(" dotnet tools it's stored in its own cache folder that can be cleared with:")],-1),Xc=n("pre",null,[n("code",null,`$ web --clean
`)],-1),Kc=n("h3",{id:"import-scripts-from-gists",tabindex:"-1"},[s("Import Scripts from Gists "),n("a",{class:"header-anchor",href:"#import-scripts-from-gists","aria-hidden":"true"},"#")],-1),Qc=n("p",null,[s("There's also first-class support for gists which you can reference with "),n("code",null,"gist:<gist-id>"),s(", e.g:")],-1),Jc=n("div",{class:"language-lisp"},[n("pre",null,[n("code",null,[n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"load"),s(),n("span",{class:"token string"},'"gist:2f14d629ba1852ee55865607f1fa2c3e"'),n("span",{class:"token punctuation"},")"),s(`
`)])])],-1),Zc=n("p",null,"This will load all gist files in gist order, if you only to load a single file from a gist you can specify it with:",-1),nl=n("div",{class:"language-lisp"},[n("pre",null,[n("code",null,[n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"load"),s(),n("span",{class:"token string"},'"gist:2f14d629ba1852ee55865607f1fa2c3e/lib1.l"'),n("span",{class:"token punctuation"},")"),s(`
`)])])],-1),sl=n("h3",{id:"script-lisp-library-index",tabindex:"-1"},[s("Script Lisp Library Index "),n("a",{class:"header-anchor",href:"#script-lisp-library-index","aria-hidden":"true"},"#")],-1),tl=n("p",null,[s("To provide human readable names to remote Lisp Scripts and a discoverable catalog where anyone can share their own scripts, you reference gists by name listed in the "),n("a",{href:"https://gist.github.com/gistlyn/3624b0373904cfb2fc7bb3c2cb9dc1a3",target:"_blank",rel:"noopener noreferrer"},"#Script Lisp Library Index"),s(" which is itself a self-documenting machine and human readable gist of named links to external gists maintained by their respective authors.")],-1),al=n("p",null,[s("Index library references can be loaded using the format "),n("code",null,"index:<name>"),s(", e.g:")],-1),el=n("div",{class:"language-lisp"},[n("pre",null,[n("code",null,[n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"load"),s(),n("span",{class:"token string"},'"index:lib-calc"'),n("span",{class:"token punctuation"},")"),s(`
`)])])],-1),ol=n("p",null,"Which also support being able to reference individual gist files:",-1),cl=n("div",{class:"language-lisp"},[n("pre",null,[n("code",null,[n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"load"),s(),n("span",{class:"token string"},'"index:lib-calc/lib1.l"'),n("span",{class:"token punctuation"},")"),s(`
`)])])],-1),ll=n("p",null,[s("If you'd like to share your own Lisp Scripts with everyone and publish your library to the index, just add a link to your gist with your preferred name in the "),n("a",{href:"https://gist.github.com/gistlyn/3624b0373904cfb2fc7bb3c2cb9dc1a3",target:"_blank",rel:"noopener noreferrer"},"Gist Index Comments"),s(".")],-1),pl=n("h3",{id:"viewing-script-source-code",tabindex:"-1"},[s("Viewing Script Source Code "),n("a",{class:"header-anchor",href:"#viewing-script-source-code","aria-hidden":"true"},"#")],-1),il=n("p",null,[s("You can view the source code of any load script references with "),n("code",null,"load-src"),s(", e.g:")],-1),rl=n("div",{class:"language-lisp"},[n("pre",null,[n("code",null,[n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"load-src"),s(),n("span",{class:"token quoted-symbol variable symbol"},"'lib"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"load-src"),s(),n("span",{class:"token string"},'"/dir/lib2.l"'),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"load-src"),s(),n("span",{class:"token string"},'"https://example.org/lib.l"'),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"load-src"),s(),n("span",{class:"token string"},'"gist:2f14d629ba1852ee55865607f1fa2c3e/lib1.l"'),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token car"},"load-src"),s(),n("span",{class:"token string"},'"index:lib-calc"'),n("span",{class:"token punctuation"},")"),s(`
`)])])],-1),ul=n("h3",{id:"disable-remote-imports",tabindex:"-1"},[s("Disable Remote Imports "),n("a",{class:"header-anchor",href:"#disable-remote-imports","aria-hidden":"true"},"#")],-1),kl=n("p",null,"Should you wish, you can prevent anyone from loading remote scripts with:",-1),dl=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[s("Lisp"),n("span",{class:"token punctuation"},"."),s("AllowLoadingRemoteScripts "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},";"),s(`
`)])])],-1),hl=n("h3",{id:"script-pages-integration",tabindex:"-1"},[s("#Script Pages Integration "),n("a",{class:"header-anchor",href:"#script-pages-integration","aria-hidden":"true"},"#")],-1),gl=n("p",null,[s("Whilst Lisp is a small, powerfully expressive functional dynamic language it's not great for use as a templating language. Whilst there have been "),n("a",{href:"https://www.cliki.net/HTML%20generator",target:"_blank",rel:"noopener noreferrer"},"several attempts to create a HTML DSL in Lisp"),s(", nothing is better than having "),n("strong",null,"no syntax"),s(" which is the default "),n("strong",null,"Template mode"),s(" for "),n("code",null,"#Script"),s(" where it will emit everything that's not in a Template or Language Expression as verbatim text.")],-1),ml=n("p",null,[s(`A nice USP of Script Lisp is that you're never forced into going "full Lisp", you can utilize `),n("code",null,"#Script"),s(" template expressions and "),n("a",{href:"https://sharpscript.net/docs/blocks",target:"_blank",rel:"noopener noreferrer"},"Script Blocks"),s(" handlebars syntax that provides the ideal DSL for usage in a Template Language for generating HTML and utilize your preferred "),n("code",null,"Lisp"),s(" or "),n("a",{href:"https://sharpscript.net/scode/",target:"_blank",rel:"noopener noreferrer"},"Code"),s(" Script Languages for any computational logic you want included in your page using "),n("a",{href:"https://sharpscript.net/docs/syntax#language-blocks-and-expressions",target:"_blank",rel:"noopener noreferrer"},"Language Blocks and Expressions"),s(".")],-1),fl=n("h4",{id:"implementation",tabindex:"-1"},[s("Implementation "),n("a",{class:"header-anchor",href:"#implementation","aria-hidden":"true"},"#")],-1),bl=n("p",null,[s("Despite being implemented in different languages a "),n("code",null,"#Script"),s(" page containing multiple languages, e.g:")],-1),yl=n("p",null,[n("a",{href:"https://sharpscript.net/lisp/#implementation",target:"_blank",rel:"noopener noreferrer"},[n("img",{src:"https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/sharpscript/linq01-langs.png",alt:""})])],-1),_l=n("p",null,[s("Still only produces a "),n("strong",null,"single page AST"),s(", where when first loaded "),n("code",null,"#Script"),s(" parses the page contents as a contiguous "),n("code",null,"ReadOnlyMemory<char>"),s(" where page slices of any "),n("a",{href:"https://sharpscript.net/docs/syntax#language-blocks-and-expressions",target:"_blank",rel:"noopener noreferrer"},"Language Blocks and Expressions"),s(" on the page are delegated to the "),n("code",null,"ScriptContext"),s(" registered "),n("code",null,"ScriptLanguages"),s(" for parsing which returns a fragment which is added to the pages AST:")],-1),wl=n("p",null,[n("a",{href:"/images/sharpscript/multi-langs.svg",target:"_blank",rel:"noopener noreferrer"},[n("img",{src:o,alt:""})])],-1),vl=n("p",null,[s("When executing the page, each language is responsible for rendering its own fragments which all write directly to the pages "),n("code",null,"OutputStream"),s(" to generate the pages output.")],-1),Sl=n("p",null,[s("The multi-languages support in "),n("code",null,"#Script"),s(" is designed to be extensible where everything about the language is encapsulated within its "),n("code",null,"ScriptLanguage"),s(" implementation so that if you omit its registration:")],-1),xl=n("div",{class:"language-"},[n("pre",null,[n("code",null,`    var context = new ScriptContext {
    //    ScriptLanguages = { ScriptLisp.Language }
    }.Init();
`)])],-1),Tl=n("p",null,"Any language expressions and language blocks referencing it become inert and its source code emitted as plain-text.",-1),Ll=n("h3",{id:"lisp-argument-scopes",tabindex:"-1"},[s("Lisp Argument Scopes "),n("a",{class:"header-anchor",href:"#lisp-argument-scopes","aria-hidden":"true"},"#")],-1),Al=n("p",null,[s("One differentiator between Lisp and "),n("a",{href:"https://sharpscript.net/scode/",target:"_blank",rel:"noopener noreferrer"},"Code"),s(" languages is that "),n("code",null,"code"),s(" utilizes the containing page current scope for all its argument references where as Lisp stores all its definitions within the Lisp interpreter symbol table attached to the "),n("code",null,"PageResult"),s(", so whilst Lisp scripts can access arguments within the pages scope, in order for the outer page to access any Lisp symbols they need to be exported, e.g:")],-1),Cl=n("p",null,[n("a",{href:"https://sharpscript.net/lisp/#lisp-argument-scopes",target:"_blank",rel:"noopener noreferrer"},[n("img",{src:"https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/sharpscript/lisp-arg-scopes.png",alt:""})])],-1),Il=n("h3",{id:"exporting-lisp-functions",tabindex:"-1"},[s("Exporting Lisp Functions "),n("a",{class:"header-anchor",href:"#exporting-lisp-functions","aria-hidden":"true"},"#")],-1),El=n("p",null,[s("Lisp functions can also be exported for usage in the rest of the page by calling "),n("code",null,"(to-delegate lispFn)"),s(" to convert it into a .NET Delegate, e.g:")],-1),Pl=n("p",null,[n("a",{href:"https://sharpscript.net/lisp/#exporting-lisp-functions",target:"_blank",rel:"noopener noreferrer"},[n("img",{src:"https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/sharpscript/lisp-export-fns.png",alt:""})])],-1),Nl=n("p",null,[s("Although an easier way to define functions in Lisp is to use the "),n("a",{href:"https://sharpscript.net/docs/blocks#defn",target:"_blank",rel:"noopener noreferrer"},"defn Script Block"),s(" which wraps this in a convenient syntax:")],-1),Fl=n("p",null,[n("a",{href:"https://sharpscript.net/lisp/#exporting-lisp-functions",target:"_blank",rel:"noopener noreferrer"},[n("img",{src:"https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/sharpscript/lisp-defn-block.png",alt:""})])],-1),Rl=n("h3",{id:"controlling-lisp-output",tabindex:"-1"},[s("Controlling Lisp output "),n("a",{class:"header-anchor",href:"#controlling-lisp-output","aria-hidden":"true"},"#")],-1),Ml=n("p",null,[s("One of Lisp's famous traits is "),n("strong",null,"everything is an expression"),s(" which is typically desired within a language, but may not be what you want when generating output. E.g traditionally Lisp uses "),n("a",{href:"http://www.lispworks.com/documentation/HyperSpec/Body/s_setq.htm",target:"_blank",rel:"noopener noreferrer"},"setq"),s(" to set a variable which also returns its value that "),n("code",null,"#Script"),s(" will emit as it automatically emits all statement return values.")],-1),jl=n("p",null,[s("You could use "),n("code",null,"def"),s(" which is an alias for "),n("code",null,"setq"),s(" which returns "),n("code",null,"null"),s(", other options include wrapping all statements within an empty "),n("code",null,"let"),s(" expression where only the last expression is returned, or you could use a "),n("a",{href:"https://sharpscript.net/docs/syntax#language-block-modifiers",target:"_blank",rel:"noopener noreferrer"},"Language Block Modifier"),s(" to ignore the entire "),n("code",null,"lisp"),s(" block output and only export the result you want to be able to control precisely where to emit it:")],-1),Dl=n("p",null,[n("a",{href:"https://sharpscript.net/lisp/#controlling-lisp-output",target:"_blank",rel:"noopener noreferrer"},[n("img",{src:"https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/sharpscript/lisp-control-output.png",alt:""})])],-1),ql=n("blockquote",null,[n("p",null,"can use either 'q', 'quiet' or 'mute' block modifier to ignore output")],-1),Ol=n("p",null,"Another way to generate output from Lisp is to use its built-in print functions below:",-1),Hl=n("ul",null,[n("li",null,[n("strong",null,"(print ...args)"),s(" - write all arguments to the "),n("code",null,"OutputStream")]),n("li",null,[n("strong",null,"(println ...args)"),s(" - write all arguments to the "),n("code",null,"OutputStream"),s(" followed by a "),n("strong",null,"new line")]),n("li",null,[n("strong",null,"(printlns ...args)"),s(" - write all arguments to the "),n("code",null,"OutputStream"),s(" with a "),n("code",null,"' '"),s(),n("strong",null,"space delimiter"),s(" followed by a "),n("strong",null,"new line")]),n("li",null,[n("strong",null,"(pr ...args)"),s(" - same as "),n("code",null,"print"),s(" but "),n("strong",null,"HTML encode"),s(" all arguments")]),n("li",null,[n("strong",null,"(prn ...args)"),s(" - same as "),n("code",null,"println"),s(" but "),n("strong",null,"HTML encode"),s(" all arguments")])],-1),Wl=n("h2",{id:"learn-script-lisp",tabindex:"-1"},[s("Learn #Script Lisp "),n("a",{class:"header-anchor",href:"#learn-script-lisp","aria-hidden":"true"},"#")],-1),Gl=n("p",null,[s("A great resource for learning Script Lisp is seeing it in action by seeing how to implement "),n("strong",null,"C#'s 101 LINQ Examples in Lisp"),s(":")],-1),Vl=n("div",{class:"text-center py-5"},[n("a",{href:"https://sharpscript.net/linq/restriction-operators?lang=lisp",class:"btn btn-outline-primary btn-lg"},"Lisp LINQ Examples")],-1),Bl=n("h3",{id:"explore-apis-in-real-time",tabindex:"-1"},[s("Explore APIs in real-time "),n("a",{class:"header-anchor",href:"#explore-apis-in-real-time","aria-hidden":"true"},"#")],-1),zl=n("p",null,[s("We can also take advantage of Lisp's dynamism and interactivity to explore APIs in real-time, a great way to do this is via a "),n("a",{href:"#run-and-watch-lisp-scripts"},"watched Lisp script"),s(" on the side where it provides instant feedback after each "),n("code",null,"Ctrl+S"),s(" save point or a active "),n("a",{href:"#lisp-repl"},"Lisp REPL"),s(".")],-1),Ul=n("ul",null,[n("li",null,[n("strong",null,"symbols"),s(" - List all symbols in Lisp interpreter - most symbols are named after "),n("a",{href:"http://www.lispworks.com/documentation/HyperSpec/Front/X_AllSym.htm",target:"_blank",rel:"noopener noreferrer"},"standard Lisp"),s(" or "),n("a",{href:"https://clojure.org/api/cheatsheet",target:"_blank",rel:"noopener noreferrer"},"clojure functions")]),n("li",null,[n("strong",null,"(symbol-type symbol)"),s(" - Display the Symbol's Value Type")]),n("li",null,[n("strong",null,"scriptMethods"),s(" - List all available Script Method Names registered in "),n("code",null,"ScriptContext")]),n("li",null,[n("strong",null,"scriptMethodTypes"),s(" - List all available Script Method Type information")]),n("li",null,[n("strong",null,"(joinln collection)"),s(" - Display the string output of each item in the collection on a separate line")]),n("li",null,[n("strong",null,"(globln pattern collection)"),s(" - Only display lines matching the glob pattern")]),n("li",null,[n("strong",null,"(typeName instance)"),s(" - View the instance Type Name")]),n("li",null,[n("strong",null,"(props instance)"),s(" - Display the Property names of an Instance public properties")]),n("li",null,[n("strong",null,"(fields instance)"),s(" - Display the Field names of an Instance public fields")]),n("li",null,[n("strong",null,"(methods instance)"),s(" - Display the Method names of an Instance public methods")]),n("li",null,[n("strong",null,"(propTypes instance)"),s(" - Get the PropertyInfo[] of an Instance public properties")]),n("li",null,[n("strong",null,"(fieldTypes instance)"),s(" - Get the FieldInfo[] of an Instance public fields")]),n("li",null,[n("strong",null,"(methodTypes instance)"),s(" - Get the Script Method Infos of an Instance public methods")]),n("li",null,[n("strong",null,"(staticProps instance)"),s(" - Display the Property names of an Instance public static properties")]),n("li",null,[n("strong",null,"(staticFields instance)"),s(" - Display the Field names of an Instance public static fields")]),n("li",null,[n("strong",null,"(staticMethods instance)"),s(" - Display the Method names of an Instance public static methods")]),n("li",null,[n("strong",null,"(staticPropTypes instance)"),s(" - Get the PropertyInfo[] of an Instance public static properties")]),n("li",null,[n("strong",null,"(staticFieldTypes instance)"),s(" - Get the FieldInfo[] of an Instance public static fields")]),n("li",null,[n("strong",null,"(staticMethodTypes instance)"),s(" - Get the Script Method Infos of an Instance public static methods")])],-1),Yl=n("p",null,[s("You can view the "),n("a",{href:"https://sharpscript.net/docs/scripts-reference",target:"_blank",rel:"noopener noreferrer"},"Scripts API Reference"),s(" and "),n("a",{href:"https://sharpscript.net/docs/default-scripts",target:"_blank",rel:"noopener noreferrer"},"Scripts Documentation"),s(" on this website to interactively explore the available APIs, we'll work on providing further interactive documentation for the built-in Lisp functions, in the mean-time the best resource are "),n("a",{href:"https://github.com/ServiceStack/ServiceStack/blob/32185f14aaf93d768dda5673381aa0d2fdbe34b4/src/ServiceStack.Common/Script/ScriptLanguage.Lisp.cs#L3106-L3508",target:"_blank",rel:"noopener noreferrer"},"their implementation"),s(".")],-1),$l=n("p",null,"For reference, here's are a quick list of all built-in Lisp symbols:",-1),Xl=n("pre",null,[n("code",null,`- % * *gensym-counter* *version* / /= _append _nreverse + < <= = > >= 1- 1+ 1st 2nd 3rd abs all? and any? 
append apply assoc assoc-key assoc-value assq atom atom? average butlast C caaar caadr caar cadar caddr 
cadr car cdaar cdadr cdar cddar cdddr cddr cdr ceiling cons cons? consp cos count debug dec decf def 
defmacro defn defun dispose dolist doseq doseq-while dotimes dump dump-inline elt empty? end? endp 
enumerator enumeratorCurrent enumeratorNext eq eql equal error even? every every? exit exp expt F f++ 
false filter filter-index first flatmap flatten floor gensym glob globln group-by htmldump identity if 
inc incf instance? intern isqrt it last length let letrec list list? listp load load-src logand logior 
logxor lower-case make-symbol map mapc mapcan mapcar map-index map-where max member memq min mod nbutlast 
nconc new new-map next not not= nreverse nth nthcdr null number? odd? or order-by pop pr prin1 princ 
print println printlns prn prs push push-end random range reduce remove remove-if rest return reverse 
round rplaca rplacd second seq? setcar setcdr set-difference sets sin skip skip-while some some? sort 
sort-by sqrt str string string? string-downcase string-upcase subseq sum symbol-name symbol-type t take 
take-while tan terpri textdump third to-array to-cons to-delegate to-dictionary to-list true truncate 
union unless upper-case when where where-index while zero? zerop zip zip-where
`)],-1),Kl=n("p",null,[s("Common Lisp by convention uses a "),n("code",null,"*p"),s(" suffix for "),n("strong",null,"predicate"),s(" functions but we prefer Clojure's (and Ruby's) more readable "),n("code",null,"*?"),s(" suffix convention, for source-code compatibility we include both for "),n("a",{href:"http://jtra.cz/stuff/lisp/sclr/index.html",target:"_blank",rel:"noopener noreferrer"},"core Lisp predicts"),s(" and just "),n("code",null,"*?"),s(" for others.")],-1),Ql=n("h2",{id:"happy-hacking",tabindex:"-1"},[s("Happy Hacking! "),n("a",{class:"header-anchor",href:"#happy-hacking","aria-hidden":"true"},"#")],-1),Jl=n("p",null,[s("We hope you enjoy the enhancments to "),n("code",null,"#Script"),s(" in this release and can't wait to see what you do with it. Any Questions or Feedback about this release is welcome on the "),n("a",{href:"https://forums.servicestack.net/",target:"_blank",rel:"noopener noreferrer"},"Customer Forums"),s(".")],-1),Zl=[l,p,i,r,u,k,d,h,g,m,f,b,y,_,w,v,S,x,T,L,A,C,I,E,P,N,F,R,M,j,D,q,O,H,W,G,V,B,z,U,Y,$,X,K,Q,J,Z,nn,sn,tn,an,en,on,cn,ln,pn,rn,un,kn,dn,hn,gn,mn,fn,bn,yn,_n,wn,vn,Sn,xn,Tn,Ln,An,Cn,In,En,Pn,Nn,Fn,Rn,Mn,jn,Dn,qn,On,Hn,Wn,Gn,Vn,Bn,zn,Un,Yn,$n,Xn,Kn,Qn,Jn,Zn,ns,ss,ts,as,es,os,cs,ls,ps,is,rs,us,ks,ds,hs,gs,ms,fs,bs,ys,_s,ws,vs,Ss,xs,Ts,Ls,As,Cs,Is,Es,Ps,Ns,Fs,Rs,Ms,js,Ds,qs,Os,Hs,Ws,Gs,Vs,Bs,zs,Us,Ys,$s,Xs,Ks,Qs,Js,Zs,nt,st,tt,at,et,ot,ct,lt,pt,it,rt,ut,kt,dt,ht,gt,mt,ft,bt,yt,_t,wt,vt,St,xt,Tt,Lt,At,Ct,It,Et,Pt,Nt,Ft,Rt,Mt,jt,Dt,qt,Ot,Ht,Wt,Gt,Vt,Bt,zt,Ut,Yt,$t,Xt,Kt,Qt,Jt,Zt,na,sa,ta,aa,ea,oa,ca,la,pa,ia,ra,ua,ka,da,ha,ga,ma,fa,ba,ya,_a,wa,va,Sa,xa,Ta,La,Aa,Ca,Ia,Ea,Pa,Na,Fa,Ra,Ma,ja,Da,qa,Oa,Ha,Wa,Ga,Va,Ba,za,Ua,Ya,$a,Xa,Ka,Qa,Ja,Za,ne,se,te,ae,ee,oe,ce,le,pe,ie,re,ue,ke,de,he,ge,me,fe,be,ye,_e,we,ve,Se,xe,Te,Le,Ae,Ce,Ie,Ee,Pe,Ne,Fe,Re,Me,je,De,qe,Oe,He,We,Ge,Ve,Be,ze,Ue,Ye,$e,Xe,Ke,Qe,Je,Ze,no,so,to,ao,eo,oo,co,lo,po,io,ro,uo,ko,ho,go,mo,fo,bo,yo,_o,wo,vo,So,xo,To,Lo,Ao,Co,Io,Eo,Po,No,Fo,Ro,Mo,jo,Do,qo,Oo,Ho,Wo,Go,Vo,Bo,zo,Uo,Yo,$o,Xo,Ko,Qo,Jo,Zo,nc,sc,tc,ac,ec,oc,cc,lc,pc,ic,rc,uc,kc,dc,hc,gc,mc,fc,bc,yc,_c,wc,vc,Sc,xc,Tc,Lc,Ac,Cc,Ic,Ec,Pc,Nc,Fc,Rc,Mc,jc,Dc,qc,Oc,Hc,Wc,Gc,Vc,Bc,zc,Uc,Yc,$c,Xc,Kc,Qc,Jc,Zc,nl,sl,tl,al,el,ol,cl,ll,pl,il,rl,ul,kl,dl,hl,gl,ml,fl,bl,yl,_l,wl,vl,Sl,xl,Tl,Ll,Al,Cl,Il,El,Pl,Nl,Fl,Rl,Ml,jl,Dl,ql,Ol,Hl,Wl,Gl,Vl,Bl,zl,Ul,Yl,$l,Xl,Kl,Ql,Jl];function np(sp,tp,ap,ep,op,cp){return e(),a("div",null,Zl)}var ip=t(c,[["render",np]]);export{pp as __pageData,ip as default};
