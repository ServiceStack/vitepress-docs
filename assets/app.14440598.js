var An=Object.defineProperty,Nn=Object.defineProperties;var Rn=Object.getOwnPropertyDescriptors;var wn=Object.getOwnPropertySymbols;var $n=Object.prototype.hasOwnProperty,On=Object.prototype.propertyIsEnumerable;var Cn=(n,a,s)=>a in n?An(n,a,{enumerable:!0,configurable:!0,writable:!0,value:s}):n[a]=s,Sn=(n,a)=>{for(var s in a||(a={}))$n.call(a,s)&&Cn(n,s,a[s]);if(wn)for(var s of wn(a))On.call(a,s)&&Cn(n,s,a[s]);return n},En=(n,a)=>Nn(n,Rn(a));function makeMap(n,a){const s=Object.create(null),t=n.split(",");for(let e=0;e<t.length;e++)s[t[e]]=!0;return a?e=>!!s[e.toLowerCase()]:e=>!!s[e]}const specialBooleanAttrs="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",isSpecialBooleanAttr=makeMap(specialBooleanAttrs);function includeBooleanAttr(n){return!!n||n===""}function normalizeStyle(n){if(isArray$1(n)){const a={};for(let s=0;s<n.length;s++){const t=n[s],e=isString(t)?parseStringStyle(t):normalizeStyle(t);if(e)for(const o in e)a[o]=e[o]}return a}else{if(isString(n))return n;if(isObject(n))return n}}const listDelimiterRE=/;(?![^(]*\))/g,propertyDelimiterRE=/:(.+)/;function parseStringStyle(n){const a={};return n.split(listDelimiterRE).forEach(s=>{if(s){const t=s.split(propertyDelimiterRE);t.length>1&&(a[t[0].trim()]=t[1].trim())}}),a}function normalizeClass(n){let a="";if(isString(n))a=n;else if(isArray$1(n))for(let s=0;s<n.length;s++){const t=normalizeClass(n[s]);t&&(a+=t+" ")}else if(isObject(n))for(const s in n)n[s]&&(a+=s+" ");return a.trim()}const toDisplayString=n=>n==null?"":isArray$1(n)||isObject(n)&&(n.toString===objectToString||!isFunction(n.toString))?JSON.stringify(n,replacer,2):String(n),replacer=(n,a)=>a&&a.__v_isRef?replacer(n,a.value):isMap(a)?{[`Map(${a.size})`]:[...a.entries()].reduce((s,[t,e])=>(s[`${t} =>`]=e,s),{})}:isSet(a)?{[`Set(${a.size})`]:[...a.values()]}:isObject(a)&&!isArray$1(a)&&!isPlainObject(a)?String(a):a,EMPTY_OBJ={},EMPTY_ARR=[],NOOP=()=>{},NO=()=>!1,onRE=/^on[^a-z]/,isOn=n=>onRE.test(n),isModelListener=n=>n.startsWith("onUpdate:"),extend=Object.assign,remove=(n,a)=>{const s=n.indexOf(a);s>-1&&n.splice(s,1)},hasOwnProperty=Object.prototype.hasOwnProperty,hasOwn=(n,a)=>hasOwnProperty.call(n,a),isArray$1=Array.isArray,isMap=n=>toTypeString(n)==="[object Map]",isSet=n=>toTypeString(n)==="[object Set]",isFunction=n=>typeof n=="function",isString=n=>typeof n=="string",isSymbol=n=>typeof n=="symbol",isObject=n=>n!==null&&typeof n=="object",isPromise=n=>isObject(n)&&isFunction(n.then)&&isFunction(n.catch),objectToString=Object.prototype.toString,toTypeString=n=>objectToString.call(n),toRawType=n=>toTypeString(n).slice(8,-1),isPlainObject=n=>toTypeString(n)==="[object Object]",isIntegerKey=n=>isString(n)&&n!=="NaN"&&n[0]!=="-"&&""+parseInt(n,10)===n,isReservedProp=makeMap(",key,ref,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),cacheStringFunction=n=>{const a=Object.create(null);return s=>a[s]||(a[s]=n(s))},camelizeRE=/-(\w)/g,camelize=cacheStringFunction(n=>n.replace(camelizeRE,(a,s)=>s?s.toUpperCase():"")),hyphenateRE=/\B([A-Z])/g,hyphenate=cacheStringFunction(n=>n.replace(hyphenateRE,"-$1").toLowerCase()),capitalize=cacheStringFunction(n=>n.charAt(0).toUpperCase()+n.slice(1)),toHandlerKey=cacheStringFunction(n=>n?`on${capitalize(n)}`:""),hasChanged=(n,a)=>!Object.is(n,a),invokeArrayFns=(n,a)=>{for(let s=0;s<n.length;s++)n[s](a)},def=(n,a,s)=>{Object.defineProperty(n,a,{configurable:!0,enumerable:!1,value:s})},toNumber=n=>{const a=parseFloat(n);return isNaN(a)?n:a};let _globalThis;const getGlobalThis=()=>_globalThis||(_globalThis=typeof globalThis!="undefined"?globalThis:typeof self!="undefined"?self:typeof window!="undefined"?window:typeof global!="undefined"?global:{});let activeEffectScope;const effectScopeStack=[];class EffectScope{constructor(a=!1){this.active=!0,this.effects=[],this.cleanups=[],!a&&activeEffectScope&&(this.parent=activeEffectScope,this.index=(activeEffectScope.scopes||(activeEffectScope.scopes=[])).push(this)-1)}run(a){if(this.active)try{return this.on(),a()}finally{this.off()}}on(){this.active&&(effectScopeStack.push(this),activeEffectScope=this)}off(){this.active&&(effectScopeStack.pop(),activeEffectScope=effectScopeStack[effectScopeStack.length-1])}stop(a){if(this.active){if(this.effects.forEach(s=>s.stop()),this.cleanups.forEach(s=>s()),this.scopes&&this.scopes.forEach(s=>s.stop(!0)),this.parent&&!a){const s=this.parent.scopes.pop();s&&s!==this&&(this.parent.scopes[this.index]=s,s.index=this.index)}this.active=!1}}}function recordEffectScope(n,a){a=a||activeEffectScope,a&&a.active&&a.effects.push(n)}const createDep=n=>{const a=new Set(n);return a.w=0,a.n=0,a},wasTracked=n=>(n.w&trackOpBit)>0,newTracked=n=>(n.n&trackOpBit)>0,initDepMarkers=({deps:n})=>{if(n.length)for(let a=0;a<n.length;a++)n[a].w|=trackOpBit},finalizeDepMarkers=n=>{const{deps:a}=n;if(a.length){let s=0;for(let t=0;t<a.length;t++){const e=a[t];wasTracked(e)&&!newTracked(e)?e.delete(n):a[s++]=e,e.w&=~trackOpBit,e.n&=~trackOpBit}a.length=s}},targetMap=new WeakMap;let effectTrackDepth=0,trackOpBit=1;const maxMarkerBits=30,effectStack=[];let activeEffect;const ITERATE_KEY=Symbol(""),MAP_KEY_ITERATE_KEY=Symbol("");class ReactiveEffect{constructor(a,s=null,t){this.fn=a,this.scheduler=s,this.active=!0,this.deps=[],recordEffectScope(this,t)}run(){if(!this.active)return this.fn();if(!effectStack.includes(this))try{return effectStack.push(activeEffect=this),enableTracking(),trackOpBit=1<<++effectTrackDepth,effectTrackDepth<=maxMarkerBits?initDepMarkers(this):cleanupEffect(this),this.fn()}finally{effectTrackDepth<=maxMarkerBits&&finalizeDepMarkers(this),trackOpBit=1<<--effectTrackDepth,resetTracking(),effectStack.pop();const a=effectStack.length;activeEffect=a>0?effectStack[a-1]:void 0}}stop(){this.active&&(cleanupEffect(this),this.onStop&&this.onStop(),this.active=!1)}}function cleanupEffect(n){const{deps:a}=n;if(a.length){for(let s=0;s<a.length;s++)a[s].delete(n);a.length=0}}let shouldTrack=!0;const trackStack=[];function pauseTracking(){trackStack.push(shouldTrack),shouldTrack=!1}function enableTracking(){trackStack.push(shouldTrack),shouldTrack=!0}function resetTracking(){const n=trackStack.pop();shouldTrack=n===void 0?!0:n}function track(n,a,s){if(!isTracking())return;let t=targetMap.get(n);t||targetMap.set(n,t=new Map);let e=t.get(s);e||t.set(s,e=createDep()),trackEffects(e)}function isTracking(){return shouldTrack&&activeEffect!==void 0}function trackEffects(n,a){let s=!1;effectTrackDepth<=maxMarkerBits?newTracked(n)||(n.n|=trackOpBit,s=!wasTracked(n)):s=!n.has(activeEffect),s&&(n.add(activeEffect),activeEffect.deps.push(n))}function trigger$1(n,a,s,t,e,o){const c=targetMap.get(n);if(!c)return;let l=[];if(a==="clear")l=[...c.values()];else if(s==="length"&&isArray$1(n))c.forEach((u,i)=>{(i==="length"||i>=t)&&l.push(u)});else switch(s!==void 0&&l.push(c.get(s)),a){case"add":isArray$1(n)?isIntegerKey(s)&&l.push(c.get("length")):(l.push(c.get(ITERATE_KEY)),isMap(n)&&l.push(c.get(MAP_KEY_ITERATE_KEY)));break;case"delete":isArray$1(n)||(l.push(c.get(ITERATE_KEY)),isMap(n)&&l.push(c.get(MAP_KEY_ITERATE_KEY)));break;case"set":isMap(n)&&l.push(c.get(ITERATE_KEY));break}if(l.length===1)l[0]&&triggerEffects(l[0]);else{const u=[];for(const i of l)i&&u.push(...i);triggerEffects(createDep(u))}}function triggerEffects(n,a){for(const s of isArray$1(n)?n:[...n])(s!==activeEffect||s.allowRecurse)&&(s.scheduler?s.scheduler():s.run())}const isNonTrackableKeys=makeMap("__proto__,__v_isRef,__isVue"),builtInSymbols=new Set(Object.getOwnPropertyNames(Symbol).map(n=>Symbol[n]).filter(isSymbol)),get=createGetter(),shallowGet=createGetter(!1,!0),readonlyGet=createGetter(!0),arrayInstrumentations=createArrayInstrumentations();function createArrayInstrumentations(){const n={};return["includes","indexOf","lastIndexOf"].forEach(a=>{n[a]=function(...s){const t=toRaw(this);for(let o=0,c=this.length;o<c;o++)track(t,"get",o+"");const e=t[a](...s);return e===-1||e===!1?t[a](...s.map(toRaw)):e}}),["push","pop","shift","unshift","splice"].forEach(a=>{n[a]=function(...s){pauseTracking();const t=toRaw(this)[a].apply(this,s);return resetTracking(),t}}),n}function createGetter(n=!1,a=!1){return function(t,e,o){if(e==="__v_isReactive")return!n;if(e==="__v_isReadonly")return n;if(e==="__v_raw"&&o===(n?a?shallowReadonlyMap:readonlyMap:a?shallowReactiveMap:reactiveMap).get(t))return t;const c=isArray$1(t);if(!n&&c&&hasOwn(arrayInstrumentations,e))return Reflect.get(arrayInstrumentations,e,o);const l=Reflect.get(t,e,o);return(isSymbol(e)?builtInSymbols.has(e):isNonTrackableKeys(e))||(n||track(t,"get",e),a)?l:isRef(l)?!c||!isIntegerKey(e)?l.value:l:isObject(l)?n?readonly(l):reactive(l):l}}const set=createSetter(),shallowSet=createSetter(!0);function createSetter(n=!1){return function(s,t,e,o){let c=s[t];if(!n&&(e=toRaw(e),c=toRaw(c),!isArray$1(s)&&isRef(c)&&!isRef(e)))return c.value=e,!0;const l=isArray$1(s)&&isIntegerKey(t)?Number(t)<s.length:hasOwn(s,t),u=Reflect.set(s,t,e,o);return s===toRaw(o)&&(l?hasChanged(e,c)&&trigger$1(s,"set",t,e):trigger$1(s,"add",t,e)),u}}function deleteProperty(n,a){const s=hasOwn(n,a);n[a];const t=Reflect.deleteProperty(n,a);return t&&s&&trigger$1(n,"delete",a,void 0),t}function has(n,a){const s=Reflect.has(n,a);return(!isSymbol(a)||!builtInSymbols.has(a))&&track(n,"has",a),s}function ownKeys(n){return track(n,"iterate",isArray$1(n)?"length":ITERATE_KEY),Reflect.ownKeys(n)}const mutableHandlers={get,set,deleteProperty,has,ownKeys},readonlyHandlers={get:readonlyGet,set(n,a){return!0},deleteProperty(n,a){return!0}},shallowReactiveHandlers=extend({},mutableHandlers,{get:shallowGet,set:shallowSet}),toShallow=n=>n,getProto=n=>Reflect.getPrototypeOf(n);function get$1(n,a,s=!1,t=!1){n=n.__v_raw;const e=toRaw(n),o=toRaw(a);a!==o&&!s&&track(e,"get",a),!s&&track(e,"get",o);const{has:c}=getProto(e),l=t?toShallow:s?toReadonly:toReactive;if(c.call(e,a))return l(n.get(a));if(c.call(e,o))return l(n.get(o));n!==e&&n.get(a)}function has$1(n,a=!1){const s=this.__v_raw,t=toRaw(s),e=toRaw(n);return n!==e&&!a&&track(t,"has",n),!a&&track(t,"has",e),n===e?s.has(n):s.has(n)||s.has(e)}function size(n,a=!1){return n=n.__v_raw,!a&&track(toRaw(n),"iterate",ITERATE_KEY),Reflect.get(n,"size",n)}function add(n){n=toRaw(n);const a=toRaw(this);return getProto(a).has.call(a,n)||(a.add(n),trigger$1(a,"add",n,n)),this}function set$1(n,a){a=toRaw(a);const s=toRaw(this),{has:t,get:e}=getProto(s);let o=t.call(s,n);o||(n=toRaw(n),o=t.call(s,n));const c=e.call(s,n);return s.set(n,a),o?hasChanged(a,c)&&trigger$1(s,"set",n,a):trigger$1(s,"add",n,a),this}function deleteEntry(n){const a=toRaw(this),{has:s,get:t}=getProto(a);let e=s.call(a,n);e||(n=toRaw(n),e=s.call(a,n)),t&&t.call(a,n);const o=a.delete(n);return e&&trigger$1(a,"delete",n,void 0),o}function clear(){const n=toRaw(this),a=n.size!==0,s=n.clear();return a&&trigger$1(n,"clear",void 0,void 0),s}function createForEach(n,a){return function(t,e){const o=this,c=o.__v_raw,l=toRaw(c),u=a?toShallow:n?toReadonly:toReactive;return!n&&track(l,"iterate",ITERATE_KEY),c.forEach((i,k)=>t.call(e,u(i),u(k),o))}}function createIterableMethod(n,a,s){return function(...t){const e=this.__v_raw,o=toRaw(e),c=isMap(o),l=n==="entries"||n===Symbol.iterator&&c,u=n==="keys"&&c,i=e[n](...t),k=s?toShallow:a?toReadonly:toReactive;return!a&&track(o,"iterate",u?MAP_KEY_ITERATE_KEY:ITERATE_KEY),{next(){const{value:d,done:m}=i.next();return m?{value:d,done:m}:{value:l?[k(d[0]),k(d[1])]:k(d),done:m}},[Symbol.iterator](){return this}}}}function createReadonlyMethod(n){return function(...a){return n==="delete"?!1:this}}function createInstrumentations(){const n={get(o){return get$1(this,o)},get size(){return size(this)},has:has$1,add,set:set$1,delete:deleteEntry,clear,forEach:createForEach(!1,!1)},a={get(o){return get$1(this,o,!1,!0)},get size(){return size(this)},has:has$1,add,set:set$1,delete:deleteEntry,clear,forEach:createForEach(!1,!0)},s={get(o){return get$1(this,o,!0)},get size(){return size(this,!0)},has(o){return has$1.call(this,o,!0)},add:createReadonlyMethod("add"),set:createReadonlyMethod("set"),delete:createReadonlyMethod("delete"),clear:createReadonlyMethod("clear"),forEach:createForEach(!0,!1)},t={get(o){return get$1(this,o,!0,!0)},get size(){return size(this,!0)},has(o){return has$1.call(this,o,!0)},add:createReadonlyMethod("add"),set:createReadonlyMethod("set"),delete:createReadonlyMethod("delete"),clear:createReadonlyMethod("clear"),forEach:createForEach(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(o=>{n[o]=createIterableMethod(o,!1,!1),s[o]=createIterableMethod(o,!0,!1),a[o]=createIterableMethod(o,!1,!0),t[o]=createIterableMethod(o,!0,!0)}),[n,s,a,t]}const[mutableInstrumentations,readonlyInstrumentations,shallowInstrumentations,shallowReadonlyInstrumentations]=createInstrumentations();function createInstrumentationGetter(n,a){const s=a?n?shallowReadonlyInstrumentations:shallowInstrumentations:n?readonlyInstrumentations:mutableInstrumentations;return(t,e,o)=>e==="__v_isReactive"?!n:e==="__v_isReadonly"?n:e==="__v_raw"?t:Reflect.get(hasOwn(s,e)&&e in t?s:t,e,o)}const mutableCollectionHandlers={get:createInstrumentationGetter(!1,!1)},shallowCollectionHandlers={get:createInstrumentationGetter(!1,!0)},readonlyCollectionHandlers={get:createInstrumentationGetter(!0,!1)},reactiveMap=new WeakMap,shallowReactiveMap=new WeakMap,readonlyMap=new WeakMap,shallowReadonlyMap=new WeakMap;function targetTypeMap(n){switch(n){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function getTargetType(n){return n.__v_skip||!Object.isExtensible(n)?0:targetTypeMap(toRawType(n))}function reactive(n){return n&&n.__v_isReadonly?n:createReactiveObject(n,!1,mutableHandlers,mutableCollectionHandlers,reactiveMap)}function shallowReactive(n){return createReactiveObject(n,!1,shallowReactiveHandlers,shallowCollectionHandlers,shallowReactiveMap)}function readonly(n){return createReactiveObject(n,!0,readonlyHandlers,readonlyCollectionHandlers,readonlyMap)}function createReactiveObject(n,a,s,t,e){if(!isObject(n)||n.__v_raw&&!(a&&n.__v_isReactive))return n;const o=e.get(n);if(o)return o;const c=getTargetType(n);if(c===0)return n;const l=new Proxy(n,c===2?t:s);return e.set(n,l),l}function isReactive(n){return isReadonly(n)?isReactive(n.__v_raw):!!(n&&n.__v_isReactive)}function isReadonly(n){return!!(n&&n.__v_isReadonly)}function isProxy(n){return isReactive(n)||isReadonly(n)}function toRaw(n){const a=n&&n.__v_raw;return a?toRaw(a):n}function markRaw(n){return def(n,"__v_skip",!0),n}const toReactive=n=>isObject(n)?reactive(n):n,toReadonly=n=>isObject(n)?readonly(n):n;function trackRefValue(n){isTracking()&&(n=toRaw(n),n.dep||(n.dep=createDep()),trackEffects(n.dep))}function triggerRefValue(n,a){n=toRaw(n),n.dep&&triggerEffects(n.dep)}function isRef(n){return Boolean(n&&n.__v_isRef===!0)}function ref(n){return createRef(n,!1)}function shallowRef(n){return createRef(n,!0)}function createRef(n,a){return isRef(n)?n:new RefImpl(n,a)}class RefImpl{constructor(a,s){this._shallow=s,this.dep=void 0,this.__v_isRef=!0,this._rawValue=s?a:toRaw(a),this._value=s?a:toReactive(a)}get value(){return trackRefValue(this),this._value}set value(a){a=this._shallow?a:toRaw(a),hasChanged(a,this._rawValue)&&(this._rawValue=a,this._value=this._shallow?a:toReactive(a),triggerRefValue(this))}}function unref(n){return isRef(n)?n.value:n}const shallowUnwrapHandlers={get:(n,a,s)=>unref(Reflect.get(n,a,s)),set:(n,a,s,t)=>{const e=n[a];return isRef(e)&&!isRef(s)?(e.value=s,!0):Reflect.set(n,a,s,t)}};function proxyRefs(n){return isReactive(n)?n:new Proxy(n,shallowUnwrapHandlers)}function toRefs(n){const a=isArray$1(n)?new Array(n.length):{};for(const s in n)a[s]=toRef(n,s);return a}class ObjectRefImpl{constructor(a,s){this._object=a,this._key=s,this.__v_isRef=!0}get value(){return this._object[this._key]}set value(a){this._object[this._key]=a}}function toRef(n,a){const s=n[a];return isRef(s)?s:new ObjectRefImpl(n,a)}class ComputedRefImpl{constructor(a,s,t){this._setter=s,this.dep=void 0,this._dirty=!0,this.__v_isRef=!0,this.effect=new ReactiveEffect(a,()=>{this._dirty||(this._dirty=!0,triggerRefValue(this))}),this.__v_isReadonly=t}get value(){const a=toRaw(this);return trackRefValue(a),a._dirty&&(a._dirty=!1,a._value=a.effect.run()),a._value}set value(a){this._setter(a)}}function computed(n,a){let s,t;const e=isFunction(n);return e?(s=n,t=NOOP):(s=n.get,t=n.set),new ComputedRefImpl(s,t,e||!t)}Promise.resolve();function emit$1(n,a,...s){const t=n.vnode.props||EMPTY_OBJ;let e=s;const o=a.startsWith("update:"),c=o&&a.slice(7);if(c&&c in t){const k=`${c==="modelValue"?"model":c}Modifiers`,{number:d,trim:m}=t[k]||EMPTY_OBJ;m?e=s.map(b=>b.trim()):d&&(e=s.map(toNumber))}let l,u=t[l=toHandlerKey(a)]||t[l=toHandlerKey(camelize(a))];!u&&o&&(u=t[l=toHandlerKey(hyphenate(a))]),u&&callWithAsyncErrorHandling(u,n,6,e);const i=t[l+"Once"];if(i){if(!n.emitted)n.emitted={};else if(n.emitted[l])return;n.emitted[l]=!0,callWithAsyncErrorHandling(i,n,6,e)}}function normalizeEmitsOptions(n,a,s=!1){const t=a.emitsCache,e=t.get(n);if(e!==void 0)return e;const o=n.emits;let c={},l=!1;if(!isFunction(n)){const u=i=>{const k=normalizeEmitsOptions(i,a,!0);k&&(l=!0,extend(c,k))};!s&&a.mixins.length&&a.mixins.forEach(u),n.extends&&u(n.extends),n.mixins&&n.mixins.forEach(u)}return!o&&!l?(t.set(n,null),null):(isArray$1(o)?o.forEach(u=>c[u]=null):extend(c,o),t.set(n,c),c)}function isEmitListener(n,a){return!n||!isOn(a)?!1:(a=a.slice(2).replace(/Once$/,""),hasOwn(n,a[0].toLowerCase()+a.slice(1))||hasOwn(n,hyphenate(a))||hasOwn(n,a))}let currentRenderingInstance=null,currentScopeId=null;function setCurrentRenderingInstance(n){const a=currentRenderingInstance;return currentRenderingInstance=n,currentScopeId=n&&n.type.__scopeId||null,a}function pushScopeId(n){currentScopeId=n}function popScopeId(){currentScopeId=null}function withCtx(n,a=currentRenderingInstance,s){if(!a||n._n)return n;const t=(...e)=>{t._d&&setBlockTracking(-1);const o=setCurrentRenderingInstance(a),c=n(...e);return setCurrentRenderingInstance(o),t._d&&setBlockTracking(1),c};return t._n=!0,t._c=!0,t._d=!0,t}function markAttrsAccessed(){}function renderComponentRoot(n){const{type:a,vnode:s,proxy:t,withProxy:e,props:o,propsOptions:[c],slots:l,attrs:u,emit:i,render:k,renderCache:d,data:m,setupState:b,ctx:C,inheritAttrs:O}=n;let f,y;const S=setCurrentRenderingInstance(n);try{if(s.shapeFlag&4){const q=e||t;f=normalizeVNode(k.call(q,q,d,o,b,m,C)),y=u}else{const q=a;f=normalizeVNode(q.length>1?q(o,{attrs:u,slots:l,emit:i}):q(o,null)),y=a.props?u:getFunctionalFallthrough(u)}}catch(q){blockStack.length=0,handleError(q,n,1),f=createVNode(Comment)}let N=f;if(y&&O!==!1){const q=Object.keys(y),{shapeFlag:F}=N;q.length&&F&(1|6)&&(c&&q.some(isModelListener)&&(y=filterModelListeners(y,c)),N=cloneVNode(N,y))}return s.dirs&&(N.dirs=N.dirs?N.dirs.concat(s.dirs):s.dirs),s.transition&&(N.transition=s.transition),f=N,setCurrentRenderingInstance(S),f}const getFunctionalFallthrough=n=>{let a;for(const s in n)(s==="class"||s==="style"||isOn(s))&&((a||(a={}))[s]=n[s]);return a},filterModelListeners=(n,a)=>{const s={};for(const t in n)(!isModelListener(t)||!(t.slice(9)in a))&&(s[t]=n[t]);return s};function shouldUpdateComponent(n,a,s){const{props:t,children:e,component:o}=n,{props:c,children:l,patchFlag:u}=a,i=o.emitsOptions;if(a.dirs||a.transition)return!0;if(s&&u>=0){if(u&1024)return!0;if(u&16)return t?hasPropsChanged(t,c,i):!!c;if(u&8){const k=a.dynamicProps;for(let d=0;d<k.length;d++){const m=k[d];if(c[m]!==t[m]&&!isEmitListener(i,m))return!0}}}else return(e||l)&&(!l||!l.$stable)?!0:t===c?!1:t?c?hasPropsChanged(t,c,i):!0:!!c;return!1}function hasPropsChanged(n,a,s){const t=Object.keys(a);if(t.length!==Object.keys(n).length)return!0;for(let e=0;e<t.length;e++){const o=t[e];if(a[o]!==n[o]&&!isEmitListener(s,o))return!0}return!1}function updateHOCHostEl({vnode:n,parent:a},s){for(;a&&a.subTree===n;)(n=a.vnode).el=s,a=a.parent}const isSuspense=n=>n.__isSuspense;function queueEffectWithSuspense(n,a){a&&a.pendingBranch?isArray$1(n)?a.effects.push(...n):a.effects.push(n):queuePostFlushCb(n)}function provide(n,a){if(currentInstance){let s=currentInstance.provides;const t=currentInstance.parent&&currentInstance.parent.provides;t===s&&(s=currentInstance.provides=Object.create(t)),s[n]=a}}function inject(n,a,s=!1){const t=currentInstance||currentRenderingInstance;if(t){const e=t.parent==null?t.vnode.appContext&&t.vnode.appContext.provides:t.parent.provides;if(e&&n in e)return e[n];if(arguments.length>1)return s&&isFunction(a)?a.call(t.proxy):a}}function setTransitionHooks(n,a){n.shapeFlag&6&&n.component?setTransitionHooks(n.component.subTree,a):n.shapeFlag&128?(n.ssContent.transition=a.clone(n.ssContent),n.ssFallback.transition=a.clone(n.ssFallback)):n.transition=a}function defineComponent(n){return isFunction(n)?{setup:n,name:n.name}:n}const isAsyncWrapper=n=>!!n.type.__asyncLoader;function defineAsyncComponent(n){isFunction(n)&&(n={loader:n});const{loader:a,loadingComponent:s,errorComponent:t,delay:e=200,timeout:o,suspensible:c=!0,onError:l}=n;let u=null,i,k=0;const d=()=>(k++,u=null,m()),m=()=>{let b;return u||(b=u=a().catch(C=>{if(C=C instanceof Error?C:new Error(String(C)),l)return new Promise((O,f)=>{l(C,()=>O(d()),()=>f(C),k+1)});throw C}).then(C=>b!==u&&u?u:(C&&(C.__esModule||C[Symbol.toStringTag]==="Module")&&(C=C.default),i=C,C)))};return defineComponent({name:"AsyncComponentWrapper",__asyncLoader:m,get __asyncResolved(){return i},setup(){const b=currentInstance;if(i)return()=>createInnerComp(i,b);const C=S=>{u=null,handleError(S,b,13,!t)};if(c&&b.suspense||isInSSRComponentSetup)return m().then(S=>()=>createInnerComp(S,b)).catch(S=>(C(S),()=>t?createVNode(t,{error:S}):null));const O=ref(!1),f=ref(),y=ref(!!e);return e&&setTimeout(()=>{y.value=!1},e),o!=null&&setTimeout(()=>{if(!O.value&&!f.value){const S=new Error(`Async component timed out after ${o}ms.`);C(S),f.value=S}},o),m().then(()=>{O.value=!0,b.parent&&isKeepAlive(b.parent.vnode)&&queueJob(b.parent.update)}).catch(S=>{C(S),f.value=S}),()=>{if(O.value&&i)return createInnerComp(i,b);if(f.value&&t)return createVNode(t,{error:f.value});if(s&&!y.value)return createVNode(s)}}})}function createInnerComp(n,{vnode:{ref:a,props:s,children:t}}){const e=createVNode(n,s,t);return e.ref=a,e}const isKeepAlive=n=>n.type.__isKeepAlive,KeepAliveImpl={name:"KeepAlive",__isKeepAlive:!0,props:{include:[String,RegExp,Array],exclude:[String,RegExp,Array],max:[String,Number]},setup(n,{slots:a}){const s=getCurrentInstance(),t=s.ctx;if(!t.renderer)return a.default;const e=new Map,o=new Set;let c=null;const l=s.suspense,{renderer:{p:u,m:i,um:k,o:{createElement:d}}}=t,m=d("div");t.activate=(S,N,q,F,L)=>{const D=S.component;i(S,N,q,0,l),u(D.vnode,S,N,q,D,l,F,S.slotScopeIds,L),queuePostRenderEffect(()=>{D.isDeactivated=!1,D.a&&invokeArrayFns(D.a);const Y=S.props&&S.props.onVnodeMounted;Y&&invokeVNodeHook(Y,D.parent,S)},l)},t.deactivate=S=>{const N=S.component;i(S,m,null,1,l),queuePostRenderEffect(()=>{N.da&&invokeArrayFns(N.da);const q=S.props&&S.props.onVnodeUnmounted;q&&invokeVNodeHook(q,N.parent,S),N.isDeactivated=!0},l)};function b(S){resetShapeFlag(S),k(S,s,l)}function C(S){e.forEach((N,q)=>{const F=getComponentName(N.type);F&&(!S||!S(F))&&O(q)})}function O(S){const N=e.get(S);!c||N.type!==c.type?b(N):c&&resetShapeFlag(c),e.delete(S),o.delete(S)}watch(()=>[n.include,n.exclude],([S,N])=>{S&&C(q=>matches(S,q)),N&&C(q=>!matches(N,q))},{flush:"post",deep:!0});let f=null;const y=()=>{f!=null&&e.set(f,getInnerChild(s.subTree))};return onMounted(y),onUpdated(y),onBeforeUnmount(()=>{e.forEach(S=>{const{subTree:N,suspense:q}=s,F=getInnerChild(N);if(S.type===F.type){resetShapeFlag(F);const L=F.component.da;L&&queuePostRenderEffect(L,q);return}b(S)})}),()=>{if(f=null,!a.default)return null;const S=a.default(),N=S[0];if(S.length>1)return c=null,S;if(!isVNode(N)||!(N.shapeFlag&4)&&!(N.shapeFlag&128))return c=null,N;let q=getInnerChild(N);const F=q.type,L=getComponentName(isAsyncWrapper(q)?q.type.__asyncResolved||{}:F),{include:D,exclude:Y,max:J}=n;if(D&&(!L||!matches(D,L))||Y&&L&&matches(Y,L))return c=q,N;const z=q.key==null?F:q.key,Z=e.get(z);return q.el&&(q=cloneVNode(q),N.shapeFlag&128&&(N.ssContent=q)),f=z,Z?(q.el=Z.el,q.component=Z.component,q.transition&&setTransitionHooks(q,q.transition),q.shapeFlag|=512,o.delete(z),o.add(z)):(o.add(z),J&&o.size>parseInt(J,10)&&O(o.values().next().value)),q.shapeFlag|=256,c=q,N}}},KeepAlive=KeepAliveImpl;function matches(n,a){return isArray$1(n)?n.some(s=>matches(s,a)):isString(n)?n.split(",").indexOf(a)>-1:n.test?n.test(a):!1}function onActivated(n,a){registerKeepAliveHook(n,"a",a)}function onDeactivated(n,a){registerKeepAliveHook(n,"da",a)}function registerKeepAliveHook(n,a,s=currentInstance){const t=n.__wdc||(n.__wdc=()=>{let e=s;for(;e;){if(e.isDeactivated)return;e=e.parent}n()});if(injectHook(a,t,s),s){let e=s.parent;for(;e&&e.parent;)isKeepAlive(e.parent.vnode)&&injectToKeepAliveRoot(t,a,s,e),e=e.parent}}function injectToKeepAliveRoot(n,a,s,t){const e=injectHook(a,n,t,!0);onUnmounted(()=>{remove(t[a],e)},s)}function resetShapeFlag(n){let a=n.shapeFlag;a&256&&(a-=256),a&512&&(a-=512),n.shapeFlag=a}function getInnerChild(n){return n.shapeFlag&128?n.ssContent:n}function injectHook(n,a,s=currentInstance,t=!1){if(s){const e=s[n]||(s[n]=[]),o=a.__weh||(a.__weh=(...c)=>{if(s.isUnmounted)return;pauseTracking(),setCurrentInstance(s);const l=callWithAsyncErrorHandling(a,s,n,c);return unsetCurrentInstance(),resetTracking(),l});return t?e.unshift(o):e.push(o),o}}const createHook=n=>(a,s=currentInstance)=>(!isInSSRComponentSetup||n==="sp")&&injectHook(n,a,s),onBeforeMount=createHook("bm"),onMounted=createHook("m"),onBeforeUpdate=createHook("bu"),onUpdated=createHook("u"),onBeforeUnmount=createHook("bum"),onUnmounted=createHook("um"),onServerPrefetch=createHook("sp"),onRenderTriggered=createHook("rtg"),onRenderTracked=createHook("rtc");function onErrorCaptured(n,a=currentInstance){injectHook("ec",n,a)}let shouldCacheAccess=!0;function applyOptions(n){const a=resolveMergedOptions(n),s=n.proxy,t=n.ctx;shouldCacheAccess=!1,a.beforeCreate&&callHook(a.beforeCreate,n,"bc");const{data:e,computed:o,methods:c,watch:l,provide:u,inject:i,created:k,beforeMount:d,mounted:m,beforeUpdate:b,updated:C,activated:O,deactivated:f,beforeDestroy:y,beforeUnmount:S,destroyed:N,unmounted:q,render:F,renderTracked:L,renderTriggered:D,errorCaptured:Y,serverPrefetch:J,expose:z,inheritAttrs:Z,components:G,directives:W,filters:en}=a;if(i&&resolveInjections(i,t,null,n.appContext.config.unwrapInjectedRef),c)for(const X in c){const $=c[X];isFunction($)&&(t[X]=$.bind(s))}if(e){const X=e.call(s,s);isObject(X)&&(n.data=reactive(X))}if(shouldCacheAccess=!0,o)for(const X in o){const $=o[X],B=isFunction($)?$.bind(s,s):isFunction($.get)?$.get.bind(s,s):NOOP,I=!isFunction($)&&isFunction($.set)?$.set.bind(s):NOOP,U=computed({get:B,set:I});Object.defineProperty(t,X,{enumerable:!0,configurable:!0,get:()=>U.value,set:K=>U.value=K})}if(l)for(const X in l)createWatcher(l[X],t,s,X);if(u){const X=isFunction(u)?u.call(s):u;Reflect.ownKeys(X).forEach($=>{provide($,X[$])})}k&&callHook(k,n,"c");function pn(X,$){isArray$1($)?$.forEach(B=>X(B.bind(s))):$&&X($.bind(s))}if(pn(onBeforeMount,d),pn(onMounted,m),pn(onBeforeUpdate,b),pn(onUpdated,C),pn(onActivated,O),pn(onDeactivated,f),pn(onErrorCaptured,Y),pn(onRenderTracked,L),pn(onRenderTriggered,D),pn(onBeforeUnmount,S),pn(onUnmounted,q),pn(onServerPrefetch,J),isArray$1(z))if(z.length){const X=n.exposed||(n.exposed={});z.forEach($=>{Object.defineProperty(X,$,{get:()=>s[$],set:B=>s[$]=B})})}else n.exposed||(n.exposed={});F&&n.render===NOOP&&(n.render=F),Z!=null&&(n.inheritAttrs=Z),G&&(n.components=G),W&&(n.directives=W)}function resolveInjections(n,a,s=NOOP,t=!1){isArray$1(n)&&(n=normalizeInject(n));for(const e in n){const o=n[e];let c;isObject(o)?"default"in o?c=inject(o.from||e,o.default,!0):c=inject(o.from||e):c=inject(o),isRef(c)&&t?Object.defineProperty(a,e,{enumerable:!0,configurable:!0,get:()=>c.value,set:l=>c.value=l}):a[e]=c}}function callHook(n,a,s){callWithAsyncErrorHandling(isArray$1(n)?n.map(t=>t.bind(a.proxy)):n.bind(a.proxy),a,s)}function createWatcher(n,a,s,t){const e=t.includes(".")?createPathGetter(s,t):()=>s[t];if(isString(n)){const o=a[n];isFunction(o)&&watch(e,o)}else if(isFunction(n))watch(e,n.bind(s));else if(isObject(n))if(isArray$1(n))n.forEach(o=>createWatcher(o,a,s,t));else{const o=isFunction(n.handler)?n.handler.bind(s):a[n.handler];isFunction(o)&&watch(e,o,n)}}function resolveMergedOptions(n){const a=n.type,{mixins:s,extends:t}=a,{mixins:e,optionsCache:o,config:{optionMergeStrategies:c}}=n.appContext,l=o.get(a);let u;return l?u=l:!e.length&&!s&&!t?u=a:(u={},e.length&&e.forEach(i=>mergeOptions(u,i,c,!0)),mergeOptions(u,a,c)),o.set(a,u),u}function mergeOptions(n,a,s,t=!1){const{mixins:e,extends:o}=a;o&&mergeOptions(n,o,s,!0),e&&e.forEach(c=>mergeOptions(n,c,s,!0));for(const c in a)if(!(t&&c==="expose")){const l=internalOptionMergeStrats[c]||s&&s[c];n[c]=l?l(n[c],a[c]):a[c]}return n}const internalOptionMergeStrats={data:mergeDataFn,props:mergeObjectOptions,emits:mergeObjectOptions,methods:mergeObjectOptions,computed:mergeObjectOptions,beforeCreate:mergeAsArray,created:mergeAsArray,beforeMount:mergeAsArray,mounted:mergeAsArray,beforeUpdate:mergeAsArray,updated:mergeAsArray,beforeDestroy:mergeAsArray,beforeUnmount:mergeAsArray,destroyed:mergeAsArray,unmounted:mergeAsArray,activated:mergeAsArray,deactivated:mergeAsArray,errorCaptured:mergeAsArray,serverPrefetch:mergeAsArray,components:mergeObjectOptions,directives:mergeObjectOptions,watch:mergeWatchOptions,provide:mergeDataFn,inject:mergeInject};function mergeDataFn(n,a){return a?n?function(){return extend(isFunction(n)?n.call(this,this):n,isFunction(a)?a.call(this,this):a)}:a:n}function mergeInject(n,a){return mergeObjectOptions(normalizeInject(n),normalizeInject(a))}function normalizeInject(n){if(isArray$1(n)){const a={};for(let s=0;s<n.length;s++)a[n[s]]=n[s];return a}return n}function mergeAsArray(n,a){return n?[...new Set([].concat(n,a))]:a}function mergeObjectOptions(n,a){return n?extend(extend(Object.create(null),n),a):a}function mergeWatchOptions(n,a){if(!n)return a;if(!a)return n;const s=extend(Object.create(null),n);for(const t in a)s[t]=mergeAsArray(n[t],a[t]);return s}function initProps(n,a,s,t=!1){const e={},o={};def(o,InternalObjectKey,1),n.propsDefaults=Object.create(null),setFullProps(n,a,e,o);for(const c in n.propsOptions[0])c in e||(e[c]=void 0);s?n.props=t?e:shallowReactive(e):n.type.props?n.props=e:n.props=o,n.attrs=o}function updateProps(n,a,s,t){const{props:e,attrs:o,vnode:{patchFlag:c}}=n,l=toRaw(e),[u]=n.propsOptions;let i=!1;if((t||c>0)&&!(c&16)){if(c&8){const k=n.vnode.dynamicProps;for(let d=0;d<k.length;d++){let m=k[d];const b=a[m];if(u)if(hasOwn(o,m))b!==o[m]&&(o[m]=b,i=!0);else{const C=camelize(m);e[C]=resolvePropValue(u,l,C,b,n,!1)}else b!==o[m]&&(o[m]=b,i=!0)}}}else{setFullProps(n,a,e,o)&&(i=!0);let k;for(const d in l)(!a||!hasOwn(a,d)&&((k=hyphenate(d))===d||!hasOwn(a,k)))&&(u?s&&(s[d]!==void 0||s[k]!==void 0)&&(e[d]=resolvePropValue(u,l,d,void 0,n,!0)):delete e[d]);if(o!==l)for(const d in o)(!a||!hasOwn(a,d))&&(delete o[d],i=!0)}i&&trigger$1(n,"set","$attrs")}function setFullProps(n,a,s,t){const[e,o]=n.propsOptions;let c=!1,l;if(a)for(let u in a){if(isReservedProp(u))continue;const i=a[u];let k;e&&hasOwn(e,k=camelize(u))?!o||!o.includes(k)?s[k]=i:(l||(l={}))[k]=i:isEmitListener(n.emitsOptions,u)||i!==t[u]&&(t[u]=i,c=!0)}if(o){const u=toRaw(s),i=l||EMPTY_OBJ;for(let k=0;k<o.length;k++){const d=o[k];s[d]=resolvePropValue(e,u,d,i[d],n,!hasOwn(i,d))}}return c}function resolvePropValue(n,a,s,t,e,o){const c=n[s];if(c!=null){const l=hasOwn(c,"default");if(l&&t===void 0){const u=c.default;if(c.type!==Function&&isFunction(u)){const{propsDefaults:i}=e;s in i?t=i[s]:(setCurrentInstance(e),t=i[s]=u.call(null,a),unsetCurrentInstance())}else t=u}c[0]&&(o&&!l?t=!1:c[1]&&(t===""||t===hyphenate(s))&&(t=!0))}return t}function normalizePropsOptions(n,a,s=!1){const t=a.propsCache,e=t.get(n);if(e)return e;const o=n.props,c={},l=[];let u=!1;if(!isFunction(n)){const k=d=>{u=!0;const[m,b]=normalizePropsOptions(d,a,!0);extend(c,m),b&&l.push(...b)};!s&&a.mixins.length&&a.mixins.forEach(k),n.extends&&k(n.extends),n.mixins&&n.mixins.forEach(k)}if(!o&&!u)return t.set(n,EMPTY_ARR),EMPTY_ARR;if(isArray$1(o))for(let k=0;k<o.length;k++){const d=camelize(o[k]);validatePropName(d)&&(c[d]=EMPTY_OBJ)}else if(o)for(const k in o){const d=camelize(k);if(validatePropName(d)){const m=o[k],b=c[d]=isArray$1(m)||isFunction(m)?{type:m}:m;if(b){const C=getTypeIndex(Boolean,b.type),O=getTypeIndex(String,b.type);b[0]=C>-1,b[1]=O<0||C<O,(C>-1||hasOwn(b,"default"))&&l.push(d)}}}const i=[c,l];return t.set(n,i),i}function validatePropName(n){return n[0]!=="$"}function getType(n){const a=n&&n.toString().match(/^\s*function (\w+)/);return a?a[1]:n===null?"null":""}function isSameType(n,a){return getType(n)===getType(a)}function getTypeIndex(n,a){return isArray$1(a)?a.findIndex(s=>isSameType(s,n)):isFunction(a)&&isSameType(a,n)?0:-1}const isInternalKey=n=>n[0]==="_"||n==="$stable",normalizeSlotValue=n=>isArray$1(n)?n.map(normalizeVNode):[normalizeVNode(n)],normalizeSlot=(n,a,s)=>{const t=withCtx((...e)=>normalizeSlotValue(a(...e)),s);return t._c=!1,t},normalizeObjectSlots=(n,a,s)=>{const t=n._ctx;for(const e in n){if(isInternalKey(e))continue;const o=n[e];if(isFunction(o))a[e]=normalizeSlot(e,o,t);else if(o!=null){const c=normalizeSlotValue(o);a[e]=()=>c}}},normalizeVNodeSlots=(n,a)=>{const s=normalizeSlotValue(a);n.slots.default=()=>s},initSlots=(n,a)=>{if(n.vnode.shapeFlag&32){const s=a._;s?(n.slots=toRaw(a),def(a,"_",s)):normalizeObjectSlots(a,n.slots={})}else n.slots={},a&&normalizeVNodeSlots(n,a);def(n.slots,InternalObjectKey,1)},updateSlots=(n,a,s)=>{const{vnode:t,slots:e}=n;let o=!0,c=EMPTY_OBJ;if(t.shapeFlag&32){const l=a._;l?s&&l===1?o=!1:(extend(e,a),!s&&l===1&&delete e._):(o=!a.$stable,normalizeObjectSlots(a,e)),c=a}else a&&(normalizeVNodeSlots(n,a),c={default:1});if(o)for(const l in e)!isInternalKey(l)&&!(l in c)&&delete e[l]};function withDirectives(n,a){const s=currentRenderingInstance;if(s===null)return n;const t=s.proxy,e=n.dirs||(n.dirs=[]);for(let o=0;o<a.length;o++){let[c,l,u,i=EMPTY_OBJ]=a[o];isFunction(c)&&(c={mounted:c,updated:c}),c.deep&&traverse(l),e.push({dir:c,instance:t,value:l,oldValue:void 0,arg:u,modifiers:i})}return n}function invokeDirectiveHook(n,a,s,t){const e=n.dirs,o=a&&a.dirs;for(let c=0;c<e.length;c++){const l=e[c];o&&(l.oldValue=o[c].value);let u=l.dir[t];u&&(pauseTracking(),callWithAsyncErrorHandling(u,s,8,[n.el,l,n,a]),resetTracking())}}function createAppContext(){return{app:null,config:{isNativeTag:NO,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let uid=0;function createAppAPI(n,a){return function(t,e=null){e!=null&&!isObject(e)&&(e=null);const o=createAppContext(),c=new Set;let l=!1;const u=o.app={_uid:uid++,_component:t,_props:e,_container:null,_context:o,_instance:null,version,get config(){return o.config},set config(i){},use(i,...k){return c.has(i)||(i&&isFunction(i.install)?(c.add(i),i.install(u,...k)):isFunction(i)&&(c.add(i),i(u,...k))),u},mixin(i){return o.mixins.includes(i)||o.mixins.push(i),u},component(i,k){return k?(o.components[i]=k,u):o.components[i]},directive(i,k){return k?(o.directives[i]=k,u):o.directives[i]},mount(i,k,d){if(!l){const m=createVNode(t,e);return m.appContext=o,k&&a?a(m,i):n(m,i,d),l=!0,u._container=i,i.__vue_app__=u,getExposeProxy(m.component)||m.component.proxy}},unmount(){l&&(n(null,u._container),delete u._container.__vue_app__)},provide(i,k){return o.provides[i]=k,u}};return u}}let hasMismatch=!1;const isSVGContainer=n=>/svg/.test(n.namespaceURI)&&n.tagName!=="foreignObject",isComment=n=>n.nodeType===8;function createHydrationFunctions(n){const{mt:a,p:s,o:{patchProp:t,nextSibling:e,parentNode:o,remove:c,insert:l,createComment:u}}=n,i=(f,y)=>{if(!y.hasChildNodes()){s(null,f,y),flushPostFlushCbs();return}hasMismatch=!1,k(y.firstChild,f,null,null,null),flushPostFlushCbs(),hasMismatch&&console.error("Hydration completed but contains mismatches.")},k=(f,y,S,N,q,F=!1)=>{const L=isComment(f)&&f.data==="[",D=()=>C(f,y,S,N,q,L),{type:Y,ref:J,shapeFlag:z}=y,Z=f.nodeType;y.el=f;let G=null;switch(Y){case Text:Z!==3?G=D():(f.data!==y.children&&(hasMismatch=!0,f.data=y.children),G=e(f));break;case Comment:Z!==8||L?G=D():G=e(f);break;case Static:if(Z!==1)G=D();else{G=f;const W=!y.children.length;for(let en=0;en<y.staticCount;en++)W&&(y.children+=G.outerHTML),en===y.staticCount-1&&(y.anchor=G),G=e(G);return G}break;case Fragment:L?G=b(f,y,S,N,q,F):G=D();break;default:if(z&1)Z!==1||y.type.toLowerCase()!==f.tagName.toLowerCase()?G=D():G=d(f,y,S,N,q,F);else if(z&6){y.slotScopeIds=q;const W=o(f);if(a(y,W,null,S,N,isSVGContainer(W),F),G=L?O(f):e(f),isAsyncWrapper(y)){let en;L?(en=createVNode(Fragment),en.anchor=G?G.previousSibling:W.lastChild):en=f.nodeType===3?createTextVNode(""):createVNode("div"),en.el=f,y.component.subTree=en}}else z&64?Z!==8?G=D():G=y.type.hydrate(f,y,S,N,q,F,n,m):z&128&&(G=y.type.hydrate(f,y,S,N,isSVGContainer(o(f)),q,F,n,k))}return J!=null&&setRef(J,null,N,y),G},d=(f,y,S,N,q,F)=>{F=F||!!y.dynamicChildren;const{type:L,props:D,patchFlag:Y,shapeFlag:J,dirs:z}=y,Z=L==="input"&&z||L==="option";if(Z||Y!==-1){if(z&&invokeDirectiveHook(y,null,S,"created"),D)if(Z||!F||Y&(16|32))for(const W in D)(Z&&W.endsWith("value")||isOn(W)&&!isReservedProp(W))&&t(f,W,null,D[W],!1,void 0,S);else D.onClick&&t(f,"onClick",null,D.onClick,!1,void 0,S);let G;if((G=D&&D.onVnodeBeforeMount)&&invokeVNodeHook(G,S,y),z&&invokeDirectiveHook(y,null,S,"beforeMount"),((G=D&&D.onVnodeMounted)||z)&&queueEffectWithSuspense(()=>{G&&invokeVNodeHook(G,S,y),z&&invokeDirectiveHook(y,null,S,"mounted")},N),J&16&&!(D&&(D.innerHTML||D.textContent))){let W=m(f.firstChild,y,f,S,N,q,F);for(;W;){hasMismatch=!0;const en=W;W=W.nextSibling,c(en)}}else J&8&&f.textContent!==y.children&&(hasMismatch=!0,f.textContent=y.children)}return f.nextSibling},m=(f,y,S,N,q,F,L)=>{L=L||!!y.dynamicChildren;const D=y.children,Y=D.length;for(let J=0;J<Y;J++){const z=L?D[J]:D[J]=normalizeVNode(D[J]);if(f)f=k(f,z,N,q,F,L);else{if(z.type===Text&&!z.children)continue;hasMismatch=!0,s(null,z,S,null,N,q,isSVGContainer(S),F)}}return f},b=(f,y,S,N,q,F)=>{const{slotScopeIds:L}=y;L&&(q=q?q.concat(L):L);const D=o(f),Y=m(e(f),y,D,S,N,q,F);return Y&&isComment(Y)&&Y.data==="]"?e(y.anchor=Y):(hasMismatch=!0,l(y.anchor=u("]"),D,Y),Y)},C=(f,y,S,N,q,F)=>{if(hasMismatch=!0,y.el=null,F){const Y=O(f);for(;;){const J=e(f);if(J&&J!==Y)c(J);else break}}const L=e(f),D=o(f);return c(f),s(null,y,D,L,S,N,isSVGContainer(D),q),L},O=f=>{let y=0;for(;f;)if(f=e(f),f&&isComment(f)&&(f.data==="["&&y++,f.data==="]")){if(y===0)return e(f);y--}return f};return[i,k]}const queuePostRenderEffect=queueEffectWithSuspense;function createHydrationRenderer(n){return baseCreateRenderer(n,createHydrationFunctions)}function baseCreateRenderer(n,a){const s=getGlobalThis();s.__VUE__=!0;const{insert:t,remove:e,patchProp:o,createElement:c,createText:l,createComment:u,setText:i,setElementText:k,parentNode:d,nextSibling:m,setScopeId:b=NOOP,cloneNode:C,insertStaticContent:O}=n,f=(r,g,v,_=null,x=null,A=null,P=!1,E=null,T=!!g.dynamicChildren)=>{if(r===g)return;r&&!isSameVNodeType(r,g)&&(_=mn(r),nn(r,x,A,!0),r=null),g.patchFlag===-2&&(T=!1,g.dynamicChildren=null);const{type:w,ref:V,shapeFlag:M}=g;switch(w){case Text:y(r,g,v,_);break;case Comment:S(r,g,v,_);break;case Static:r==null&&N(g,v,_,P);break;case Fragment:W(r,g,v,_,x,A,P,E,T);break;default:M&1?L(r,g,v,_,x,A,P,E,T):M&6?en(r,g,v,_,x,A,P,E,T):(M&64||M&128)&&w.process(r,g,v,_,x,A,P,E,T,gn)}V!=null&&x&&setRef(V,r&&r.ref,A,g||r,!g)},y=(r,g,v,_)=>{if(r==null)t(g.el=l(g.children),v,_);else{const x=g.el=r.el;g.children!==r.children&&i(x,g.children)}},S=(r,g,v,_)=>{r==null?t(g.el=u(g.children||""),v,_):g.el=r.el},N=(r,g,v,_)=>{[r.el,r.anchor]=O(r.children,g,v,_)},q=({el:r,anchor:g},v,_)=>{let x;for(;r&&r!==g;)x=m(r),t(r,v,_),r=x;t(g,v,_)},F=({el:r,anchor:g})=>{let v;for(;r&&r!==g;)v=m(r),e(r),r=v;e(g)},L=(r,g,v,_,x,A,P,E,T)=>{P=P||g.type==="svg",r==null?D(g,v,_,x,A,P,E,T):z(r,g,x,A,P,E,T)},D=(r,g,v,_,x,A,P,E)=>{let T,w;const{type:V,props:M,shapeFlag:H,transition:j,patchFlag:Q,dirs:tn}=r;if(r.el&&C!==void 0&&Q===-1)T=r.el=C(r.el);else{if(T=r.el=c(r.type,A,M&&M.is,M),H&8?k(T,r.children):H&16&&J(r.children,T,null,_,x,A&&V!=="foreignObject",P,E),tn&&invokeDirectiveHook(r,null,_,"created"),M){for(const sn in M)sn!=="value"&&!isReservedProp(sn)&&o(T,sn,null,M[sn],A,r.children,_,x,rn);"value"in M&&o(T,"value",null,M.value),(w=M.onVnodeBeforeMount)&&invokeVNodeHook(w,_,r)}Y(T,r,r.scopeId,P,_)}tn&&invokeDirectiveHook(r,null,_,"beforeMount");const an=(!x||x&&!x.pendingBranch)&&j&&!j.persisted;an&&j.beforeEnter(T),t(T,g,v),((w=M&&M.onVnodeMounted)||an||tn)&&queuePostRenderEffect(()=>{w&&invokeVNodeHook(w,_,r),an&&j.enter(T),tn&&invokeDirectiveHook(r,null,_,"mounted")},x)},Y=(r,g,v,_,x)=>{if(v&&b(r,v),_)for(let A=0;A<_.length;A++)b(r,_[A]);if(x){let A=x.subTree;if(g===A){const P=x.vnode;Y(r,P,P.scopeId,P.slotScopeIds,x.parent)}}},J=(r,g,v,_,x,A,P,E,T=0)=>{for(let w=T;w<r.length;w++){const V=r[w]=E?cloneIfMounted(r[w]):normalizeVNode(r[w]);f(null,V,g,v,_,x,A,P,E)}},z=(r,g,v,_,x,A,P)=>{const E=g.el=r.el;let{patchFlag:T,dynamicChildren:w,dirs:V}=g;T|=r.patchFlag&16;const M=r.props||EMPTY_OBJ,H=g.props||EMPTY_OBJ;let j;(j=H.onVnodeBeforeUpdate)&&invokeVNodeHook(j,v,g,r),V&&invokeDirectiveHook(g,r,v,"beforeUpdate");const Q=x&&g.type!=="foreignObject";if(w?Z(r.dynamicChildren,w,E,v,_,Q,A):P||B(r,g,E,null,v,_,Q,A,!1),T>0){if(T&16)G(E,g,M,H,v,_,x);else if(T&2&&M.class!==H.class&&o(E,"class",null,H.class,x),T&4&&o(E,"style",M.style,H.style,x),T&8){const tn=g.dynamicProps;for(let an=0;an<tn.length;an++){const sn=tn[an],cn=M[sn],dn=H[sn];(dn!==cn||sn==="value")&&o(E,sn,cn,dn,x,r.children,v,_,rn)}}T&1&&r.children!==g.children&&k(E,g.children)}else!P&&w==null&&G(E,g,M,H,v,_,x);((j=H.onVnodeUpdated)||V)&&queuePostRenderEffect(()=>{j&&invokeVNodeHook(j,v,g,r),V&&invokeDirectiveHook(g,r,v,"updated")},_)},Z=(r,g,v,_,x,A,P)=>{for(let E=0;E<g.length;E++){const T=r[E],w=g[E],V=T.el&&(T.type===Fragment||!isSameVNodeType(T,w)||T.shapeFlag&(6|64))?d(T.el):v;f(T,w,V,null,_,x,A,P,!0)}},G=(r,g,v,_,x,A,P)=>{if(v!==_){for(const E in _){if(isReservedProp(E))continue;const T=_[E],w=v[E];T!==w&&E!=="value"&&o(r,E,w,T,P,g.children,x,A,rn)}if(v!==EMPTY_OBJ)for(const E in v)!isReservedProp(E)&&!(E in _)&&o(r,E,v[E],null,P,g.children,x,A,rn);"value"in _&&o(r,"value",v.value,_.value)}},W=(r,g,v,_,x,A,P,E,T)=>{const w=g.el=r?r.el:l(""),V=g.anchor=r?r.anchor:l("");let{patchFlag:M,dynamicChildren:H,slotScopeIds:j}=g;j&&(E=E?E.concat(j):j),r==null?(t(w,v,_),t(V,v,_),J(g.children,v,V,x,A,P,E,T)):M>0&&M&64&&H&&r.dynamicChildren?(Z(r.dynamicChildren,H,v,x,A,P,E),(g.key!=null||x&&g===x.subTree)&&traverseStaticChildren(r,g,!0)):B(r,g,v,V,x,A,P,E,T)},en=(r,g,v,_,x,A,P,E,T)=>{g.slotScopeIds=E,r==null?g.shapeFlag&512?x.ctx.activate(g,v,_,P,T):un(g,v,_,x,A,P,T):pn(r,g,T)},un=(r,g,v,_,x,A,P)=>{const E=r.component=createComponentInstance(r,_,x);if(isKeepAlive(r)&&(E.ctx.renderer=gn),setupComponent(E),E.asyncDep){if(x&&x.registerDep(E,X),!r.el){const T=E.subTree=createVNode(Comment);S(null,T,g,v)}return}X(E,r,g,v,x,A,P)},pn=(r,g,v)=>{const _=g.component=r.component;if(shouldUpdateComponent(r,g,v))if(_.asyncDep&&!_.asyncResolved){$(_,g,v);return}else _.next=g,invalidateJob(_.update),_.update();else g.component=r.component,g.el=r.el,_.vnode=g},X=(r,g,v,_,x,A,P)=>{const E=()=>{if(r.isMounted){let{next:V,bu:M,u:H,parent:j,vnode:Q}=r,tn=V,an;T.allowRecurse=!1,V?(V.el=Q.el,$(r,V,P)):V=Q,M&&invokeArrayFns(M),(an=V.props&&V.props.onVnodeBeforeUpdate)&&invokeVNodeHook(an,j,V,Q),T.allowRecurse=!0;const sn=renderComponentRoot(r),cn=r.subTree;r.subTree=sn,f(cn,sn,d(cn.el),mn(cn),r,x,A),V.el=sn.el,tn===null&&updateHOCHostEl(r,sn.el),H&&queuePostRenderEffect(H,x),(an=V.props&&V.props.onVnodeUpdated)&&queuePostRenderEffect(()=>invokeVNodeHook(an,j,V,Q),x)}else{let V;const{el:M,props:H}=g,{bm:j,m:Q,parent:tn}=r,an=isAsyncWrapper(g);if(T.allowRecurse=!1,j&&invokeArrayFns(j),!an&&(V=H&&H.onVnodeBeforeMount)&&invokeVNodeHook(V,tn,g),T.allowRecurse=!0,M&&qn){const sn=()=>{r.subTree=renderComponentRoot(r),qn(M,r.subTree,r,x,null)};an?g.type.__asyncLoader().then(()=>!r.isUnmounted&&sn()):sn()}else{const sn=r.subTree=renderComponentRoot(r);f(null,sn,v,_,r,x,A),g.el=sn.el}if(Q&&queuePostRenderEffect(Q,x),!an&&(V=H&&H.onVnodeMounted)){const sn=g;queuePostRenderEffect(()=>invokeVNodeHook(V,tn,sn),x)}g.shapeFlag&256&&r.a&&queuePostRenderEffect(r.a,x),r.isMounted=!0,g=v=_=null}},T=new ReactiveEffect(E,()=>queueJob(r.update),r.scope),w=r.update=T.run.bind(T);w.id=r.uid,T.allowRecurse=w.allowRecurse=!0,w()},$=(r,g,v)=>{g.component=r;const _=r.vnode.props;r.vnode=g,r.next=null,updateProps(r,g.props,_,v),updateSlots(r,g.children,v),pauseTracking(),flushPreFlushCbs(void 0,r.update),resetTracking()},B=(r,g,v,_,x,A,P,E,T=!1)=>{const w=r&&r.children,V=r?r.shapeFlag:0,M=g.children,{patchFlag:H,shapeFlag:j}=g;if(H>0){if(H&128){U(w,M,v,_,x,A,P,E,T);return}else if(H&256){I(w,M,v,_,x,A,P,E,T);return}}j&8?(V&16&&rn(w,x,A),M!==w&&k(v,M)):V&16?j&16?U(w,M,v,_,x,A,P,E,T):rn(w,x,A,!0):(V&8&&k(v,""),j&16&&J(M,v,_,x,A,P,E,T))},I=(r,g,v,_,x,A,P,E,T)=>{r=r||EMPTY_ARR,g=g||EMPTY_ARR;const w=r.length,V=g.length,M=Math.min(w,V);let H;for(H=0;H<M;H++){const j=g[H]=T?cloneIfMounted(g[H]):normalizeVNode(g[H]);f(r[H],j,v,null,x,A,P,E,T)}w>V?rn(r,x,A,!0,!1,M):J(g,v,_,x,A,P,E,T,M)},U=(r,g,v,_,x,A,P,E,T)=>{let w=0;const V=g.length;let M=r.length-1,H=V-1;for(;w<=M&&w<=H;){const j=r[w],Q=g[w]=T?cloneIfMounted(g[w]):normalizeVNode(g[w]);if(isSameVNodeType(j,Q))f(j,Q,v,null,x,A,P,E,T);else break;w++}for(;w<=M&&w<=H;){const j=r[M],Q=g[H]=T?cloneIfMounted(g[H]):normalizeVNode(g[H]);if(isSameVNodeType(j,Q))f(j,Q,v,null,x,A,P,E,T);else break;M--,H--}if(w>M){if(w<=H){const j=H+1,Q=j<V?g[j].el:_;for(;w<=H;)f(null,g[w]=T?cloneIfMounted(g[w]):normalizeVNode(g[w]),v,Q,x,A,P,E,T),w++}}else if(w>H)for(;w<=M;)nn(r[w],x,A,!0),w++;else{const j=w,Q=w,tn=new Map;for(w=Q;w<=H;w++){const on=g[w]=T?cloneIfMounted(g[w]):normalizeVNode(g[w]);on.key!=null&&tn.set(on.key,w)}let an,sn=0;const cn=H-Q+1;let dn=!1,yn=0;const fn=new Array(cn);for(w=0;w<cn;w++)fn[w]=0;for(w=j;w<=M;w++){const on=r[w];if(sn>=cn){nn(on,x,A,!0);continue}let ln;if(on.key!=null)ln=tn.get(on.key);else for(an=Q;an<=H;an++)if(fn[an-Q]===0&&isSameVNodeType(on,g[an])){ln=an;break}ln===void 0?nn(on,x,A,!0):(fn[ln-Q]=w+1,ln>=yn?yn=ln:dn=!0,f(on,g[ln],v,null,x,A,P,E,T),sn++)}const xn=dn?getSequence(fn):EMPTY_ARR;for(an=xn.length-1,w=cn-1;w>=0;w--){const on=Q+w,ln=g[on],_n=on+1<V?g[on+1].el:_;fn[w]===0?f(null,ln,v,_n,x,A,P,E,T):dn&&(an<0||w!==xn[an]?K(ln,v,_n,2):an--)}}},K=(r,g,v,_,x=null)=>{const{el:A,type:P,transition:E,children:T,shapeFlag:w}=r;if(w&6){K(r.component.subTree,g,v,_);return}if(w&128){r.suspense.move(g,v,_);return}if(w&64){P.move(r,g,v,gn);return}if(P===Fragment){t(A,g,v);for(let M=0;M<T.length;M++)K(T[M],g,v,_);t(r.anchor,g,v);return}if(P===Static){q(r,g,v);return}if(_!==2&&w&1&&E)if(_===0)E.beforeEnter(A),t(A,g,v),queuePostRenderEffect(()=>E.enter(A),x);else{const{leave:M,delayLeave:H,afterLeave:j}=E,Q=()=>t(A,g,v),tn=()=>{M(A,()=>{Q(),j&&j()})};H?H(A,Q,tn):tn()}else t(A,g,v)},nn=(r,g,v,_=!1,x=!1)=>{const{type:A,props:P,ref:E,children:T,dynamicChildren:w,shapeFlag:V,patchFlag:M,dirs:H}=r;if(E!=null&&setRef(E,null,v,r,!0),V&256){g.ctx.deactivate(r);return}const j=V&1&&H,Q=!isAsyncWrapper(r);let tn;if(Q&&(tn=P&&P.onVnodeBeforeUnmount)&&invokeVNodeHook(tn,g,r),V&6)Tn(r.component,v,_);else{if(V&128){r.suspense.unmount(v,_);return}j&&invokeDirectiveHook(r,null,g,"beforeUnmount"),V&64?r.type.remove(r,g,v,x,gn,_):w&&(A!==Fragment||M>0&&M&64)?rn(w,g,v,!1,!0):(A===Fragment&&M&(128|256)||!x&&V&16)&&rn(T,g,v),_&&kn(r)}(Q&&(tn=P&&P.onVnodeUnmounted)||j)&&queuePostRenderEffect(()=>{tn&&invokeVNodeHook(tn,g,r),j&&invokeDirectiveHook(r,null,g,"unmounted")},v)},kn=r=>{const{type:g,el:v,anchor:_,transition:x}=r;if(g===Fragment){hn(v,_);return}if(g===Static){F(r);return}const A=()=>{e(v),x&&!x.persisted&&x.afterLeave&&x.afterLeave()};if(r.shapeFlag&1&&x&&!x.persisted){const{leave:P,delayLeave:E}=x,T=()=>P(v,A);E?E(r.el,A,T):T()}else A()},hn=(r,g)=>{let v;for(;r!==g;)v=m(r),e(r),r=v;e(g)},Tn=(r,g,v)=>{const{bum:_,scope:x,update:A,subTree:P,um:E}=r;_&&invokeArrayFns(_),x.stop(),A&&(A.active=!1,nn(P,r,g,v)),E&&queuePostRenderEffect(E,g),queuePostRenderEffect(()=>{r.isUnmounted=!0},g),g&&g.pendingBranch&&!g.isUnmounted&&r.asyncDep&&!r.asyncResolved&&r.suspenseId===g.pendingId&&(g.deps--,g.deps===0&&g.resolve())},rn=(r,g,v,_=!1,x=!1,A=0)=>{for(let P=A;P<r.length;P++)nn(r[P],g,v,_,x)},mn=r=>r.shapeFlag&6?mn(r.component.subTree):r.shapeFlag&128?r.suspense.next():m(r.anchor||r.el),bn=(r,g,v)=>{r==null?g._vnode&&nn(g._vnode,null,null,!0):f(g._vnode||null,r,g,null,null,null,v),flushPostFlushCbs(),g._vnode=r},gn={p:f,um:nn,m:K,r:kn,mt:un,mc:J,pc:B,pbc:Z,n:mn,o:n};let vn,qn;return a&&([vn,qn]=a(gn)),{render:bn,hydrate:vn,createApp:createAppAPI(bn,vn)}}function setRef(n,a,s,t,e=!1){if(isArray$1(n)){n.forEach((m,b)=>setRef(m,a&&(isArray$1(a)?a[b]:a),s,t,e));return}if(isAsyncWrapper(t)&&!e)return;const o=t.shapeFlag&4?getExposeProxy(t.component)||t.component.proxy:t.el,c=e?null:o,{i:l,r:u}=n,i=a&&a.r,k=l.refs===EMPTY_OBJ?l.refs={}:l.refs,d=l.setupState;if(i!=null&&i!==u&&(isString(i)?(k[i]=null,hasOwn(d,i)&&(d[i]=null)):isRef(i)&&(i.value=null)),isString(u)){const m=()=>{k[u]=c,hasOwn(d,u)&&(d[u]=c)};c?(m.id=-1,queuePostRenderEffect(m,s)):m()}else if(isRef(u)){const m=()=>{u.value=c};c?(m.id=-1,queuePostRenderEffect(m,s)):m()}else isFunction(u)&&callWithErrorHandling(u,l,12,[c,k])}function invokeVNodeHook(n,a,s,t=null){callWithAsyncErrorHandling(n,a,7,[s,t])}function traverseStaticChildren(n,a,s=!1){const t=n.children,e=a.children;if(isArray$1(t)&&isArray$1(e))for(let o=0;o<t.length;o++){const c=t[o];let l=e[o];l.shapeFlag&1&&!l.dynamicChildren&&((l.patchFlag<=0||l.patchFlag===32)&&(l=e[o]=cloneIfMounted(e[o]),l.el=c.el),s||traverseStaticChildren(c,l))}}function getSequence(n){const a=n.slice(),s=[0];let t,e,o,c,l;const u=n.length;for(t=0;t<u;t++){const i=n[t];if(i!==0){if(e=s[s.length-1],n[e]<i){a[t]=e,s.push(t);continue}for(o=0,c=s.length-1;o<c;)l=o+c>>1,n[s[l]]<i?o=l+1:c=l;i<n[s[o]]&&(o>0&&(a[t]=s[o-1]),s[o]=t)}}for(o=s.length,c=s[o-1];o-- >0;)s[o]=c,c=a[c];return s}const isTeleport=n=>n.__isTeleport,COMPONENTS="components";function resolveComponent(n,a){return resolveAsset(COMPONENTS,n,!0,a)||n}const NULL_DYNAMIC_COMPONENT=Symbol();function resolveDynamicComponent(n){return isString(n)?resolveAsset(COMPONENTS,n,!1)||n:n||NULL_DYNAMIC_COMPONENT}function resolveAsset(n,a,s=!0,t=!1){const e=currentRenderingInstance||currentInstance;if(e){const o=e.type;if(n===COMPONENTS){const l=getComponentName(o);if(l&&(l===a||l===camelize(a)||l===capitalize(camelize(a))))return o}const c=resolve(e[n]||o[n],a)||resolve(e.appContext[n],a);return!c&&t?o:c}}function resolve(n,a){return n&&(n[a]||n[camelize(a)]||n[capitalize(camelize(a))])}const Fragment=Symbol(void 0),Text=Symbol(void 0),Comment=Symbol(void 0),Static=Symbol(void 0),blockStack=[];let currentBlock=null;function openBlock(n=!1){blockStack.push(currentBlock=n?null:[])}function closeBlock(){blockStack.pop(),currentBlock=blockStack[blockStack.length-1]||null}let isBlockTreeEnabled=1;function setBlockTracking(n){isBlockTreeEnabled+=n}function setupBlock(n){return n.dynamicChildren=isBlockTreeEnabled>0?currentBlock||EMPTY_ARR:null,closeBlock(),isBlockTreeEnabled>0&&currentBlock&&currentBlock.push(n),n}function createElementBlock(n,a,s,t,e,o){return setupBlock(createBaseVNode(n,a,s,t,e,o,!0))}function createBlock(n,a,s,t,e){return setupBlock(createVNode(n,a,s,t,e,!0))}function isVNode(n){return n?n.__v_isVNode===!0:!1}function isSameVNodeType(n,a){return n.type===a.type&&n.key===a.key}const InternalObjectKey="__vInternal",normalizeKey=({key:n})=>n!=null?n:null,normalizeRef=({ref:n})=>n!=null?isString(n)||isRef(n)||isFunction(n)?{i:currentRenderingInstance,r:n}:n:null;function createBaseVNode(n,a=null,s=null,t=0,e=null,o=n===Fragment?0:1,c=!1,l=!1){const u={__v_isVNode:!0,__v_skip:!0,type:n,props:a,key:a&&normalizeKey(a),ref:a&&normalizeRef(a),scopeId:currentScopeId,slotScopeIds:null,children:s,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:o,patchFlag:t,dynamicProps:e,dynamicChildren:null,appContext:null};return l?(normalizeChildren(u,s),o&128&&n.normalize(u)):s&&(u.shapeFlag|=isString(s)?8:16),isBlockTreeEnabled>0&&!c&&currentBlock&&(u.patchFlag>0||o&6)&&u.patchFlag!==32&&currentBlock.push(u),u}const createVNode=_createVNode;function _createVNode(n,a=null,s=null,t=0,e=null,o=!1){if((!n||n===NULL_DYNAMIC_COMPONENT)&&(n=Comment),isVNode(n)){const l=cloneVNode(n,a,!0);return s&&normalizeChildren(l,s),l}if(isClassComponent(n)&&(n=n.__vccOpts),a){a=guardReactiveProps(a);let{class:l,style:u}=a;l&&!isString(l)&&(a.class=normalizeClass(l)),isObject(u)&&(isProxy(u)&&!isArray$1(u)&&(u=extend({},u)),a.style=normalizeStyle(u))}const c=isString(n)?1:isSuspense(n)?128:isTeleport(n)?64:isObject(n)?4:isFunction(n)?2:0;return createBaseVNode(n,a,s,t,e,c,o,!0)}function guardReactiveProps(n){return n?isProxy(n)||InternalObjectKey in n?extend({},n):n:null}function cloneVNode(n,a,s=!1){const{props:t,ref:e,patchFlag:o,children:c}=n,l=a?mergeProps(t||{},a):t;return{__v_isVNode:!0,__v_skip:!0,type:n.type,props:l,key:l&&normalizeKey(l),ref:a&&a.ref?s&&e?isArray$1(e)?e.concat(normalizeRef(a)):[e,normalizeRef(a)]:normalizeRef(a):e,scopeId:n.scopeId,slotScopeIds:n.slotScopeIds,children:c,target:n.target,targetAnchor:n.targetAnchor,staticCount:n.staticCount,shapeFlag:n.shapeFlag,patchFlag:a&&n.type!==Fragment?o===-1?16:o|16:o,dynamicProps:n.dynamicProps,dynamicChildren:n.dynamicChildren,appContext:n.appContext,dirs:n.dirs,transition:n.transition,component:n.component,suspense:n.suspense,ssContent:n.ssContent&&cloneVNode(n.ssContent),ssFallback:n.ssFallback&&cloneVNode(n.ssFallback),el:n.el,anchor:n.anchor}}function createTextVNode(n=" ",a=0){return createVNode(Text,null,n,a)}function createStaticVNode(n,a){const s=createVNode(Static,null,n);return s.staticCount=a,s}function createCommentVNode(n="",a=!1){return a?(openBlock(),createBlock(Comment,null,n)):createVNode(Comment,null,n)}function normalizeVNode(n){return n==null||typeof n=="boolean"?createVNode(Comment):isArray$1(n)?createVNode(Fragment,null,n.slice()):typeof n=="object"?cloneIfMounted(n):createVNode(Text,null,String(n))}function cloneIfMounted(n){return n.el===null||n.memo?n:cloneVNode(n)}function normalizeChildren(n,a){let s=0;const{shapeFlag:t}=n;if(a==null)a=null;else if(isArray$1(a))s=16;else if(typeof a=="object")if(t&(1|64)){const e=a.default;e&&(e._c&&(e._d=!1),normalizeChildren(n,e()),e._c&&(e._d=!0));return}else{s=32;const e=a._;!e&&!(InternalObjectKey in a)?a._ctx=currentRenderingInstance:e===3&&currentRenderingInstance&&(currentRenderingInstance.slots._===1?a._=1:(a._=2,n.patchFlag|=1024))}else isFunction(a)?(a={default:a,_ctx:currentRenderingInstance},s=32):(a=String(a),t&64?(s=16,a=[createTextVNode(a)]):s=8);n.children=a,n.shapeFlag|=s}function mergeProps(...n){const a={};for(let s=0;s<n.length;s++){const t=n[s];for(const e in t)if(e==="class")a.class!==t.class&&(a.class=normalizeClass([a.class,t.class]));else if(e==="style")a.style=normalizeStyle([a.style,t.style]);else if(isOn(e)){const o=a[e],c=t[e];o!==c&&(a[e]=o?[].concat(o,c):c)}else e!==""&&(a[e]=t[e])}return a}function renderList(n,a,s,t){let e;const o=s&&s[t];if(isArray$1(n)||isString(n)){e=new Array(n.length);for(let c=0,l=n.length;c<l;c++)e[c]=a(n[c],c,void 0,o&&o[c])}else if(typeof n=="number"){e=new Array(n);for(let c=0;c<n;c++)e[c]=a(c+1,c,void 0,o&&o[c])}else if(isObject(n))if(n[Symbol.iterator])e=Array.from(n,(c,l)=>a(c,l,void 0,o&&o[l]));else{const c=Object.keys(n);e=new Array(c.length);for(let l=0,u=c.length;l<u;l++){const i=c[l];e[l]=a(n[i],i,l,o&&o[l])}}else e=[];return s&&(s[t]=e),e}function renderSlot(n,a,s={},t,e){if(currentRenderingInstance.isCE)return createVNode("slot",a==="default"?null:{name:a},t&&t());let o=n[a];o&&o._c&&(o._d=!1),openBlock();const c=o&&ensureValidVNode(o(s)),l=createBlock(Fragment,{key:s.key||`_${a}`},c||(t?t():[]),c&&n._===1?64:-2);return!e&&l.scopeId&&(l.slotScopeIds=[l.scopeId+"-s"]),o&&o._c&&(o._d=!0),l}function ensureValidVNode(n){return n.some(a=>isVNode(a)?!(a.type===Comment||a.type===Fragment&&!ensureValidVNode(a.children)):!0)?n:null}const getPublicInstance=n=>n?isStatefulComponent(n)?getExposeProxy(n)||n.proxy:getPublicInstance(n.parent):null,publicPropertiesMap=extend(Object.create(null),{$:n=>n,$el:n=>n.vnode.el,$data:n=>n.data,$props:n=>n.props,$attrs:n=>n.attrs,$slots:n=>n.slots,$refs:n=>n.refs,$parent:n=>getPublicInstance(n.parent),$root:n=>getPublicInstance(n.root),$emit:n=>n.emit,$options:n=>resolveMergedOptions(n),$forceUpdate:n=>()=>queueJob(n.update),$nextTick:n=>nextTick.bind(n.proxy),$watch:n=>instanceWatch.bind(n)}),PublicInstanceProxyHandlers={get({_:n},a){const{ctx:s,setupState:t,data:e,props:o,accessCache:c,type:l,appContext:u}=n;let i;if(a[0]!=="$"){const b=c[a];if(b!==void 0)switch(b){case 0:return t[a];case 1:return e[a];case 3:return s[a];case 2:return o[a]}else{if(t!==EMPTY_OBJ&&hasOwn(t,a))return c[a]=0,t[a];if(e!==EMPTY_OBJ&&hasOwn(e,a))return c[a]=1,e[a];if((i=n.propsOptions[0])&&hasOwn(i,a))return c[a]=2,o[a];if(s!==EMPTY_OBJ&&hasOwn(s,a))return c[a]=3,s[a];shouldCacheAccess&&(c[a]=4)}}const k=publicPropertiesMap[a];let d,m;if(k)return a==="$attrs"&&track(n,"get",a),k(n);if((d=l.__cssModules)&&(d=d[a]))return d;if(s!==EMPTY_OBJ&&hasOwn(s,a))return c[a]=3,s[a];if(m=u.config.globalProperties,hasOwn(m,a))return m[a]},set({_:n},a,s){const{data:t,setupState:e,ctx:o}=n;if(e!==EMPTY_OBJ&&hasOwn(e,a))e[a]=s;else if(t!==EMPTY_OBJ&&hasOwn(t,a))t[a]=s;else if(hasOwn(n.props,a))return!1;return a[0]==="$"&&a.slice(1)in n?!1:(o[a]=s,!0)},has({_:{data:n,setupState:a,accessCache:s,ctx:t,appContext:e,propsOptions:o}},c){let l;return s[c]!==void 0||n!==EMPTY_OBJ&&hasOwn(n,c)||a!==EMPTY_OBJ&&hasOwn(a,c)||(l=o[0])&&hasOwn(l,c)||hasOwn(t,c)||hasOwn(publicPropertiesMap,c)||hasOwn(e.config.globalProperties,c)}},emptyAppContext=createAppContext();let uid$1=0;function createComponentInstance(n,a,s){const t=n.type,e=(a?a.appContext:n.appContext)||emptyAppContext,o={uid:uid$1++,vnode:n,type:t,parent:a,appContext:e,root:null,next:null,subTree:null,update:null,scope:new EffectScope(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:a?a.provides:Object.create(e.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:normalizePropsOptions(t,e),emitsOptions:normalizeEmitsOptions(t,e),emit:null,emitted:null,propsDefaults:EMPTY_OBJ,inheritAttrs:t.inheritAttrs,ctx:EMPTY_OBJ,data:EMPTY_OBJ,props:EMPTY_OBJ,attrs:EMPTY_OBJ,slots:EMPTY_OBJ,refs:EMPTY_OBJ,setupState:EMPTY_OBJ,setupContext:null,suspense:s,suspenseId:s?s.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return o.ctx={_:o},o.root=a?a.root:o,o.emit=emit$1.bind(null,o),n.ce&&n.ce(o),o}let currentInstance=null;const getCurrentInstance=()=>currentInstance||currentRenderingInstance,setCurrentInstance=n=>{currentInstance=n,n.scope.on()},unsetCurrentInstance=()=>{currentInstance&&currentInstance.scope.off(),currentInstance=null};function isStatefulComponent(n){return n.vnode.shapeFlag&4}let isInSSRComponentSetup=!1;function setupComponent(n,a=!1){isInSSRComponentSetup=a;const{props:s,children:t}=n.vnode,e=isStatefulComponent(n);initProps(n,s,e,a),initSlots(n,t);const o=e?setupStatefulComponent(n,a):void 0;return isInSSRComponentSetup=!1,o}function setupStatefulComponent(n,a){const s=n.type;n.accessCache=Object.create(null),n.proxy=markRaw(new Proxy(n.ctx,PublicInstanceProxyHandlers));const{setup:t}=s;if(t){const e=n.setupContext=t.length>1?createSetupContext(n):null;setCurrentInstance(n),pauseTracking();const o=callWithErrorHandling(t,n,0,[n.props,e]);if(resetTracking(),unsetCurrentInstance(),isPromise(o)){if(o.then(unsetCurrentInstance,unsetCurrentInstance),a)return o.then(c=>{handleSetupResult(n,c,a)}).catch(c=>{handleError(c,n,0)});n.asyncDep=o}else handleSetupResult(n,o,a)}else finishComponentSetup(n,a)}function handleSetupResult(n,a,s){isFunction(a)?n.type.__ssrInlineRender?n.ssrRender=a:n.render=a:isObject(a)&&(n.setupState=proxyRefs(a)),finishComponentSetup(n,s)}let compile;function finishComponentSetup(n,a,s){const t=n.type;if(!n.render){if(!a&&compile&&!t.render){const e=t.template;if(e){const{isCustomElement:o,compilerOptions:c}=n.appContext.config,{delimiters:l,compilerOptions:u}=t,i=extend(extend({isCustomElement:o,delimiters:l},c),u);t.render=compile(e,i)}}n.render=t.render||NOOP}setCurrentInstance(n),pauseTracking(),applyOptions(n),resetTracking(),unsetCurrentInstance()}function createAttrsProxy(n){return new Proxy(n.attrs,{get(a,s){return track(n,"get","$attrs"),a[s]}})}function createSetupContext(n){const a=t=>{n.exposed=t||{}};let s;return{get attrs(){return s||(s=createAttrsProxy(n))},slots:n.slots,emit:n.emit,expose:a}}function getExposeProxy(n){if(n.exposed)return n.exposeProxy||(n.exposeProxy=new Proxy(proxyRefs(markRaw(n.exposed)),{get(a,s){if(s in a)return a[s];if(s in publicPropertiesMap)return publicPropertiesMap[s](n)}}))}function getComponentName(n){return isFunction(n)&&n.displayName||n.name}function isClassComponent(n){return isFunction(n)&&"__vccOpts"in n}function callWithErrorHandling(n,a,s,t){let e;try{e=t?n(...t):n()}catch(o){handleError(o,a,s)}return e}function callWithAsyncErrorHandling(n,a,s,t){if(isFunction(n)){const o=callWithErrorHandling(n,a,s,t);return o&&isPromise(o)&&o.catch(c=>{handleError(c,a,s)}),o}const e=[];for(let o=0;o<n.length;o++)e.push(callWithAsyncErrorHandling(n[o],a,s,t));return e}function handleError(n,a,s,t=!0){const e=a?a.vnode:null;if(a){let o=a.parent;const c=a.proxy,l=s;for(;o;){const i=o.ec;if(i){for(let k=0;k<i.length;k++)if(i[k](n,c,l)===!1)return}o=o.parent}const u=a.appContext.config.errorHandler;if(u){callWithErrorHandling(u,null,10,[n,c,l]);return}}logError(n,s,e,t)}function logError(n,a,s,t=!0){console.error(n)}let isFlushing=!1,isFlushPending=!1;const queue=[];let flushIndex=0;const pendingPreFlushCbs=[];let activePreFlushCbs=null,preFlushIndex=0;const pendingPostFlushCbs=[];let activePostFlushCbs=null,postFlushIndex=0;const resolvedPromise=Promise.resolve();let currentFlushPromise=null,currentPreFlushParentJob=null;function nextTick(n){const a=currentFlushPromise||resolvedPromise;return n?a.then(this?n.bind(this):n):a}function findInsertionIndex(n){let a=flushIndex+1,s=queue.length;for(;a<s;){const t=a+s>>>1;getId(queue[t])<n?a=t+1:s=t}return a}function queueJob(n){(!queue.length||!queue.includes(n,isFlushing&&n.allowRecurse?flushIndex+1:flushIndex))&&n!==currentPreFlushParentJob&&(n.id==null?queue.push(n):queue.splice(findInsertionIndex(n.id),0,n),queueFlush())}function queueFlush(){!isFlushing&&!isFlushPending&&(isFlushPending=!0,currentFlushPromise=resolvedPromise.then(flushJobs))}function invalidateJob(n){const a=queue.indexOf(n);a>flushIndex&&queue.splice(a,1)}function queueCb(n,a,s,t){isArray$1(n)?s.push(...n):(!a||!a.includes(n,n.allowRecurse?t+1:t))&&s.push(n),queueFlush()}function queuePreFlushCb(n){queueCb(n,activePreFlushCbs,pendingPreFlushCbs,preFlushIndex)}function queuePostFlushCb(n){queueCb(n,activePostFlushCbs,pendingPostFlushCbs,postFlushIndex)}function flushPreFlushCbs(n,a=null){if(pendingPreFlushCbs.length){for(currentPreFlushParentJob=a,activePreFlushCbs=[...new Set(pendingPreFlushCbs)],pendingPreFlushCbs.length=0,preFlushIndex=0;preFlushIndex<activePreFlushCbs.length;preFlushIndex++)activePreFlushCbs[preFlushIndex]();activePreFlushCbs=null,preFlushIndex=0,currentPreFlushParentJob=null,flushPreFlushCbs(n,a)}}function flushPostFlushCbs(n){if(pendingPostFlushCbs.length){const a=[...new Set(pendingPostFlushCbs)];if(pendingPostFlushCbs.length=0,activePostFlushCbs){activePostFlushCbs.push(...a);return}for(activePostFlushCbs=a,activePostFlushCbs.sort((s,t)=>getId(s)-getId(t)),postFlushIndex=0;postFlushIndex<activePostFlushCbs.length;postFlushIndex++)activePostFlushCbs[postFlushIndex]();activePostFlushCbs=null,postFlushIndex=0}}const getId=n=>n.id==null?1/0:n.id;function flushJobs(n){isFlushPending=!1,isFlushing=!0,flushPreFlushCbs(n),queue.sort((s,t)=>getId(s)-getId(t));const a=NOOP;try{for(flushIndex=0;flushIndex<queue.length;flushIndex++){const s=queue[flushIndex];s&&s.active!==!1&&callWithErrorHandling(s,null,14)}}finally{flushIndex=0,queue.length=0,flushPostFlushCbs(),isFlushing=!1,currentFlushPromise=null,(queue.length||pendingPreFlushCbs.length||pendingPostFlushCbs.length)&&flushJobs(n)}}function watchEffect(n,a){return doWatch(n,null,a)}const INITIAL_WATCHER_VALUE={};function watch(n,a,s){return doWatch(n,a,s)}function doWatch(n,a,{immediate:s,deep:t,flush:e,onTrack:o,onTrigger:c}=EMPTY_OBJ){const l=currentInstance;let u,i=!1,k=!1;if(isRef(n)?(u=()=>n.value,i=!!n._shallow):isReactive(n)?(u=()=>n,t=!0):isArray$1(n)?(k=!0,i=n.some(isReactive),u=()=>n.map(y=>{if(isRef(y))return y.value;if(isReactive(y))return traverse(y);if(isFunction(y))return callWithErrorHandling(y,l,2)})):isFunction(n)?a?u=()=>callWithErrorHandling(n,l,2):u=()=>{if(!(l&&l.isUnmounted))return d&&d(),callWithAsyncErrorHandling(n,l,3,[m])}:u=NOOP,a&&t){const y=u;u=()=>traverse(y())}let d,m=y=>{d=f.onStop=()=>{callWithErrorHandling(y,l,4)}};if(isInSSRComponentSetup)return m=NOOP,a?s&&callWithAsyncErrorHandling(a,l,3,[u(),k?[]:void 0,m]):u(),NOOP;let b=k?[]:INITIAL_WATCHER_VALUE;const C=()=>{if(!!f.active)if(a){const y=f.run();(t||i||(k?y.some((S,N)=>hasChanged(S,b[N])):hasChanged(y,b)))&&(d&&d(),callWithAsyncErrorHandling(a,l,3,[y,b===INITIAL_WATCHER_VALUE?void 0:b,m]),b=y)}else f.run()};C.allowRecurse=!!a;let O;e==="sync"?O=C:e==="post"?O=()=>queuePostRenderEffect(C,l&&l.suspense):O=()=>{!l||l.isMounted?queuePreFlushCb(C):C()};const f=new ReactiveEffect(u,O);return a?s?C():b=f.run():e==="post"?queuePostRenderEffect(f.run.bind(f),l&&l.suspense):f.run(),()=>{f.stop(),l&&l.scope&&remove(l.scope.effects,f)}}function instanceWatch(n,a,s){const t=this.proxy,e=isString(n)?n.includes(".")?createPathGetter(t,n):()=>t[n]:n.bind(t,t);let o;isFunction(a)?o=a:(o=a.handler,s=a);const c=currentInstance;setCurrentInstance(this);const l=doWatch(e,o.bind(t),s);return c?setCurrentInstance(c):unsetCurrentInstance(),l}function createPathGetter(n,a){const s=a.split(".");return()=>{let t=n;for(let e=0;e<s.length&&t;e++)t=t[s[e]];return t}}function traverse(n,a){if(!isObject(n)||n.__v_skip||(a=a||new Set,a.has(n)))return n;if(a.add(n),isRef(n))traverse(n.value,a);else if(isArray$1(n))for(let s=0;s<n.length;s++)traverse(n[s],a);else if(isSet(n)||isMap(n))n.forEach(s=>{traverse(s,a)});else if(isPlainObject(n))for(const s in n)traverse(n[s],a);return n}function h(n,a,s){const t=arguments.length;return t===2?isObject(a)&&!isArray$1(a)?isVNode(a)?createVNode(n,null,[a]):createVNode(n,a):createVNode(n,null,a):(t>3?s=Array.prototype.slice.call(arguments,2):t===3&&isVNode(s)&&(s=[s]),createVNode(n,a,s))}const version="3.2.20",svgNS="http://www.w3.org/2000/svg",doc=typeof document!="undefined"?document:null,staticTemplateCache=new Map,nodeOps={insert:(n,a,s)=>{a.insertBefore(n,s||null)},remove:n=>{const a=n.parentNode;a&&a.removeChild(n)},createElement:(n,a,s,t)=>{const e=a?doc.createElementNS(svgNS,n):doc.createElement(n,s?{is:s}:void 0);return n==="select"&&t&&t.multiple!=null&&e.setAttribute("multiple",t.multiple),e},createText:n=>doc.createTextNode(n),createComment:n=>doc.createComment(n),setText:(n,a)=>{n.nodeValue=a},setElementText:(n,a)=>{n.textContent=a},parentNode:n=>n.parentNode,nextSibling:n=>n.nextSibling,querySelector:n=>doc.querySelector(n),setScopeId(n,a){n.setAttribute(a,"")},cloneNode(n){const a=n.cloneNode(!0);return"_value"in n&&(a._value=n._value),a},insertStaticContent(n,a,s,t){const e=s?s.previousSibling:a.lastChild;let o=staticTemplateCache.get(n);if(!o){const c=doc.createElement("template");if(c.innerHTML=t?`<svg>${n}</svg>`:n,o=c.content,t){const l=o.firstChild;for(;l.firstChild;)o.appendChild(l.firstChild);o.removeChild(l)}staticTemplateCache.set(n,o)}return a.insertBefore(o.cloneNode(!0),s),[e?e.nextSibling:a.firstChild,s?s.previousSibling:a.lastChild]}};function patchClass(n,a,s){const t=n._vtc;t&&(a=(a?[a,...t]:[...t]).join(" ")),a==null?n.removeAttribute("class"):s?n.setAttribute("class",a):n.className=a}function patchStyle(n,a,s){const t=n.style,e=t.display;if(!s)n.removeAttribute("style");else if(isString(s))a!==s&&(t.cssText=s);else{for(const o in s)setStyle(t,o,s[o]);if(a&&!isString(a))for(const o in a)s[o]==null&&setStyle(t,o,"")}"_vod"in n&&(t.display=e)}const importantRE=/\s*!important$/;function setStyle(n,a,s){if(isArray$1(s))s.forEach(t=>setStyle(n,a,t));else if(a.startsWith("--"))n.setProperty(a,s);else{const t=autoPrefix(n,a);importantRE.test(s)?n.setProperty(hyphenate(t),s.replace(importantRE,""),"important"):n[t]=s}}const prefixes=["Webkit","Moz","ms"],prefixCache={};function autoPrefix(n,a){const s=prefixCache[a];if(s)return s;let t=camelize(a);if(t!=="filter"&&t in n)return prefixCache[a]=t;t=capitalize(t);for(let e=0;e<prefixes.length;e++){const o=prefixes[e]+t;if(o in n)return prefixCache[a]=o}return a}const xlinkNS="http://www.w3.org/1999/xlink";function patchAttr(n,a,s,t,e){if(t&&a.startsWith("xlink:"))s==null?n.removeAttributeNS(xlinkNS,a.slice(6,a.length)):n.setAttributeNS(xlinkNS,a,s);else{const o=isSpecialBooleanAttr(a);s==null||o&&!includeBooleanAttr(s)?n.removeAttribute(a):n.setAttribute(a,o?"":s)}}function patchDOMProp(n,a,s,t,e,o,c){if(a==="innerHTML"||a==="textContent"){t&&c(t,e,o),n[a]=s==null?"":s;return}if(a==="value"&&n.tagName!=="PROGRESS"){n._value=s;const l=s==null?"":s;n.value!==l&&(n.value=l),s==null&&n.removeAttribute(a);return}if(s===""||s==null){const l=typeof n[a];if(l==="boolean"){n[a]=includeBooleanAttr(s);return}else if(s==null&&l==="string"){n[a]="",n.removeAttribute(a);return}else if(l==="number"){try{n[a]=0}catch{}n.removeAttribute(a);return}}try{n[a]=s}catch{}}let _getNow=Date.now,skipTimestampCheck=!1;if(typeof window!="undefined"){_getNow()>document.createEvent("Event").timeStamp&&(_getNow=()=>performance.now());const n=navigator.userAgent.match(/firefox\/(\d+)/i);skipTimestampCheck=!!(n&&Number(n[1])<=53)}let cachedNow=0;const p=Promise.resolve(),reset=()=>{cachedNow=0},getNow=()=>cachedNow||(p.then(reset),cachedNow=_getNow());function addEventListener(n,a,s,t){n.addEventListener(a,s,t)}function removeEventListener(n,a,s,t){n.removeEventListener(a,s,t)}function patchEvent(n,a,s,t,e=null){const o=n._vei||(n._vei={}),c=o[a];if(t&&c)c.value=t;else{const[l,u]=parseName(a);if(t){const i=o[a]=createInvoker(t,e);addEventListener(n,l,i,u)}else c&&(removeEventListener(n,l,c,u),o[a]=void 0)}}const optionsModifierRE=/(?:Once|Passive|Capture)$/;function parseName(n){let a;if(optionsModifierRE.test(n)){a={};let s;for(;s=n.match(optionsModifierRE);)n=n.slice(0,n.length-s[0].length),a[s[0].toLowerCase()]=!0}return[hyphenate(n.slice(2)),a]}function createInvoker(n,a){const s=t=>{const e=t.timeStamp||_getNow();(skipTimestampCheck||e>=s.attached-1)&&callWithAsyncErrorHandling(patchStopImmediatePropagation(t,s.value),a,5,[t])};return s.value=n,s.attached=getNow(),s}function patchStopImmediatePropagation(n,a){if(isArray$1(a)){const s=n.stopImmediatePropagation;return n.stopImmediatePropagation=()=>{s.call(n),n._stopped=!0},a.map(t=>e=>!e._stopped&&t(e))}else return a}const nativeOnRE=/^on[a-z]/,patchProp=(n,a,s,t,e=!1,o,c,l,u)=>{a==="class"?patchClass(n,t,e):a==="style"?patchStyle(n,s,t):isOn(a)?isModelListener(a)||patchEvent(n,a,s,t,c):(a[0]==="."?(a=a.slice(1),!0):a[0]==="^"?(a=a.slice(1),!1):shouldSetAsProp(n,a,t,e))?patchDOMProp(n,a,t,o,c,l,u):(a==="true-value"?n._trueValue=t:a==="false-value"&&(n._falseValue=t),patchAttr(n,a,t,e))};function shouldSetAsProp(n,a,s,t){return t?!!(a==="innerHTML"||a==="textContent"||a in n&&nativeOnRE.test(a)&&isFunction(s)):a==="spellcheck"||a==="draggable"||a==="form"||a==="list"&&n.tagName==="INPUT"||a==="type"&&n.tagName==="TEXTAREA"||nativeOnRE.test(a)&&isString(s)?!1:a in n}const getModelAssigner=n=>{const a=n.props["onUpdate:modelValue"];return isArray$1(a)?s=>invokeArrayFns(a,s):a};function onCompositionStart(n){n.target.composing=!0}function onCompositionEnd(n){const a=n.target;a.composing&&(a.composing=!1,trigger(a,"input"))}function trigger(n,a){const s=document.createEvent("HTMLEvents");s.initEvent(a,!0,!0),n.dispatchEvent(s)}const vModelText={created(n,{modifiers:{lazy:a,trim:s,number:t}},e){n._assign=getModelAssigner(e);const o=t||e.props&&e.props.type==="number";addEventListener(n,a?"change":"input",c=>{if(c.target.composing)return;let l=n.value;s?l=l.trim():o&&(l=toNumber(l)),n._assign(l)}),s&&addEventListener(n,"change",()=>{n.value=n.value.trim()}),a||(addEventListener(n,"compositionstart",onCompositionStart),addEventListener(n,"compositionend",onCompositionEnd),addEventListener(n,"change",onCompositionEnd))},mounted(n,{value:a}){n.value=a==null?"":a},beforeUpdate(n,{value:a,modifiers:{lazy:s,trim:t,number:e}},o){if(n._assign=getModelAssigner(o),n.composing||document.activeElement===n&&(s||t&&n.value.trim()===a||(e||n.type==="number")&&toNumber(n.value)===a))return;const c=a==null?"":a;n.value!==c&&(n.value=c)}},vShow={beforeMount(n,{value:a},{transition:s}){n._vod=n.style.display==="none"?"":n.style.display,s&&a?s.beforeEnter(n):setDisplay(n,a)},mounted(n,{value:a},{transition:s}){s&&a&&s.enter(n)},updated(n,{value:a,oldValue:s},{transition:t}){!a!=!s&&(t?a?(t.beforeEnter(n),setDisplay(n,!0),t.enter(n)):t.leave(n,()=>{setDisplay(n,!1)}):setDisplay(n,a))},beforeUnmount(n,{value:a}){setDisplay(n,a)}};function setDisplay(n,a){n.style.display=a?n._vod:"none"}const rendererOptions=extend({patchProp},nodeOps);let renderer,enabledHydration=!1;function ensureHydrationRenderer(){return renderer=enabledHydration?renderer:createHydrationRenderer(rendererOptions),enabledHydration=!0,renderer}const createSSRApp=(...n)=>{const a=ensureHydrationRenderer().createApp(...n),{mount:s}=a;return a.mount=t=>{const e=normalizeContainer(t);if(e)return s(e,!0,e instanceof SVGElement)},a};function normalizeContainer(n){return isString(n)?document.querySelector(n):n}var serializedSiteData=`{"lang":"en-US","title":"Documentation","description":"ServiceStack Docs","base":"/","head":[["script",{"src":"custom.js"}]],"themeConfig":{"repo":"ServiceStack/vitepress-docs","docsDir":"docs","editLinks":true,"editLinkText":"Edit this page on GitHub","lastUpdated":"Last Updated","nav":[{"text":"What's New","link":"https://servicestack.net/whatsnew"},{"text":"Project Templates","link":"/templates-overview","activeMatch":"^/(templates|dotnet-new)"},{"text":"AutoQuery","link":"/autoquery","activeMatch":"^/(autoquery|why-not-odata)"},{"text":"Security","link":"/auth","activeMatch":"(auth|sessions)"},{"text":"gRPC","link":"/grpc","activeMatch":"^/grpc"}],"sidebar":{"/templates":[{"text":"Project Templates","children":[{"text":"Overview","link":"/templates-overview"},{"text":"ASP.NET Core on .NET Framework","link":"/templates-corefx"},{"text":"x new - Project Template","link":"/dotnet-new"},{"text":"Single Page App Templates","link":"/templates-single-page-apps"},{"text":"Website Templates","link":"/templates-websites"},{"text":"Empty Starting Templates","link":"/templates-empty-starting"},{"text":"Vue and React \\"lite\\" Templates","link":"/templates-lite"},{"text":"Vuetify Templates","link":"/templates-vuetify"},{"text":"Nuxt Templates","link":"/templates-nuxt"},{"text":"Vue Templates","link":"/templates-vue"},{"text":"React Templates","link":"/templates-react"},{"text":"Svelte Templates","link":"/templates-svelte"},{"text":"Angular Templates","link":"/templates-angular"},{"text":"AWS Lambda Templates","link":"/templates-aws"},{"text":"Desktop Templates","link":"/templates-desktop"},{"text":"Blazor Templates","link":"/templates-blazor"},{"text":"Vue, React, Angular Components","link":"/templates-spa-components"},{"text":"Tour of Webpack","link":"/templates-webpack"},{"text":"Install ServiceStackVS","link":"/templates-install-servicestackvs"},{"text":"Cross platform dotnet scripts","link":"/templates-dotnet-scripts"}]}],"/dotnet-new":[{"text":"Project Templates","children":[{"text":"Overview","link":"/templates-overview"},{"text":"ASP.NET Core on .NET Framework","link":"/templates-corefx"},{"text":"x new - Project Template","link":"/dotnet-new"},{"text":"Single Page App Templates","link":"/templates-single-page-apps"},{"text":"Website Templates","link":"/templates-websites"},{"text":"Empty Starting Templates","link":"/templates-empty-starting"},{"text":"Vue and React \\"lite\\" Templates","link":"/templates-lite"},{"text":"Vuetify Templates","link":"/templates-vuetify"},{"text":"Nuxt Templates","link":"/templates-nuxt"},{"text":"Vue Templates","link":"/templates-vue"},{"text":"React Templates","link":"/templates-react"},{"text":"Svelte Templates","link":"/templates-svelte"},{"text":"Angular Templates","link":"/templates-angular"},{"text":"AWS Lambda Templates","link":"/templates-aws"},{"text":"Desktop Templates","link":"/templates-desktop"},{"text":"Blazor Templates","link":"/templates-blazor"},{"text":"Vue, React, Angular Components","link":"/templates-spa-components"},{"text":"Tour of Webpack","link":"/templates-webpack"},{"text":"Install ServiceStackVS","link":"/templates-install-servicestackvs"},{"text":"Cross platform dotnet scripts","link":"/templates-dotnet-scripts"}]}],"/autoquery":[{"text":"AutoQuery","children":[{"text":"Overview","link":"/autoquery"},{"text":"AutoQuery RDBMS","link":"/autoquery-rdbms"},{"text":"AutoQuery Data","link":"/autoquery-data"},{"text":"AutoQuery Data Memory","link":"/autoquery-memory"},{"text":"AutoQuery Data Service","link":"/autoquery-service"},{"text":"AutoQuery Data DynamoDB","link":"/autoquery-dynamodb"},{"text":"AutoQuery CRUD","link":"/autoquery-crud"},{"text":"AutoQuery Audit Log","link":"/autoquery-audit-log"},{"text":"AutoGen","link":"/autoquery-autogen"},{"text":"AutoQuery CRUD Bookings Demo","link":"/autoquery-crud-bookings"},{"text":"Why Not OData","link":"/why-not-odata"}]}],"/why-not-odata":[{"text":"AutoQuery","children":[{"text":"Overview","link":"/autoquery"},{"text":"AutoQuery RDBMS","link":"/autoquery-rdbms"},{"text":"AutoQuery Data","link":"/autoquery-data"},{"text":"AutoQuery Data Memory","link":"/autoquery-memory"},{"text":"AutoQuery Data Service","link":"/autoquery-service"},{"text":"AutoQuery Data DynamoDB","link":"/autoquery-dynamodb"},{"text":"AutoQuery CRUD","link":"/autoquery-crud"},{"text":"AutoQuery Audit Log","link":"/autoquery-audit-log"},{"text":"AutoGen","link":"/autoquery-autogen"},{"text":"AutoQuery CRUD Bookings Demo","link":"/autoquery-crud-bookings"},{"text":"Why Not OData","link":"/why-not-odata"}]}],"/auth":[{"text":"Security","children":[{"text":"Overview","link":"/auth"},{"text":"Authentication & Authorization","link":"/authentication-and-authorization"},{"text":"Auth Repository","link":"/auth-repository"},{"text":"Using ServiceStack Auth in MVC","link":"/authentication-identity-servicestack"},{"text":"Using ASP.NET Identity Auth","link":"/authentication-identity-aspnet"},{"text":"Using IdentityServer4 Auth","link":"/authentication-identityserver"},{"text":"Sessions","link":"/sessions"},{"text":"JWT AuthProvider","link":"/jwt-authprovider"},{"text":"API Key AuthProvider","link":"/api-key-authprovider"},{"text":"Sign in with Apple AuthProvider","link":"/auth-signin-with-apple"},{"text":"Open Id 2.0 Support","link":"/auth-openid"},{"text":"Restricting Services","link":"/auth-restricting-services"},{"text":"Anti Forgery","link":"/auth-anti-forgery"}]}],"/sessions":[{"text":"Security","children":[{"text":"Overview","link":"/auth"},{"text":"Authentication & Authorization","link":"/authentication-and-authorization"},{"text":"Auth Repository","link":"/auth-repository"},{"text":"Using ServiceStack Auth in MVC","link":"/authentication-identity-servicestack"},{"text":"Using ASP.NET Identity Auth","link":"/authentication-identity-aspnet"},{"text":"Using IdentityServer4 Auth","link":"/authentication-identityserver"},{"text":"Sessions","link":"/sessions"},{"text":"JWT AuthProvider","link":"/jwt-authprovider"},{"text":"API Key AuthProvider","link":"/api-key-authprovider"},{"text":"Sign in with Apple AuthProvider","link":"/auth-signin-with-apple"},{"text":"Open Id 2.0 Support","link":"/auth-openid"},{"text":"Restricting Services","link":"/auth-restricting-services"},{"text":"Anti Forgery","link":"/auth-anti-forgery"}]}],"/jwt-authprovider":[{"text":"Security","children":[{"text":"Overview","link":"/auth"},{"text":"Authentication & Authorization","link":"/authentication-and-authorization"},{"text":"Auth Repository","link":"/auth-repository"},{"text":"Using ServiceStack Auth in MVC","link":"/authentication-identity-servicestack"},{"text":"Using ASP.NET Identity Auth","link":"/authentication-identity-aspnet"},{"text":"Using IdentityServer4 Auth","link":"/authentication-identityserver"},{"text":"Sessions","link":"/sessions"},{"text":"JWT AuthProvider","link":"/jwt-authprovider"},{"text":"API Key AuthProvider","link":"/api-key-authprovider"},{"text":"Sign in with Apple AuthProvider","link":"/auth-signin-with-apple"},{"text":"Open Id 2.0 Support","link":"/auth-openid"},{"text":"Restricting Services","link":"/auth-restricting-services"},{"text":"Anti Forgery","link":"/auth-anti-forgery"}]}],"/api-key-authprovider":[{"text":"Security","children":[{"text":"Overview","link":"/auth"},{"text":"Authentication & Authorization","link":"/authentication-and-authorization"},{"text":"Auth Repository","link":"/auth-repository"},{"text":"Using ServiceStack Auth in MVC","link":"/authentication-identity-servicestack"},{"text":"Using ASP.NET Identity Auth","link":"/authentication-identity-aspnet"},{"text":"Using IdentityServer4 Auth","link":"/authentication-identityserver"},{"text":"Sessions","link":"/sessions"},{"text":"JWT AuthProvider","link":"/jwt-authprovider"},{"text":"API Key AuthProvider","link":"/api-key-authprovider"},{"text":"Sign in with Apple AuthProvider","link":"/auth-signin-with-apple"},{"text":"Open Id 2.0 Support","link":"/auth-openid"},{"text":"Restricting Services","link":"/auth-restricting-services"},{"text":"Anti Forgery","link":"/auth-anti-forgery"}]}],"/grpc":[{"text":"ServiceStack gRPC","children":[{"text":"Overview","link":"/grpc"},{"text":"SSL Configuration","link":"/grpc-ssl"},{"text":"C#/F#/VB.NET Generic Clients","link":"/grpc-generic"},{"text":"gRPC Flutter","link":"/grpc-flutter"},{"text":"gRPC Android","link":"/grpc-android"},{"text":"gRPC C#","link":"/grpc-csharp"},{"text":"gRPC Swift","link":"/grpc-swift"},{"text":"gRPC Java","link":"/grpc-java"},{"text":"gRPC Dart","link":"/grpc-dart"},{"text":"gRPC GO","link":"/grpc-go"},{"text":"gRPC Node.js","link":"/grpc-nodejs"},{"text":"gRPC Python","link":"/grpc-python"},{"text":"gRPC Ruby","link":"/grpc-ruby"},{"text":"gRPC PHP","link":"/grpc-php"}]}],"/":[{"text":"Overview","children":[{"text":"Why ServiceStack","link":"/why-servicestack"},{"text":"Architecture Overview","link":"/architecture-overview"},{"text":"Servicify existing Systems","link":"/servicify"},{"text":"Explore ServiceStack","link":"/explore-servicestack"}]},{"text":"Releases","children":[{"text":"Latest Release Notes","link":"/releases/v5.12.html"},{"text":"Release Notes History","link":"/release-notes-history"},{"text":"Pre-release MyGet Packages","link":"/myget"}]},{"text":"Getting Started","children":[{"text":"Create your first WebService","link":"/create-your-first-webservice"},{"text":"Your first WebService explained","link":"/your-first-webservice-explained"},{"text":"Service API Design","link":"/api-design"},{"text":"Service Return Types","link":"/service-return-types"},{"text":"Design RESTful Services","link":"/design-rest-services"},{"text":"Design Message-based APIs","link":"/design-message-based-apis"},{"text":"Modular Startup","link":"/modular-startup"},{"text":"Unified Navigation","link":"/navigation"},{"text":"dotnet tool - Win/Mac/Linux Utility Belt","link":"/dotnet-tool"},{"text":"app tool - .NET Core Windows Desktop","link":"/netcore-windows-desktop"},{"text":"mix tool - Mix n' Match .NET Apps","link":"/mix-tool"},{"text":"Post Command - Inspect/Call HTTP APIs","link":"/post-command"}]},{"text":"GitHub Action Templates","children":[{"text":"Overview","link":"/github-action-templates"},{"text":"GitHub GHR & Digital Ocean","link":"/do-github-action-mix-deployment"},{"text":"AWS ECR & ECS with NGINX","link":"/mix-github-actions-aws-ecs"}]},{"text":"Background Concepts","children":[{"text":"What is a Message-based Web Service","link":"/what-is-a-message-based-web-service"},{"text":"Advantages of message-based Services","link":"/advantages-of-message-based-web-services"},{"text":"Why Remote Services should use DTOs","link":"/why-remote-services-use-dtos"},{"text":"Complexity, Services and Role of DTOs","link":"/service-complexity-and-dto-roles"},{"text":"API First Development","link":"/api-first-development"}]},{"text":"ServiceStack Studio","children":[{"text":"Overview","link":"/studio"},{"text":"Studio - User Management","link":"/studio-users"},{"text":"Studio - AutoQuery UI","link":"/studio-autoquery"},{"text":"Studio - DB Validation Rules","link":"/studio-validation-rules"}]},{"text":"Reference","children":[{"text":"AppHost","link":"/host-configuration"},{"text":"IOC","link":"/ioc"},{"text":"Routing","link":"/routing"},{"text":"Order of Operations","link":"/order-of-operations"},{"text":"Customize HTTP Responses","link":"/customize-http-responses"},{"text":"Customize JSON Responses","link":"/customize-json-responses"},{"text":"Configuration & AppSettings","link":"/appsettings"},{"text":"Metadata Pages","link":"/metadata-page"},{"text":"SVG Support","link":"/svg"},{"text":"REST, SOAP & default endpoints","link":"/endpoints"},{"text":"SOAP support","link":"/soap-support"}]},{"text":"Error Handling","children":[{"text":"Overview","link":"/error-handling"},{"text":"Validation","link":"/validation"},{"text":"World Validation","link":"/world-validation"},{"text":"Declarative Validation","link":"/declarative-validation"},{"text":"Debugging","link":"/debugging"}]},{"text":"Server Events","children":[{"text":"Overview","link":"/server-events"},{"text":"C# Client","link":"/csharp-server-events-client"},{"text":"TypeScript Client","link":"/typescript-server-events-client"},{"text":"Java Client","link":"/java-server-events-client"},{"text":"JavaScript Client","link":"/javascript-server-events-client"},{"text":"gRPC Clients","link":"/server-events-grpc"},{"text":"Redis Server Events","link":"/redis-server-events"}]},{"text":"Service Gateway","children":[{"text":"Overview","link":"/service-gateway"},{"text":"Service Discovery","link":"/service-discovery"}]},{"text":"Clients","children":[{"text":"Overview","link":"/clients-overview"},{"text":"C#/.NET Client","link":"/csharp-client"},{"text":"TypeScript Client","link":"/typescript-add-servicestack-reference#typescript-serviceclient"},{"text":"JavaScript Client","link":"/javascript-client"},{"text":"Java Client","link":"/java-add-servicestack-reference#jsonserviceclient-api"},{"text":"Swift Client","link":"/swift-add-servicestack-reference#swift-client-usage"},{"text":"Dart Client","link":"/dart-add-servicestack-reference#example-usage"},{"text":"Silverlight Client","link":"/silverlight-client"},{"text":"MQ Clients","link":"/messaging#mq-client-architecture"}]},{"text":"Jupyter Notebooks","children":[{"text":"Overview","link":"/jupyter-notebooks"},{"text":"Python Jupyter Notebooks","link":"/jupyter-notebooks-python"},{"text":"C# Jupyter Notebooks","link":"/jupyter-notebooks-csharp"},{"text":"F# Jupyter Notebooks","link":"/jupyter-notebooks-fsharp"},{"text":"Reports and Testing","link":"/jupyter-notebooks-reporting"}]},{"text":"Add ServiceStack Reference","children":[{"text":"Overview","link":"/add-servicestack-reference"},{"text":"C# Add Reference","link":"/csharp-add-servicestack-reference"},{"text":"TypeScript Add Reference","link":"/typescript-add-servicestack-reference"},{"text":"Python Add Reference","link":"/python-add-servicestack-reference"},{"text":"Swift Add Reference","link":"/swift-add-servicestack-reference"},{"text":"Java Add Reference","link":"/java-add-servicestack-reference"},{"text":"Kotlin Add Reference","link":"/kotlin-add-servicestack-reference"},{"text":"Dart Add Reference","link":"/dart-add-servicestack-reference"},{"text":"F# Add Reference","link":"/fsharp-add-servicestack-reference"},{"text":"VB.NET Add Reference","link":"/vbnet-add-servicestack-reference"}]},{"text":"MQ Messaging","children":[{"text":"Overview","link":"/messaging"},{"text":"Background MQ","link":"/background-mq"},{"text":"Rabbit MQ","link":"/rabbit-mq"},{"text":"Redis MQ","link":"/redis-mq"},{"text":"Amazon SQS MQ","link":"/amazon-sqs-mq"},{"text":"Azure Service Bus MQ","link":"/azure-service-bus-mq"}]},{"text":"Encrypted Messaging","children":[{"text":"Overview","link":"/encrypted-messaging"}]},{"text":"Advanced","children":[{"text":"Logging","link":"/logging"},{"text":"Request & Response filters","link":"/request-and-response-filters"},{"text":"Filter attributes","link":"/filter-attributes"},{"text":"Access HTTP features in services","link":"/access-http-specific-features-in-services"},{"text":"Serialization & Deserialization","link":"/serialization-deserialization"},{"text":"Auto-Mapping","link":"/auto-mapping"},{"text":"Auto Batched Requests","link":"/auto-batched-requests"},{"text":"Virtual File System","link":"/virtual-file-system"},{"text":"Multitenancy","link":"/multitenancy"},{"text":"Physical Project Structure","link":"/physical-project-structure"},{"text":"Modularizing Services","link":"/modularizing-services"},{"text":"Built-in profiling","link":"/built-in-profiling"},{"text":"Hot Reloading","link":"/hot-reloading"},{"text":"HTML, CSS and JS Minifiers","link":"/html-css-and-javascript-minification"},{"text":"MVC Integration","link":"/mvc-integration"},{"text":"ServiceStack Integration","link":"/servicestack-integration"},{"text":"Run side-by-side with another fx","link":"/servicestack-side-by-side-with-another-web-framework"},{"text":"Versioning","link":"/versioning"},{"text":"Config API","link":"/config-api"},{"text":"Concurrency Model","link":"/concurrency-model"},{"text":"Form Hijacking Prevention","link":"/form-hijacking-prevention"},{"text":"Create a WebService from scratch","link":"/create-webservice-from-scratch"}]},{"text":"Formats","children":[{"text":"Overview","link":"/formats"},{"text":"JSON Format","link":"/json-format"},{"text":"JSV Format","link":"/jsv-format"},{"text":"CSV Format","link":"/csv-format"},{"text":"MessagePack Format","link":"/messagepack-format"},{"text":"ProtoBuf Format","link":"/protobuf-format"},{"text":"Wire Format","link":"/wire-format"},{"text":"HTML5 Report Format","link":"/html5reportformat"}]},{"text":".NET Core","children":[{"text":"Overview","link":"/netcore"},{"text":".NET Core Redis","link":"/netcore-redis"},{"text":"Configure localhost dev cert","link":"/netcore-localhost-cert"},{"text":"Deploy to Amazon Linux 2 AMI","link":"/deploy-netcore-to-amazon-linux-2-ami"},{"text":"Deploy .NET Core Apps to AWS ECS","link":"/deploy-netcore-docker-aws-ecs"},{"text":"Deploy .NET Core Apps using rsync","link":"/netcore-deploy-rsync"}]},{"text":"Utils","children":[{"text":"HTTP Utils","link":"/http-utils"},{"text":"Dump Utils","link":"/dump-utils"},{"text":"Reflection Utils","link":"/reflection-utils"},{"text":"JS Utils","link":"/js-utils"},{"text":"Adhoc Utils","link":"/adhoc-utils"},{"text":"Simple IOC","link":"/simple-ioc"}]},{"text":"Caching","children":[{"text":"Overview","link":"/caching"},{"text":"HTTP Caching","link":"/http-caching"},{"text":"CacheResponse Attribute","link":"/cacheresponse-attribute"},{"text":"Cache Aware Clients","link":"/cache-aware-clients"},{"text":"Compression","link":"/compression"}]},{"text":"Plugins","children":[{"text":"Overview","link":"/plugins"},{"text":"Open API","link":"/openapi"},{"text":"Swagger API","link":"/swagger-api"},{"text":"User Admin Feature","link":"/admin-users"},{"text":"CORS Feature","link":"/corsfeature"},{"text":"Proxy Feature","link":"/proxy-feature"},{"text":"Request logger","link":"/request-logger"},{"text":"Lisp TCP REPL Server","link":"/lisp-tcp-repl-server"},{"text":"Postman","link":"/postman"},{"text":"Sitemaps","link":"/sitemaps"},{"text":"Cancellable Requests","link":"/cancellable-requests"},{"text":"Webhooks","link":"/webhooks"}]},{"text":"View Engines","children":[{"text":"ServiceStack Razor","link":"/netcore-razor"},{"text":"Razor UI Controls","link":"/razor-ui-controls"},{"text":"Razor Notes","link":"/razor-notes"},{"text":"View and Template Selection","link":"/view-and-template-selection"},{"text":"Compiled Razor Views","link":"/compiled-razor-views"},{"text":"Razor Views vs Content Pages","link":"/razor-views-vs-content-pages"}]},{"text":"JavaScript Web Apps","children":[{"text":"Vue Components","link":"/vue-components"},{"text":"Embedded UMD @servicestack/client","link":"/servicestack-client-umd"},{"text":"ss-utils.js JavaScript Client Library","link":"/ss-utils-js"}]},{"text":"Hosts","children":[{"text":"IIS","link":"/iis"},{"text":"Self-hosting","link":"/self-hosting"}]},{"text":"Tests","children":[{"text":"Testing","link":"/testing"},{"text":"HowTo write unit & integration tests","link":"/howto-write-unit-integration-tests"}]},{"text":"Java","children":[{"text":"Java ServiceStack Resources","link":"/java"},{"text":"Android Studio & IntelliJ","link":"/java-add-servicestack-reference#servicestack-idea-android-studio-plugin"}]},{"text":"Other Languages","children":[{"text":"Swift","link":"/swift"},{"text":"F#","link":"/fsharp"},{"text":"VB.NET","link":"/vbnet"}]},{"text":"Deployment","children":[{"text":"Deploy Multiple Sites to single AWS","link":"/deploy-multiple-sites-to-aws"},{"text":"Simple Deployments with WebDeploy","link":"/simple-deployments-to-aws"},{"text":"Deployments with OctopusDeploy","link":"/advanced-deployment-octopus-deploy"}]},{"text":"Amazon Web Services","children":[{"text":"Overview","link":"/aws"},{"text":"PocoDynamo","link":"/aws-pocodynamo"},{"text":"Getting Started with AWS","link":"/aws-getting-started"}]},{"text":"Use Cases","children":[{"text":"Azure","link":"/azure"}]},{"text":"Install 3rd Party Products","children":[{"text":"Redis on Windows","link":"/install-redis-windows"},{"text":"RabbitMQ on Windows","link":"/install-rabbitmq-windows"},{"text":"Redis SSL on Azure","link":"/ssl-redis-azure"}]},{"text":"Performance","children":[{"text":"Real world performance","link":"/real-world-performance"}]},{"text":"Future","children":[{"text":"Roadmap","link":"/roadmap"}]}]}},"locales":{},"langs":{}}`;const EXTERNAL_URL_RE=/^https?:/i,inBrowser=typeof window!="undefined";function findMatchRoot(n,a){a.sort((s,t)=>{const e=t.split("/").length-s.split("/").length;return e!==0?e:t.length-s.length});for(const s of a)if(n.startsWith(s))return s}function resolveLocales(n,a){const s=findMatchRoot(a,Object.keys(n));return s?n[s]:void 0}function createLangDictionary(n){const{locales:a}=n.themeConfig||{},s=n.locales;return a&&s?Object.keys(a).reduce((t,e)=>(t[e]={label:a[e].label,lang:s[e].lang},t),{}):{}}function resolveSiteDataByRoute(n,a){a=cleanRoute(n,a);const s=resolveLocales(n.locales||{},a),t=resolveLocales(n.themeConfig.locales||{},a);return Object.assign({},n,s,{themeConfig:Object.assign({},n.themeConfig,t,{locales:{}}),lang:(s||n).lang,locales:{},langs:createLangDictionary(n)})}function cleanRoute(n,a){if(!inBrowser)return a;const s=n.base,t=s.endsWith("/")?s.slice(0,-1):s;return a.slice(t.length)}const dataSymbol=Symbol(),siteDataRef=shallowRef(parse(serializedSiteData));function parse(n){return readonly(JSON.parse(n))}function initData(n){const a=computed(()=>resolveSiteDataByRoute(siteDataRef.value,n.path));return{site:a,theme:computed(()=>a.value.themeConfig),page:computed(()=>n.data),frontmatter:computed(()=>n.data.frontmatter),lang:computed(()=>a.value.lang),localePath:computed(()=>{const{langs:s,lang:t}=a.value,e=Object.keys(s).find(o=>s[o].lang===t);return withBase(e||"/")}),title:computed(()=>n.data.title?n.data.title+" | "+a.value.title:a.value.title),description:computed(()=>n.data.description||a.value.description)}}function useData(){const n=inject(dataSymbol);if(!n)throw new Error("vitepress data not properly injected in app");return n}function joinPath(n,a){return`${n}${a}`.replace(/\/+/g,"/")}function withBase(n){return EXTERNAL_URL_RE.test(n)?n:joinPath(siteDataRef.value.base,n)}function pathToFile(n){let a=n.replace(/\.html$/,"");if(a=decodeURIComponent(a),a.endsWith("/")&&(a+="index"),inBrowser){const s="/";a=a.slice(s.length).replace(/\//g,"_")+".md";const t=__VP_HASH_MAP__[a.toLowerCase()];a=`${s}assets/${a}.${t}.js`}else a=`./${a.slice(1).replace(/\//g,"_")}.md.js`;return a}const RouterSymbol=Symbol(),fakeHost="http://a.com",getDefaultRoute=()=>({path:"/",component:null,data:null});function createRouter(n,a){const s=reactive(getDefaultRoute());function t(c=inBrowser?location.href:"/"){const l=new URL(c,fakeHost);return!l.pathname.endsWith("/")&&!l.pathname.endsWith(".html")&&(c=l.pathname+l.search+l.hash),inBrowser&&(history.replaceState({scrollPosition:window.scrollY},document.title),history.pushState(null,"",c)),o(c)}let e=null;async function o(c,l=0){const u=new URL(c,fakeHost),i=e=u.pathname;try{let k=n(i);if("then"in k&&typeof k.then=="function"&&(k=await k),e===i){e=null;const{default:d,__pageData:m}=k;if(!d)throw new Error(`Invalid route component: ${d}`);s.path=i,s.component=markRaw(d),s.data=markRaw(JSON.parse(m)),inBrowser&&nextTick(()=>{if(u.hash&&!l){let b=null;try{b=document.querySelector(decodeURIComponent(u.hash))}catch(C){console.warn(C)}if(b){scrollTo(b,u.hash);return}}window.scrollTo(0,l)})}}catch(k){k.message.match(/fetch/)||console.error(k),e===i&&(e=null,s.path=i,s.component=a?markRaw(a):null)}}return inBrowser&&(window.addEventListener("click",c=>{const l=c.target.closest("a");if(l){const{href:u,protocol:i,hostname:k,pathname:d,hash:m,target:b}=l,C=window.location,O=d.match(/\.\w+$/);!c.ctrlKey&&!c.shiftKey&&!c.altKey&&!c.metaKey&&b!=="_blank"&&i===C.protocol&&k===C.hostname&&!(O&&O[0]!==".html")&&(c.preventDefault(),d===C.pathname?m&&m!==C.hash&&(history.pushState(null,"",m),window.dispatchEvent(new Event("hashchange")),scrollTo(l,m,l.classList.contains("header-anchor"))):t(u))}},{capture:!0}),window.addEventListener("popstate",c=>{o(location.href,c.state&&c.state.scrollPosition||0)}),window.addEventListener("hashchange",c=>{c.preventDefault()})),{route:s,go:t}}function useRouter(){const n=inject(RouterSymbol);if(!n)throw new Error("useRouter() is called without provider.");return n}function useRoute(){return useRouter().route}function scrollTo(n,a,s=!1){let t=null;try{t=n.classList.contains(".header-anchor")?n:document.querySelector(decodeURIComponent(a))}catch(e){console.warn(e)}if(t){const e=t.offsetTop;!s||Math.abs(e-window.scrollY)>window.innerHeight?window.scrollTo(0,e):window.scrollTo({left:0,top:e,behavior:"smooth"})}}function useUpdateHead(n,a){let s=[],t=!0;const e=o=>{if(t){t=!1;return}const c=[],l=Math.min(s.length,o.length);for(let u=0;u<l;u++){let i=s[u];const[k,d,m=""]=o[u];if(i.tagName.toLocaleLowerCase()===k){for(const b in d)i.getAttribute(b)!==d[b]&&i.setAttribute(b,d[b]);for(let b=0;b<i.attributes.length;b++){const C=i.attributes[b].name;C in d||i.removeAttribute(C)}i.innerHTML!==m&&(i.innerHTML=m)}else document.head.removeChild(i),i=createHeadElement(o[u]),document.head.append(i);c.push(i)}s.slice(l).forEach(u=>document.head.removeChild(u)),o.slice(l).forEach(u=>{const i=createHeadElement(u);document.head.appendChild(i),c.push(i)}),s=c};watchEffect(()=>{const o=n.data,c=a.value,l=o&&o.title,u=o&&o.description,i=o&&o.frontmatter.head;document.title=(l?l+" | ":"")+c.title,document.querySelector("meta[name=description]").setAttribute("content",u||c.description),e([...i?filterOutHeadDescription(i):[]])})}function createHeadElement([n,a,s]){const t=document.createElement(n);for(const e in a)t.setAttribute(e,a[e]);return s&&(t.innerHTML=s),t}function isMetaDescription(n){return n[0]==="meta"&&n[1]&&n[1].name==="description"}function filterOutHeadDescription(n){return n.filter(a=>!isMetaDescription(a))}var vars="",layout="",code="",customBlocks="",sidebarLinks="";const Content=defineComponent({name:"VitePressContent",setup(){const n=useRoute();return()=>h("div",{style:{position:"relative"}},[n.component?h(n.component):null])}});var Debug_vue_vue_type_style_index_0_scoped_true_lang="",_export_sfc=(n,a)=>{for(const[s,t]of a)n[s]=t;return n};const hashRE=/#.*$/,extRE=/(index)?\.(md|html)$/,endingSlashRE=/\/$/,outboundRE=/^[a-z]+:/i;function isArray(n){return Array.isArray(n)}function isExternal(n){return outboundRE.test(n)}function isActive(n,a){if(a===void 0)return!1;const s=normalize(`/${n.data.relativePath}`),t=normalize(a);return s===t}function normalize(n){return decodeURI(n).replace(hashRE,"").replace(extRE,"")}function joinUrl(n,a){const s=n.endsWith("/"),t=a.startsWith("/");return s&&t?n.slice(0,-1)+a:!s&&!t?`${n}/${a}`:n+a}function ensureStartingSlash(n){return/^\//.test(n)?n:`/${n}`}function removeExtention(n){return n.replace(/(index)?(\.(md|html))?$/,"")||"/"}function isSideBarConfig(n){return n===!1||n==="auto"||isArray(n)}function isSideBarGroup(n){return n.children!==void 0}function isSideBarEmpty(n){return isArray(n)?n.length===0:!n}function getSideBarConfig(n,a){if(isSideBarConfig(n))return n;a=ensureStartingSlash(a);for(const s in n)if(a.startsWith(ensureStartingSlash(s)))return n[s];return"auto"}function getFlatSideBarLinks(n){return n.reduce((a,s)=>(s.link&&a.push({text:s.text,link:removeExtention(s.link)}),isSideBarGroup(s)&&(a=[...a,...getFlatSideBarLinks(s.children)]),a),[])}var NavBarTitle_vue_vue_type_style_index_0_scoped_true_lang="";const _hoisted_1$E=["href","aria-label"],_hoisted_2$j=["src"],_sfc_main$J=defineComponent({setup(n){const{site:a,theme:s,localePath:t}=useData();return(e,o)=>(openBlock(),createElementBlock("a",{class:"nav-bar-title",href:unref(t),"aria-label":`${unref(a).title}, back to home`},[unref(s).logo?(openBlock(),createElementBlock("img",{key:0,class:"logo",src:unref(withBase)(unref(s).logo),alt:"Logo"},null,8,_hoisted_2$j)):createCommentVNode("v-if",!0),createTextVNode(" "+toDisplayString(unref(a).title),1)],8,_hoisted_1$E))}});var NavBarTitle=_export_sfc(_sfc_main$J,[["__scopeId","data-v-4a583abe"]]);function useLanguageLinks(){const{site:n,localePath:a,theme:s}=useData();return computed(()=>{const t=n.value.langs,e=Object.keys(t);if(e.length<2)return null;const c=useRoute().path.replace(a.value,""),l=e.map(i=>({text:t[i].label,link:`${i}${c}`}));return{text:s.value.selectText||"Languages",items:l}})}const platforms=["GitHub","GitLab","Bitbucket"].map(n=>[n,new RegExp(n,"i")]);function useRepo(){const{site:n}=useData();return computed(()=>{const a=n.value.themeConfig,s=a.docsRepo||a.repo;if(!s)return null;const t=getRepoUrl(s);return{text:getRepoText(t,a.repoLabel),link:t}})}function getRepoUrl(n){return EXTERNAL_URL_RE.test(n)?n:`https://github.com/${n}`}function getRepoText(n,a){if(a)return a;const s=n.match(/^https?:\/\/[^/]+/);if(!s)return"Source";const t=platforms.find(([e,o])=>o.test(s[0]));return t&&t[0]?t[0]:"Source"}function useNavLink(n){const a=useRoute(),s=isExternal(n.value.link);return{props:computed(()=>{const e=normalizePath(`/${a.data.relativePath}`);let o=!1;if(n.value.activeMatch)o=new RegExp(n.value.activeMatch).test(e);else{const c=normalizePath(n.value.link);o=c==="/"?c===e:e.startsWith(c)}return{class:{active:o,isExternal:s},href:s?n.value.link:withBase(n.value.link),target:n.value.target||(s?"_blank":null),rel:n.value.rel||(s?"noopener noreferrer":null),"aria-label":n.value.ariaLabel}}),isExternal:s}}function normalizePath(n){return n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\.(html|md)$/,"").replace(/\/index$/,"/")}var OutboundLink_vue_vue_type_style_index_0_lang="";const _sfc_main$I={},_hoisted_1$D={class:"icon outbound",xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"},_hoisted_2$i=createBaseVNode("path",{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"},null,-1),_hoisted_3$d=createBaseVNode("polygon",{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"},null,-1),_hoisted_4$3=[_hoisted_2$i,_hoisted_3$d];function _sfc_render$t(n,a){return openBlock(),createElementBlock("svg",_hoisted_1$D,_hoisted_4$3)}var OutboundLink=_export_sfc(_sfc_main$I,[["render",_sfc_render$t]]),NavLink_vue_vue_type_style_index_0_scoped_true_lang="";const _hoisted_1$C={class:"nav-link"},_sfc_main$H=defineComponent({props:{item:null},setup(n){const s=toRefs(n),{props:t,isExternal:e}=useNavLink(s.item);return(o,c)=>(openBlock(),createElementBlock("div",_hoisted_1$C,[createBaseVNode("a",mergeProps({class:"item"},unref(t)),[createTextVNode(toDisplayString(n.item.text)+" ",1),unref(e)?(openBlock(),createBlock(OutboundLink,{key:0})):createCommentVNode("v-if",!0)],16)]))}});var NavLink=_export_sfc(_sfc_main$H,[["__scopeId","data-v-b8818f8c"]]),NavDropdownLinkItem_vue_vue_type_style_index_0_scoped_true_lang="";const _withScopeId$2=n=>(pushScopeId("data-v-bbc27490"),n=n(),popScopeId(),n),_hoisted_1$B={class:"nav-dropdown-link-item"},_hoisted_2$h=_withScopeId$2(()=>createBaseVNode("span",{class:"arrow"},null,-1)),_hoisted_3$c={class:"text"},_hoisted_4$2={class:"icon"},_sfc_main$G=defineComponent({props:{item:null},setup(n){const s=toRefs(n),{props:t,isExternal:e}=useNavLink(s.item);return(o,c)=>(openBlock(),createElementBlock("div",_hoisted_1$B,[createBaseVNode("a",mergeProps({class:"item"},unref(t)),[_hoisted_2$h,createBaseVNode("span",_hoisted_3$c,toDisplayString(n.item.text),1),createBaseVNode("span",_hoisted_4$2,[unref(e)?(openBlock(),createBlock(OutboundLink,{key:0})):createCommentVNode("v-if",!0)])],16)]))}});var NavDropdownLinkItem=_export_sfc(_sfc_main$G,[["__scopeId","data-v-bbc27490"]]),NavDropdownLink_vue_vue_type_style_index_0_scoped_true_lang="";const _hoisted_1$A=["aria-label"],_hoisted_2$g={class:"button-text"},_hoisted_3$b={class:"dialog"},_sfc_main$F=defineComponent({props:{item:null},setup(n){const a=useRoute(),s=ref(!1);watch(()=>a.path,()=>{s.value=!1});function t(){s.value=!s.value}return(e,o)=>(openBlock(),createElementBlock("div",{class:normalizeClass(["nav-dropdown-link",{open:s.value}])},[createBaseVNode("button",{class:"button","aria-label":n.item.ariaLabel,onClick:t},[createBaseVNode("span",_hoisted_2$g,toDisplayString(n.item.text),1),createBaseVNode("span",{class:normalizeClass(["button-arrow",s.value?"down":"right"])},null,2)],8,_hoisted_1$A),createBaseVNode("ul",_hoisted_3$b,[(openBlock(!0),createElementBlock(Fragment,null,renderList(n.item.items,c=>(openBlock(),createElementBlock("li",{key:c.text,class:"dialog-item"},[createVNode(NavDropdownLinkItem,{item:c},null,8,["item"])]))),128))])],2))}});var NavDropdownLink=_export_sfc(_sfc_main$F,[["__scopeId","data-v-56bf3a3f"]]),NavLinks_vue_vue_type_style_index_0_scoped_true_lang="";const _hoisted_1$z={key:0,class:"nav-links"},_hoisted_2$f={key:1,class:"item"},_hoisted_3$a={key:2,class:"item"},_sfc_main$E=defineComponent({setup(n){const{theme:a}=useData(),s=useLanguageLinks(),t=useRepo(),e=computed(()=>a.value.nav||t.value||s.value);return(o,c)=>unref(e)?(openBlock(),createElementBlock("nav",_hoisted_1$z,[unref(a).nav?(openBlock(!0),createElementBlock(Fragment,{key:0},renderList(unref(a).nav,l=>(openBlock(),createElementBlock("div",{key:l.text,class:"item"},[l.items?(openBlock(),createBlock(NavDropdownLink,{key:0,item:l},null,8,["item"])):(openBlock(),createBlock(NavLink,{key:1,item:l},null,8,["item"]))]))),128)):createCommentVNode("v-if",!0),unref(s)?(openBlock(),createElementBlock("div",_hoisted_2$f,[createVNode(NavDropdownLink,{item:unref(s)},null,8,["item"])])):createCommentVNode("v-if",!0),unref(t)?(openBlock(),createElementBlock("div",_hoisted_3$a,[createVNode(NavLink,{item:unref(t)},null,8,["item"])])):createCommentVNode("v-if",!0)])):createCommentVNode("v-if",!0)}});var NavLinks=_export_sfc(_sfc_main$E,[["__scopeId","data-v-eab3edfe"]]),ToggleSideBarButton_vue_vue_type_style_index_0_lang="";const _sfc_main$D={emits:["toggle"]},_hoisted_1$y=createBaseVNode("svg",{class:"icon",xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",role:"img",viewBox:"0 0 448 512"},[createBaseVNode("path",{fill:"currentColor",d:"M436 124H12c-6.627 0-12-5.373-12-12V80c0-6.627 5.373-12 12-12h424c6.627 0 12 5.373 12 12v32c0 6.627-5.373 12-12 12zm0 160H12c-6.627 0-12-5.373-12-12v-32c0-6.627 5.373-12 12-12h424c6.627 0 12 5.373 12 12v32c0 6.627-5.373 12-12 12zm0 160H12c-6.627 0-12-5.373-12-12v-32c0-6.627 5.373-12 12-12h424c6.627 0 12 5.373 12 12v32c0 6.627-5.373 12-12 12z",class:""})],-1),_hoisted_2$e=[_hoisted_1$y];function _sfc_render$s(n,a,s,t,e,o){return openBlock(),createElementBlock("div",{class:"sidebar-button",onClick:a[0]||(a[0]=c=>n.$emit("toggle"))},_hoisted_2$e)}var ToggleSideBarButton=_export_sfc(_sfc_main$D,[["render",_sfc_render$s]]),NavBar_vue_vue_type_style_index_0_scoped_true_lang="";const _withScopeId$1=n=>(pushScopeId("data-v-675d8756"),n=n(),popScopeId(),n),_hoisted_1$x={class:"nav-bar"},_hoisted_2$d=_withScopeId$1(()=>createBaseVNode("div",{class:"flex-grow"},null,-1)),_hoisted_3$9={class:"nav"},_sfc_main$C=defineComponent({emits:["toggle"],setup(n){return(a,s)=>(openBlock(),createElementBlock("header",_hoisted_1$x,[createVNode(ToggleSideBarButton,{onToggle:s[0]||(s[0]=t=>a.$emit("toggle"))}),createVNode(NavBarTitle),_hoisted_2$d,createBaseVNode("div",_hoisted_3$9,[createVNode(NavLinks)]),renderSlot(a.$slots,"search",{},void 0,!0)]))}});var NavBar=_export_sfc(_sfc_main$C,[["__scopeId","data-v-675d8756"]]);function useActiveSidebarLinks(){let n=null,a=null;const s=throttleAndDebounce(t,300);function t(){const c=getSidebarLinks(),l=getAnchors(c);for(let u=0;u<l.length;u++){const i=l[u],k=l[u+1],[d,m]=isAnchorActive(u,i,k);if(d){history.replaceState(null,document.title,m||" "),e(m);return}}}function e(c){if(o(a),o(n),a=document.querySelector(`.sidebar a[href="${c}"]`),!a)return;a.classList.add("active");const l=a.closest(".sidebar-links > ul > li");l&&l!==a.parentElement?(n=l.querySelector("a"),n&&n.classList.add("active")):n=null}function o(c){c&&c.classList.remove("active")}onMounted(()=>{t(),window.addEventListener("scroll",s)}),onUpdated(()=>{e(decodeURIComponent(location.hash))}),onUnmounted(()=>{window.removeEventListener("scroll",s)})}function getSidebarLinks(){return[].slice.call(document.querySelectorAll(".sidebar a.sidebar-link-item"))}function getAnchors(n){return[].slice.call(document.querySelectorAll(".header-anchor")).filter(a=>n.some(s=>s.hash===a.hash))}function getPageOffset(){return document.querySelector(".nav-bar").offsetHeight}function getAnchorTop(n){const a=getPageOffset();return n.parentElement.offsetTop-a-15}function isAnchorActive(n,a,s){const t=window.scrollY;return n===0&&t===0?[!0,null]:t<getAnchorTop(a)?[!1,null]:!s||t<getAnchorTop(s)?[!0,decodeURIComponent(a.hash)]:[!1,null]}function throttleAndDebounce(n,a){let s,t=!1;return()=>{s&&clearTimeout(s),t?s=setTimeout(n,a):(n(),t=!0,setTimeout(()=>{t=!1},a))}}function useSideBar(){const n=useRoute(),{site:a}=useData();return useActiveSidebarLinks(),computed(()=>{const s=n.data.headers,t=n.data.frontmatter.sidebar,e=n.data.frontmatter.sidebarDepth;if(t===!1)return[];if(t==="auto")return resolveAutoSidebar(s,e);const o=getSideBarConfig(a.value.themeConfig.sidebar,n.data.relativePath);return o===!1?[]:o==="auto"?resolveAutoSidebar(s,e):o})}function resolveAutoSidebar(n,a){const s=[];if(n===void 0)return[];let t;return n.forEach(({level:e,title:o,slug:c})=>{if(e-1>a)return;const l={text:o,link:`#${c}`};e===2?(t=l,s.push(l)):t&&(t.children||(t.children=[])).push(l)}),s}const SideBarLink=n=>{const a=useRoute(),{site:s,frontmatter:t}=useData(),e=n.depth||1,o=t.value.sidebarDepth||1/0,c=a.data.headers,l=n.item.text,u=resolveLink(s.value.base,n.item.link),i=n.item.children,k=isActive(a,n.item.link),d=e<o?createChildren(k,i,c,e+1):null;return h("li",{class:"sidebar-link"},[h(u?"a":"p",{class:{"sidebar-link-item":!0,active:k},href:u},l),d])};function resolveLink(n,a){return a===void 0||a.startsWith("#")?a:joinUrl(n,a)}function createChildren(n,a,s,t=1){return a&&a.length>0?h("ul",{class:"sidebar-links"},a.map(e=>h(SideBarLink,{item:e,depth:t}))):n&&s?createChildren(!1,resolveHeaders(s),void 0,t):null}function resolveHeaders(n){return mapHeaders(groupHeaders(n))}function groupHeaders(n){n=n.map(s=>Object.assign({},s));let a;return n.forEach(s=>{s.level===2?a=s:a&&(a.children||(a.children=[])).push(s)}),n.filter(s=>s.level===2)}function mapHeaders(n){return n.map(a=>({text:a.title,link:`#${a.slug}`,children:a.children?mapHeaders(a.children):void 0}))}const _hoisted_1$w={key:0,class:"sidebar-links"},_sfc_main$B=defineComponent({setup(n){const a=useSideBar();return(s,t)=>unref(a).length>0?(openBlock(),createElementBlock("ul",_hoisted_1$w,[(openBlock(!0),createElementBlock(Fragment,null,renderList(unref(a),e=>(openBlock(),createBlock(unref(SideBarLink),{item:e},null,8,["item"]))),256))])):createCommentVNode("v-if",!0)}});var SideBar_vue_vue_type_style_index_0_scoped_true_lang="";const _sfc_main$A=defineComponent({props:{open:null},setup(n){return(a,s)=>(openBlock(),createElementBlock("aside",{class:normalizeClass(["sidebar",{open:n.open}])},[createVNode(NavLinks,{class:"nav"}),renderSlot(a.$slots,"sidebar-top",{},void 0,!0),createVNode(_sfc_main$B),renderSlot(a.$slots,"sidebar-bottom",{},void 0,!0)],2))}});var SideBar=_export_sfc(_sfc_main$A,[["__scopeId","data-v-83e92a68"]]);const bitbucketRE=/bitbucket.org/;function useEditLink(){const{page:n,theme:a,frontmatter:s}=useData(),t=computed(()=>{const{repo:o,docsDir:c="",docsBranch:l="master",docsRepo:u=o,editLinks:i}=a.value,k=s.value.editLink!=null?s.value.editLink:i,{relativePath:d}=n.value;return!k||!d||!o?null:createUrl(o,u,c,l,d)}),e=computed(()=>a.value.editLinkText||"Edit this page");return{url:t,text:e}}function createUrl(n,a,s,t,e){return bitbucketRE.test(n)?createBitbucketUrl(n,a,s,t,e):createGitHubUrl(n,a,s,t,e)}function createGitHubUrl(n,a,s,t,e){return(isExternal(a)?a:`https://github.com/${a}`).replace(endingSlashRE,"")+`/edit/${t}/`+(s?s.replace(endingSlashRE,"")+"/":"")+e}function createBitbucketUrl(n,a,s,t,e){return(isExternal(a)?a:n).replace(endingSlashRE,"")+`/src/${t}/`+(s?s.replace(endingSlashRE,"")+"/":"")+e+`?mode=edit&spa=0&at=${t}&fileviewer=file-view-default`}var EditLink_vue_vue_type_style_index_0_scoped_true_lang="";const _hoisted_1$v={class:"edit-link"},_hoisted_2$c=["href"],_sfc_main$z=defineComponent({setup(n){const{url:a,text:s}=useEditLink();return(t,e)=>(openBlock(),createElementBlock("div",_hoisted_1$v,[unref(a)?(openBlock(),createElementBlock("a",{key:0,class:"link",href:unref(a),target:"_blank",rel:"noopener noreferrer"},[createTextVNode(toDisplayString(unref(s))+" ",1),createVNode(OutboundLink,{class:"icon"})],8,_hoisted_2$c)):createCommentVNode("v-if",!0)]))}});var EditLink=_export_sfc(_sfc_main$z,[["__scopeId","data-v-1ed99556"]]),LastUpdated_vue_vue_type_style_index_0_scoped_true_lang="";const _hoisted_1$u={key:0,class:"last-updated"},_hoisted_2$b={class:"prefix"},_hoisted_3$8={class:"datetime"},_sfc_main$y=defineComponent({setup(n){const{theme:a,page:s}=useData(),t=computed(()=>{const c=a.value.lastUpdated;return c!==void 0&&c!==!1}),e=computed(()=>{const c=a.value.lastUpdated;return c===!0?"Last Updated":c}),o=ref("");return onMounted(()=>{o.value=new Date(s.value.lastUpdated).toLocaleString("en-US")}),(c,l)=>unref(t)?(openBlock(),createElementBlock("p",_hoisted_1$u,[createBaseVNode("span",_hoisted_2$b,toDisplayString(unref(e))+":",1),createBaseVNode("span",_hoisted_3$8,toDisplayString(o.value),1)])):createCommentVNode("v-if",!0)}});var LastUpdated=_export_sfc(_sfc_main$y,[["__scopeId","data-v-5797b537"]]),PageFooter_vue_vue_type_style_index_0_scoped_true_lang="";const _hoisted_1$t={class:"page-footer"},_hoisted_2$a={class:"edit"},_hoisted_3$7={class:"updated"},_sfc_main$x=defineComponent({setup(n){return(a,s)=>(openBlock(),createElementBlock("footer",_hoisted_1$t,[createBaseVNode("div",_hoisted_2$a,[createVNode(EditLink)]),createBaseVNode("div",_hoisted_3$7,[createVNode(LastUpdated)])]))}});var PageFooter=_export_sfc(_sfc_main$x,[["__scopeId","data-v-fb8d84c6"]]);function useNextAndPrevLinks(){const{page:n,theme:a}=useData(),s=computed(()=>removeExtention(ensureStartingSlash(n.value.relativePath))),t=computed(()=>{const u=getSideBarConfig(a.value.sidebar,s.value);return isArray(u)?getFlatSideBarLinks(u):[]}),e=computed(()=>t.value.findIndex(u=>u.link===s.value)),o=computed(()=>{if(a.value.nextLinks!==!1&&e.value>-1&&e.value<t.value.length-1)return t.value[e.value+1]}),c=computed(()=>{if(a.value.prevLinks!==!1&&e.value>0)return t.value[e.value-1]}),l=computed(()=>!!o.value||!!c.value);return{next:o,prev:c,hasLinks:l}}const _sfc_main$w={},_hoisted_1$s={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24"},_hoisted_2$9=createBaseVNode("path",{d:"M19,11H7.4l5.3-5.3c0.4-0.4,0.4-1,0-1.4s-1-0.4-1.4,0l-7,7c-0.1,0.1-0.2,0.2-0.2,0.3c-0.1,0.2-0.1,0.5,0,0.8c0.1,0.1,0.1,0.2,0.2,0.3l7,7c0.2,0.2,0.5,0.3,0.7,0.3s0.5-0.1,0.7-0.3c0.4-0.4,0.4-1,0-1.4L7.4,13H19c0.6,0,1-0.4,1-1S19.6,11,19,11z"},null,-1),_hoisted_3$6=[_hoisted_2$9];function _sfc_render$r(n,a){return openBlock(),createElementBlock("svg",_hoisted_1$s,_hoisted_3$6)}var ArrowLeft=_export_sfc(_sfc_main$w,[["render",_sfc_render$r]]);const _sfc_main$v={},_hoisted_1$r={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24"},_hoisted_2$8=createBaseVNode("path",{d:"M19.9,12.4c0.1-0.2,0.1-0.5,0-0.8c-0.1-0.1-0.1-0.2-0.2-0.3l-7-7c-0.4-0.4-1-0.4-1.4,0s-0.4,1,0,1.4l5.3,5.3H5c-0.6,0-1,0.4-1,1s0.4,1,1,1h11.6l-5.3,5.3c-0.4,0.4-0.4,1,0,1.4c0.2,0.2,0.5,0.3,0.7,0.3s0.5-0.1,0.7-0.3l7-7C19.8,12.6,19.9,12.5,19.9,12.4z"},null,-1),_hoisted_3$5=[_hoisted_2$8];function _sfc_render$q(n,a){return openBlock(),createElementBlock("svg",_hoisted_1$r,_hoisted_3$5)}var ArrowRight=_export_sfc(_sfc_main$v,[["render",_sfc_render$q]]),NextAndPrevLinks_vue_vue_type_style_index_0_scoped_true_lang="";const _hoisted_1$q={key:0,class:"next-and-prev-link"},_hoisted_2$7={class:"container"},_hoisted_3$4={class:"prev"},_hoisted_4$1=["href"],_hoisted_5$b={class:"text"},_hoisted_6$1={class:"next"},_hoisted_7$4=["href"],_hoisted_8$1={class:"text"},_sfc_main$u=defineComponent({setup(n){const{hasLinks:a,prev:s,next:t}=useNextAndPrevLinks();return(e,o)=>unref(a)?(openBlock(),createElementBlock("div",_hoisted_1$q,[createBaseVNode("div",_hoisted_2$7,[createBaseVNode("div",_hoisted_3$4,[unref(s)?(openBlock(),createElementBlock("a",{key:0,class:"link",href:unref(withBase)(unref(s).link)},[createVNode(ArrowLeft,{class:"icon icon-prev"}),createBaseVNode("span",_hoisted_5$b,toDisplayString(unref(s).text),1)],8,_hoisted_4$1)):createCommentVNode("v-if",!0)]),createBaseVNode("div",_hoisted_6$1,[unref(t)?(openBlock(),createElementBlock("a",{key:0,class:"link",href:unref(withBase)(unref(t).link)},[createBaseVNode("span",_hoisted_8$1,toDisplayString(unref(t).text),1),createVNode(ArrowRight,{class:"icon icon-next"})],8,_hoisted_7$4)):createCommentVNode("v-if",!0)])])])):createCommentVNode("v-if",!0)}});var NextAndPrevLinks=_export_sfc(_sfc_main$u,[["__scopeId","data-v-38ede35f"]]),Page_vue_vue_type_style_index_0_scoped_true_lang="";const _hoisted_1$p={class:"page"},_hoisted_2$6={class:"container"},_sfc_main$t=defineComponent({setup(n){return(a,s)=>{const t=resolveComponent("Content");return openBlock(),createElementBlock("main",_hoisted_1$p,[createBaseVNode("div",_hoisted_2$6,[renderSlot(a.$slots,"top",{},void 0,!0),createVNode(t,{class:"content"}),createVNode(PageFooter),createVNode(NextAndPrevLinks),renderSlot(a.$slots,"bottom",{},void 0,!0)])])}}});var Page=_export_sfc(_sfc_main$t,[["__scopeId","data-v-7eddb2c4"]]),Layout_vue_vue_type_style_index_0_lang="";const _hoisted_1$o={key:0,id:"ads-container"},_sfc_main$s=defineComponent({setup(n){const a=defineAsyncComponent(()=>import("./Home.d1536508.js")),s=()=>null,t=s,e=s,o=s,c=useRoute(),{site:l,page:u,theme:i,frontmatter:k}=useData(),d=computed(()=>!!k.value.customLayout),m=computed(()=>!!k.value.home),b=computed(()=>Object.keys(l.value.langs).length>1),C=computed(()=>{const q=i.value;return k.value.navbar===!1||q.navbar===!1?!1:l.value.title||q.logo||q.repo||q.nav}),O=ref(!1),f=computed(()=>k.value.home||k.value.sidebar===!1?!1:!isSideBarEmpty(getSideBarConfig(i.value.sidebar,c.data.relativePath))),y=q=>{O.value=typeof q=="boolean"?q:!O.value},S=y.bind(null,!1);watch(c,S);const N=computed(()=>[{"no-navbar":!C.value,"sidebar-open":O.value,"no-sidebar":!f.value}]);return(q,F)=>{const L=resolveComponent("Content"),D=resolveComponent("Debug");return openBlock(),createElementBlock(Fragment,null,[createBaseVNode("div",{class:normalizeClass(["theme",unref(N)])},[unref(C)?(openBlock(),createBlock(NavBar,{key:0,onToggle:y},{search:withCtx(()=>[renderSlot(q.$slots,"navbar-search",{},()=>[unref(i).algolia?(openBlock(),createBlock(unref(o),{key:0,options:unref(i).algolia,multilang:unref(b)},null,8,["options","multilang"])):createCommentVNode("v-if",!0)])]),_:3})):createCommentVNode("v-if",!0),createVNode(SideBar,{open:O.value},{"sidebar-top":withCtx(()=>[renderSlot(q.$slots,"sidebar-top")]),"sidebar-bottom":withCtx(()=>[renderSlot(q.$slots,"sidebar-bottom")]),_:3},8,["open"]),createCommentVNode(" TODO: make this button accessible "),createBaseVNode("div",{class:"sidebar-mask",onClick:F[0]||(F[0]=Y=>y(!1))}),unref(d)?(openBlock(),createBlock(L,{key:1})):unref(m)?(openBlock(),createElementBlock(Fragment,{key:2},[createCommentVNode(" A slot for customizing the entire homepage easily "),renderSlot(q.$slots,"home",{},()=>[createVNode(unref(a),null,{hero:withCtx(()=>[renderSlot(q.$slots,"home-hero")]),features:withCtx(()=>[renderSlot(q.$slots,"home-features")]),footer:withCtx(()=>[renderSlot(q.$slots,"home-footer")]),_:3})])],2112)):(openBlock(),createBlock(Page,{key:3},{top:withCtx(()=>[renderSlot(q.$slots,"page-top-ads",{},()=>[unref(i).carbonAds&&unref(i).carbonAds.carbon?(openBlock(),createElementBlock("div",_hoisted_1$o,[createVNode(unref(t),{key:"carbon"+unref(u).relativePath,code:unref(i).carbonAds.carbon,placement:unref(i).carbonAds.placement},null,8,["code","placement"])])):createCommentVNode("v-if",!0)]),renderSlot(q.$slots,"page-top")]),bottom:withCtx(()=>[renderSlot(q.$slots,"page-bottom"),renderSlot(q.$slots,"page-bottom-ads",{},()=>[unref(i).carbonAds&&unref(i).carbonAds.custom?(openBlock(),createBlock(unref(e),{key:"custom"+unref(u).relativePath,code:unref(i).carbonAds.custom,placement:unref(i).carbonAds.placement},null,8,["code","placement"])):createCommentVNode("v-if",!0)])]),_:3}))],2),createVNode(D)],64)}}}),_hoisted_1$n={class:"theme"},_hoisted_2$5=createBaseVNode("h1",null,"404",-1),_hoisted_3$3=["href"],_sfc_main$r=defineComponent({setup(n){const{site:a}=useData(),s=["There's nothing here.","How did we get here?","That's a Four-Oh-Four.","Looks like we've got some broken links."];function t(){return s[Math.floor(Math.random()*s.length)]}return(e,o)=>(openBlock(),createElementBlock("div",_hoisted_1$n,[_hoisted_2$5,createBaseVNode("blockquote",null,toDisplayString(t()),1),createBaseVNode("a",{href:unref(a).base,"aria-label":"go to home"},"Take me home.",8,_hoisted_3$3)]))}}),theme={Layout:_sfc_main$s,NotFound:_sfc_main$r},_sfc_main$q={},_hoisted_1$m=createStaticVNode('<table><thead><tr><th>Uncleaned URL</th><th>Clean URL</th></tr></thead><tbody><tr><td><a href="http://example.com/index.php?page=name" target="_blank" rel="noopener noreferrer">http://example.com/index.php?page=name</a></td><td><a href="http://example.com/name" target="_blank" rel="noopener noreferrer">http://example.com/name</a></td></tr><tr><td><a href="http://example.com/about.html" target="_blank" rel="noopener noreferrer">http://example.com/about.html</a></td><td><a href="http://example.com/about" target="_blank" rel="noopener noreferrer">http://example.com/about</a></td></tr><tr><td><a href="http://example.com/index.php?page=consulting/marketing" target="_blank" rel="noopener noreferrer">http://example.com/index.php?page=consulting/marketing</a></td><td><a href="http://example.com/consulting/marketing" target="_blank" rel="noopener noreferrer">http://example.com/consulting/marketing</a></td></tr><tr><td><a href="http://example.com/products?category=12&amp;pid=25" target="_blank" rel="noopener noreferrer">http://example.com/products?category=12&amp;pid=25</a></td><td><a href="http://example.com/products/12/25" target="_blank" rel="noopener noreferrer">http://example.com/products/12/25</a></td></tr><tr><td><a href="http://example.com/cgi-bin/feed.cgi?feed=news&amp;frm=rss" target="_blank" rel="noopener noreferrer">http://example.com/cgi-bin/feed.cgi?feed=news&amp;frm=rss</a></td><td><a href="http://example.com/news.rss" target="_blank" rel="noopener noreferrer">http://example.com/news.rss</a></td></tr><tr><td><a href="http://example.com/services/index.jsp?category=legal&amp;id=patents" target="_blank" rel="noopener noreferrer">http://example.com/services/index.jsp?category=legal&amp;id=patents</a></td><td><a href="http://example.com/services/legal/patents" target="_blank" rel="noopener noreferrer">http://example.com/services/legal/patents</a></td></tr><tr><td><a href="http://example.com/kb/index.php?cat=8&amp;id=41" target="_blank" rel="noopener noreferrer">http://example.com/kb/index.php?cat=8&amp;id=41</a></td><td><a href="http://example.com/kb/8/41" target="_blank" rel="noopener noreferrer">http://example.com/kb/8/41</a></td></tr><tr><td><a href="http://example.com/index.php?mod=profiles&amp;id=193" target="_blank" rel="noopener noreferrer">http://example.com/index.php?mod=profiles&amp;id=193</a></td><td><a href="http://example.com/profiles/193" target="_blank" rel="noopener noreferrer">http://example.com/profiles/193</a></td></tr><tr><td><a href="http://en.wikipedia.org/w/index.php?title=Clean_URL" target="_blank" rel="noopener noreferrer">http://en.wikipedia.org/w/index.php?title=Clean_URL</a></td><td><a href="http://en.wikipedia.org/wiki/Clean_URL" target="_blank" rel="noopener noreferrer">http://en.wikipedia.org/wiki/Clean_URL</a></td></tr></tbody></table>',1),_hoisted_2$4=[_hoisted_1$m];function _sfc_render$p(n,a,s,t,e,o){return openBlock(),createElementBlock("div",null,_hoisted_2$4)}var cleanUrls=_export_sfc(_sfc_main$q,[["render",_sfc_render$p]]);const _sfc_main$p={},_hoisted_1$l=createStaticVNode('<table><thead><tr><th></th><th><a href="http://ASP.NET" target="_blank" rel="noopener noreferrer">ASP.NET</a> Core Framework Templates</th></tr></thead><tbody><tr><td><a href="https://github.com/NetFrameworkCoreTemplates/web-corefx" target="_blank" rel="noopener noreferrer">web-corefx</a></td><td>.NET Framework <a href="http://ASP.NET" target="_blank" rel="noopener noreferrer">ASP.NET</a> Core Website</td></tr><tr><td><a href="https://github.com/NetFrameworkCoreTemplates/empty-corefx" target="_blank" rel="noopener noreferrer">empty-corefx</a></td><td>.NET Framework <a href="http://ASP.NET" target="_blank" rel="noopener noreferrer">ASP.NET</a> Core Single Project Website</td></tr><tr><td><a href="https://github.com/NetFrameworkCoreTemplates/vue-lite-corefx" target="_blank" rel="noopener noreferrer">vue-lite-corefx</a></td><td>.NET Framework <a href="http://ASP.NET" target="_blank" rel="noopener noreferrer">ASP.NET</a> Core lite (npm-free) Vue SPA using TypeScript</td></tr><tr><td><a href="https://github.com/NetFrameworkCoreTemplates/react-lite-corefx" target="_blank" rel="noopener noreferrer">react-lite-corefx</a></td><td>.NET Framework <a href="http://ASP.NET" target="_blank" rel="noopener noreferrer">ASP.NET</a> Core lite (npm-free) React SPA using TypeScript</td></tr><tr><td><a href="https://github.com/NetFrameworkCoreTemplates/script-corefx" target="_blank" rel="noopener noreferrer">script-corefx</a></td><td>.NET Framework <a href="http://ASP.NET" target="_blank" rel="noopener noreferrer">ASP.NET</a> Core #Script Pages Bootstrap Website</td></tr><tr><td><a href="https://github.com/NetFrameworkCoreTemplates/razor-corefx" target="_blank" rel="noopener noreferrer">razor-corefx</a></td><td>.NET Framework <a href="http://ASP.NET" target="_blank" rel="noopener noreferrer">ASP.NET</a> Core Website with ServiceStack.Razor</td></tr><tr><td><a href="https://github.com/NetFrameworkCoreTemplates/mvc-corefx" target="_blank" rel="noopener noreferrer">mvc-corefx</a></td><td>.NET Framework <a href="http://ASP.NET" target="_blank" rel="noopener noreferrer">ASP.NET</a> Core MVC Website</td></tr><tr><td><a href="https://github.com/NetFrameworkCoreTemplates/selfhost-corefx" target="_blank" rel="noopener noreferrer">selfhost-corefx</a></td><td>.NET Framework <a href="http://ASP.NET" target="_blank" rel="noopener noreferrer">ASP.NET</a> Core self-hosting Console App</td></tr></tbody></table>',1),_hoisted_2$3=[_hoisted_1$l];function _sfc_render$o(n,a,s,t,e,o){return openBlock(),createElementBlock("div",null,_hoisted_2$3)}var corefxtable=_export_sfc(_sfc_main$p,[["render",_sfc_render$o]]);const _sfc_main$o={},_hoisted_1$k=createStaticVNode(`<hr><h2 id="troubleshooting" tabindex="-1">Troubleshooting <a class="header-anchor" href="#troubleshooting" aria-hidden="true">#</a></h2><h3 id="x-command-not-found" tabindex="-1">x: command not found <a class="header-anchor" href="#x-command-not-found" aria-hidden="true">#</a></h3><p>If after installing any of the <code>dotnet</code> tools it fails with <code>bash: x: command not found</code> you&#39;ll need to add <strong>dotnet tools</strong> to your <code>PATH</code> which you can do in Linux Bash with:</p><div class="language-bash"><pre><code>$ <span class="token builtin class-name">echo</span> <span class="token string">&quot;export PATH=\\<span class="token environment constant">$HOME</span>/.dotnet/tools:\\<span class="token environment constant">$PATH</span>&quot;</span> <span class="token operator">&gt;&gt;</span> ~/.bashrc
$ <span class="token builtin class-name">.</span> ~/.bashrc
</code></pre></div><h3 id="ssl-connection-errors" tabindex="-1">SSL Connection Errors <a class="header-anchor" href="#ssl-connection-errors" aria-hidden="true">#</a></h3><p>To resolve SSL Connection errors you can try <a href="https://github.com/dotnet/corefx/issues/33179#issuecomment-435118249" target="_blank" rel="noopener noreferrer">commenting out ssl_conf = ssl_sect</a>, e.g:</p><div class="language-bash"><pre><code>$ <span class="token function">sudo</span> <span class="token function">vi</span> /etc/ssl/openssl.cnf
</code></pre></div><p>Comment out line in <code>vi</code> using a <code>#</code> prefix, write changes and quit:</p><div class="language-"><pre><code>:%s/^ssl_conf/#&amp;/
:wq
</code></pre></div><p>If that doesn&#39;t resolve the issue you can try <a href="https://github.com/dotnet/corefx/issues/30147#issuecomment-410526404" target="_blank" rel="noopener noreferrer">updating the local ca-certificates</a>:</p><div class="language-bash"><pre><code>$ <span class="token function">sudo</span> update-ca-certificates --fresh
</code></pre></div><p>Or try <a href="https://github.com/dotnet/core/issues/1941#issuecomment-421387136" target="_blank" rel="noopener noreferrer">updating the SSL_CERT Environment variables</a> before running the tool again:</p><div class="language-bash"><pre><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">SSL_CERT_FILE</span><span class="token operator">=</span>/etc/ssl/certs/ca-certificates.crt
<span class="token builtin class-name">export</span> <span class="token assign-left variable">SSL_CERT_DIR</span><span class="token operator">=</span>/dev/null
</code></pre></div><p>Finally you can try running the <code>x</code> tool with the <code>--ignore-ssl-errors</code> switch, e.g:</p><div class="language-bash"><pre><code>$ x new vue-lite VueLite --ignore-ssl-errors
</code></pre></div>`,16),_hoisted_17=[_hoisted_1$k];function _sfc_render$n(n,a,s,t,e,o){return openBlock(),createElementBlock("div",null,_hoisted_17)}var webTrouble=_export_sfc(_sfc_main$o,[["render",_sfc_render$n]]);const _sfc_main$n={},_hoisted_1$j=createStaticVNode(`<h4 id="login-html" tabindex="-1">login.html <a class="header-anchor" href="#login-html" aria-hidden="true">#</a></h4><div class="language-html"><pre><code>{{#raw}}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-layout</span> <span class="token attr-name">justify-center</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-flex</span> <span class="token attr-name">xs5</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-toolbar</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pink<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-toolbar-title</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>white--text<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                Sign In using credentials
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-toolbar-title</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-toolbar</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-card</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-form</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>valid<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form<span class="token punctuation">&quot;</span></span> <span class="token attr-name">lazy-validation</span> <span class="token attr-name">@keyup.native.enter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-container</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-alert</span> <span class="token attr-name">outline</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>error<span class="token punctuation">&quot;</span></span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>warning<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>errorSummary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ errorSummary }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-alert</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-layout</span> <span class="token attr-name">column</span><span class="token punctuation">&gt;</span></span>

                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-text-field</span>
                                <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Email<span class="token punctuation">&quot;</span></span>
                                <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userName<span class="token punctuation">&quot;</span></span>
                                <span class="token attr-name">required</span>
                                <span class="token attr-name">:rules</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>emailRules<span class="token punctuation">&quot;</span></span>
                                <span class="token attr-name">:error-messages</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>errorResponse(<span class="token punctuation">&#39;</span>userName<span class="token punctuation">&#39;</span>)<span class="token punctuation">&quot;</span></span>
                        <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-text-field</span><span class="token punctuation">&gt;</span></span>

                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-text-field</span>
                                <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Password<span class="token punctuation">&quot;</span></span>
                                <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span>
                                <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span>
                                <span class="token attr-name">required</span>
                                <span class="token attr-name">:rules</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>passwordRules<span class="token punctuation">&quot;</span></span>
                                <span class="token attr-name">:error-messages</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>errorResponse(<span class="token punctuation">&#39;</span>password<span class="token punctuation">&#39;</span>)<span class="token punctuation">&quot;</span></span>
                        <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-text-field</span><span class="token punctuation">&gt;</span></span>

                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-checkbox</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Remember Me<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rememberMe<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-checkbox</span><span class="token punctuation">&gt;</span></span>

                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-layout</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-container</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-form</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-card-actions</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-flex</span> <span class="token attr-name">offset-xs2</span> <span class="token attr-name">mb-2</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-btn</span> <span class="token attr-name">flat</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/vuetify/register<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:disabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>!valid || loading<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Register New User<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-btn</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-btn</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:disabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>!valid || loading<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Sign In<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-btn</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-flex</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-card-actions</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-card</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-flex</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-toolbar</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-toolbar-title</span><span class="token punctuation">&gt;</span></span>
                    Quick Login
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-toolbar-title</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-toolbar</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-card</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-layout</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-flex</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-btn</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>switchUser(<span class="token punctuation">&#39;</span>admin@email.com<span class="token punctuation">&#39;</span>)<span class="token punctuation">&quot;</span></span> <span class="token attr-name">flat</span><span class="token punctuation">&gt;</span></span>admin@email.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-btn</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-flex</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-flex</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-btn</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>switchUser(<span class="token punctuation">&#39;</span>new@user.com<span class="token punctuation">&#39;</span>)<span class="token punctuation">&quot;</span></span> <span class="token attr-name">flat</span><span class="token punctuation">&gt;</span></span>new@user.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-btn</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-flex</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-layout</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-card</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-flex</span><span class="token punctuation">&gt;</span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>src<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">&gt;</span></span>Source Code and References<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://github.com/NetCoreApps/Validation/blob/master/world/wwwroot/vuetify/_layout.html<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ref<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>/vuetify/_layout.html<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://github.com/NetCoreApps/Validation/blob/master/world/wwwroot/vuetify/login.html<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ref<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>/vuetify/login.html<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://github.com/NetCoreApps/Validation/blob/master/world/wwwroot/vuetify/login.ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ref<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>/vuetify/login.ts<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-flex</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-layout</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
{{/raw}}

{{#capture appendTo scripts}}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">var</span> <span class="token constant">CONTINUE</span> <span class="token operator">=</span> <span class="token string">&#39;{{ qs.redirect ?? &quot;/vuetify/&quot; }}&#39;</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>login.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
{{/capture}}
</code></pre></div><h4 id="login-ts" tabindex="-1">login.ts <a class="header-anchor" href="#login-ts" aria-hidden="true">#</a></h4><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Vue <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> errorResponse<span class="token punctuation">,</span> errorResponseExcept <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@servicestack/client&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> client<span class="token punctuation">,</span> emailRules<span class="token punctuation">,</span> passwordRules <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./shared&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Authenticate <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;../dtos&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">declare</span> <span class="token keyword">var</span> <span class="token constant">CONTINUE</span><span class="token operator">:</span><span class="token builtin">any</span><span class="token punctuation">;</span>

<span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    el<span class="token operator">:</span> <span class="token string">&#39;#app&#39;</span><span class="token punctuation">,</span>
    computed<span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token function-variable function">errorSummary</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">errorResponseExcept</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">&#39;userName,password&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> 
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    methods<span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token keyword">async</span> <span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> form <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>form <span class="token keyword">as</span> HTMLFormElement<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>form<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token keyword">this</span><span class="token punctuation">.</span>loading <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

                    <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Authenticate</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                        provider<span class="token operator">:</span> <span class="token string">&#39;credentials&#39;</span><span class="token punctuation">,</span>
                        userName<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>userName<span class="token punctuation">,</span>
                        password<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>password<span class="token punctuation">,</span>
                        rememberMe<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>rememberMe<span class="token punctuation">,</span>
                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token constant">CONTINUE</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">this</span><span class="token punctuation">.</span>responseStatus <span class="token operator">=</span> e<span class="token punctuation">.</span>responseStatus <span class="token operator">||</span> e<span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                    <span class="token keyword">this</span><span class="token punctuation">.</span>loading <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                    form<span class="token punctuation">.</span><span class="token function">resetValidation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token function">switchUser</span><span class="token punctuation">(</span>email<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>userName <span class="token operator">=</span> email<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>password <span class="token operator">=</span> <span class="token string">&#39;p@55wOrd&#39;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        errorResponse
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">data</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
        loading<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        valid<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        userName<span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
        password<span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
        rememberMe<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        emailRules<span class="token punctuation">,</span> passwordRules<span class="token punctuation">,</span>
        responseStatus<span class="token operator">:</span> <span class="token keyword">null</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,4),_hoisted_5$a=[_hoisted_1$j];function _sfc_render$m(n,a,s,t,e,o){return openBlock(),createElementBlock("div",null,_hoisted_5$a)}var tab1$3=_export_sfc(_sfc_main$n,[["render",_sfc_render$m]]);const _sfc_main$m={},_hoisted_1$i=createStaticVNode(`<h4 id="layout-html" tabindex="-1">_layout.html <a class="header-anchor" href="#layout-html" aria-hidden="true">#</a></h4><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/lib/@servicestack/client/index.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/dtos.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h4 id="login-html" tabindex="-1">login.html <a class="header-anchor" href="#login-html" aria-hidden="true">#</a></h4><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>Sign In using credentials<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/auth/credentials<span class="token punctuation">&quot;</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>post<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-validation-summary</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userName,password<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control form-control-lg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userName<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UserName<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control form-control-lg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Password<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group col-md-4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-lg btn-primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Login<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rememberMe<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rememberMe<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rememberMe<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Remember Me<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group col-md-4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lnk<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/client-ts/register<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Register New User<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">&gt;</span></span>Quick Login:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>quicklist<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">data-click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>switchUser:admin@email.com<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>admin@email.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">data-click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>switchUser:new@user.com<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>new@user.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

{{#capture appendTo scripts}}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">var</span> <span class="token constant">CONTINUE</span> <span class="token operator">=</span> <span class="token string">&#39;{{qs.continue ?? &quot;/client-ts/&quot;}}&#39;</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>login.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
{{/capture}}
</code></pre></div><h4 id="login-ts" tabindex="-1">login.ts <a class="header-anchor" href="#login-ts" aria-hidden="true">#</a></h4><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> bindHandlers<span class="token punctuation">,</span> bootstrapForm <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@servicestack/client&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> AuthenticateResponse <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;../../dtos&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">declare</span> <span class="token keyword">var</span> <span class="token constant">CONTINUE</span><span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">;</span>

<span class="token function">bootstrapForm</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;form&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token punctuation">(</span>r<span class="token operator">:</span> AuthenticateResponse<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token constant">CONTINUE</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">bindHandlers</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token function-variable function">switchUser</span><span class="token operator">:</span> <span class="token punctuation">(</span>u<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;[name=userName]&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> HTMLInputElement<span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token operator">=</span> u<span class="token punctuation">;</span>
        <span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;[name=password]&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> HTMLInputElement<span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;p@55wOrd&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,6),_hoisted_7$3=[_hoisted_1$i];function _sfc_render$l(n,a,s,t,e,o){return openBlock(),createElementBlock("div",null,_hoisted_7$3)}var tab2$3=_export_sfc(_sfc_main$m,[["render",_sfc_render$l]]);const _sfc_main$l={},_hoisted_1$h=createStaticVNode(`<h4 id="layout-html" tabindex="-1">_layout.html <a class="header-anchor" href="#layout-html" aria-hidden="true">#</a></h4><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/assets/js/jquery.min.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/js/ss-utils.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h4 id="login-html" tabindex="-1">login.html <a class="header-anchor" href="#login-html" aria-hidden="true">#</a></h4><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>Sign In using credentials<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/auth/credentials<span class="token punctuation">&quot;</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>post<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-validation-summary</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userName,password<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control form-control-lg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userName<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UserName<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control form-control-lg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Password<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group col-md-4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-lg btn-primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Login<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rememberMe<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rememberMe<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rememberMe<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Remember Me<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group col-md-4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lnk<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/client-ts/register<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Register New User<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">&gt;</span></span>Quick Login:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>quicklist<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">data-click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>switchUser:admin@email.com<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>admin@email.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">data-click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>switchUser:new@user.com<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>new@user.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

{{#capture appendTo scripts}}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">var</span> <span class="token constant">CONTINUE</span> <span class="token operator">=</span> <span class="token string">&#39;{{qs.continue ?? &quot;/client-jquery/&quot;}}&#39;</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
{{/capture}}

{{#raw appendTo scripts}}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;form&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bootstrapForm</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">r</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token constant">CONTINUE</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bindHandlers</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token function-variable function">switchUser</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">u</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;[name=userName]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;[name=password]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token string">&#39;p@55wOrd&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
{{/raw}}
</code></pre></div>`,4),_hoisted_5$9=[_hoisted_1$h];function _sfc_render$k(n,a,s,t,e,o){return openBlock(),createElementBlock("div",null,_hoisted_5$9)}var tab3$3=_export_sfc(_sfc_main$l,[["render",_sfc_render$k]]);const _sfc_main$k={},_hoisted_1$g=createStaticVNode(`<h4 id="layout-cshtml" tabindex="-1">_Layout.cshtml <a class="header-anchor" href="#layout-cshtml" aria-hidden="true">#</a></h4><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/assets/js/jquery.min.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/js/ss-utils.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h4 id="login-cshtml" tabindex="-1">login.cshtml <a class="header-anchor" href="#login-cshtml" aria-hidden="true">#</a></h4><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>Sign In using credentials<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/auth/credentials<span class="token punctuation">&quot;</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>post<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-validation-summary</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userName,password<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control form-control-lg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userName<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UserName<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control form-control-lg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Password<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group col-md-4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-lg btn-primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Login<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rememberMe<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rememberMe<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rememberMe<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Remember Me<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group col-md-4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lnk<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/client-razor/register<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Register New User<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">&gt;</span></span>Quick Login:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>quicklist<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">data-click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>switchUser:admin@email.com<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>admin@@email.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">data-click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>switchUser:new@user.com<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>new@@user.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

@section scripts {

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">var</span> <span class="token constant">CONTINUE</span> <span class="token operator">=</span> <span class="token string">&#39;@(Html.Query(&quot;continue&quot;) ?? &quot;/client-razor/&quot;)&#39;</span><span class="token punctuation">;</span>
    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;form&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bootstrapForm</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">r</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token constant">CONTINUE</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bindHandlers</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token function-variable function">switchUser</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">u</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;[name=userName]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;[name=password]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token string">&#39;p@55wOrd&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

}
</code></pre></div>`,4),_hoisted_5$8=[_hoisted_1$g];function _sfc_render$j(n,a,s,t,e,o){return openBlock(),createElementBlock("div",null,_hoisted_5$8)}var tab4$3=_export_sfc(_sfc_main$k,[["render",_sfc_render$j]]);const _sfc_main$j={name:"client-login-uis",components:{tab1:tab1$3,tab2:tab2$3,tab3:tab3$3,tab4:tab4$3},data(){return{currentTabComponent:"tab1",isActive(n){return this.currentTabComponent==n}}}};function _sfc_render$i(n,a,s,t,e,o){return openBlock(),createElementBlock(Fragment,null,[createBaseVNode("button",{class:normalizeClass(["border-0 py-2 px-4 box-border rounded bg-white text-lg cursor-pointer",{"text-white":e.isActive("tab1"),"bg-blue-600":e.isActive("tab1"),"text-blue-600":!e.isActive("tab1")}]),onClick:a[0]||(a[0]=c=>e.currentTabComponent="tab1")},"Vuetify ",2),createBaseVNode("button",{class:normalizeClass(["border-0 py-2 px-4 box-border rounded bg-white text-lg cursor-pointer",{"text-white":e.isActive("tab2"),"bg-blue-600":e.isActive("tab2"),"text-blue-600":!e.isActive("tab2")}]),onClick:a[1]||(a[1]=c=>e.currentTabComponent="tab2")},"Client TypeScript ",2),createBaseVNode("button",{class:normalizeClass(["border-0 py-2 px-4 box-border rounded bg-white text-lg cursor-pointer",{"text-white":e.isActive("tab3"),"bg-blue-600":e.isActive("tab3"),"text-blue-600":!e.isActive("tab3")}]),onClick:a[2]||(a[2]=c=>e.currentTabComponent="tab3")},"Client jQuery ",2),createBaseVNode("button",{class:normalizeClass(["border-0 py-2 px-4 box-border rounded bg-white text-lg cursor-pointer",{"text-white":e.isActive("tab4"),"bg-blue-600":e.isActive("tab4"),"text-blue-600":!e.isActive("tab4")}]),onClick:a[3]||(a[3]=c=>e.currentTabComponent="tab4")},"Client Razor ",2),(openBlock(),createBlock(KeepAlive,null,[(openBlock(),createBlock(resolveDynamicComponent(e.currentTabComponent),{class:"mt-4"}))],1024))],64)}var clientuis=_export_sfc(_sfc_main$j,[["render",_sfc_render$i]]);const _sfc_main$i={},_hoisted_1$f=createStaticVNode(`<h4 id="index-html" tabindex="-1">index.html <a class="header-anchor" href="#index-html" aria-hidden="true">#</a></h4><div class="language-html"><pre><code>{{ &#39;requires-auth&#39; | partial }}

{{#raw}}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-layout</span> <span class="token attr-name">justify-center</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-flex</span> <span class="token attr-name">xs6</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-toolbar</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pink<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-toolbar-title</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>white--text<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                    {{ heading }}
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-toolbar-title</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-toolbar</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-card</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-form</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>valid<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form<span class="token punctuation">&quot;</span></span> <span class="token attr-name">lazy-validation</span> <span class="token attr-name">@keyup.native.enter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-container</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-alert</span> <span class="token attr-name">outline</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>error<span class="token punctuation">&quot;</span></span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>warning<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>errorSummary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ errorSummary }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-alert</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-layout</span> <span class="token attr-name">column</span><span class="token punctuation">&gt;</span></span>

                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-radio-group</span> 
                                    <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title<span class="token punctuation">&quot;</span></span>
                                    <span class="token attr-name">:error-messages</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>errorResponse(<span class="token punctuation">&#39;</span>title<span class="token punctuation">&#39;</span>)<span class="token punctuation">&quot;</span></span>
                                    <span class="token attr-name">row</span>
                                <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-radio</span>
                                        <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>x in contactTitles<span class="token punctuation">&quot;</span></span>
                                        <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>x.key<span class="token punctuation">&quot;</span></span>
                                        <span class="token attr-name">:label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>x.value<span class="token punctuation">&quot;</span></span>
                                        <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>x.key<span class="token punctuation">&quot;</span></span>
                                <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-radio</span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-radio-group</span><span class="token punctuation">&gt;</span></span>                            

                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-text-field</span>
                                    <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Name<span class="token punctuation">&quot;</span></span>
                                    <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span>
                                    <span class="token attr-name">required</span>
                                    <span class="token attr-name">:rules</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>nameRules<span class="token punctuation">&quot;</span></span>
                                    <span class="token attr-name">:error-messages</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>errorResponse(<span class="token punctuation">&#39;</span>name<span class="token punctuation">&#39;</span>)<span class="token punctuation">&quot;</span></span>
                            <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-text-field</span><span class="token punctuation">&gt;</span></span>

                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-select</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>color<span class="token punctuation">&quot;</span></span>
                                      <span class="token attr-name">:items</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>contactColors<span class="token punctuation">&quot;</span></span>
                                      <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Favorite color<span class="token punctuation">&quot;</span></span>
                                      <span class="token attr-name">:error-messages</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>errorResponse(<span class="token punctuation">&#39;</span>color<span class="token punctuation">&#39;</span>)<span class="token punctuation">&quot;</span></span>
                                      <span class="token attr-name">solo</span>
                            <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-select</span><span class="token punctuation">&gt;</span></span>

                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-radio-group</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mb-3<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:error-messages</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>errorResponse(<span class="token punctuation">&#39;</span>filmGenres<span class="token punctuation">&#39;</span>)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-checkbox</span>
                                        <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>x in contactGenres<span class="token punctuation">&quot;</span></span>
                                        <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>filmGenres<span class="token punctuation">&quot;</span></span>
                                        <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>x<span class="token punctuation">&quot;</span></span>
                                        <span class="token attr-name">:label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>x<span class="token punctuation">&quot;</span></span>
                                        <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>x<span class="token punctuation">&quot;</span></span>
                                <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-checkbox</span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-radio-group</span><span class="token punctuation">&gt;</span></span>

                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-layout</span><span class="token punctuation">&gt;</span></span>
                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-flex</span> <span class="token attr-name">xs4</span><span class="token punctuation">&gt;</span></span>
                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-text-field</span>
                                            <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>age<span class="token punctuation">&quot;</span></span>
                                            <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mt-0<span class="token punctuation">&quot;</span></span>
                                            <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Age<span class="token punctuation">&quot;</span></span>
                                            <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>number<span class="token punctuation">&quot;</span></span>
                                            <span class="token attr-name">:error-messages</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>errorResponse(<span class="token punctuation">&#39;</span>age<span class="token punctuation">&#39;</span>)<span class="token punctuation">&quot;</span></span>
                                    <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-text-field</span><span class="token punctuation">&gt;</span></span>
                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-flex</span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-layout</span><span class="token punctuation">&gt;</span></span>

                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-checkbox</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>!update<span class="token punctuation">&quot;</span></span>
                                    <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Agree to terms and conditions<span class="token punctuation">&quot;</span></span> 
                                    <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>agree<span class="token punctuation">&quot;</span></span>
                                    <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>
                                    <span class="token attr-name">:rules</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[v =&gt; v || <span class="token punctuation">&#39;</span>You must agree to our terms<span class="token punctuation">&#39;</span>]<span class="token punctuation">&quot;</span></span>
                                    <span class="token attr-name">:error-messages</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>errorResponse(<span class="token punctuation">&#39;</span>agree<span class="token punctuation">&#39;</span>)<span class="token punctuation">&quot;</span></span>
                            <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-checkbox</span><span class="token punctuation">&gt;</span></span>

                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-layout</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-container</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-form</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-card-actions</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-flex</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-btn</span> <span class="token attr-name">large</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mb-2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:disabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>!valid || loading<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                            {{ action }}
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-btn</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-btn</span> <span class="token attr-name">flat</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>reset<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>reset<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-btn</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-btn</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>update<span class="token punctuation">&quot;</span></span> <span class="token attr-name">flat</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cancel<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>cancel<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-btn</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-flex</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-card-actions</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-card</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-flex</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-toolbar</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-toolbar-title</span><span class="token punctuation">&gt;</span></span>
                        Contacts
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-toolbar-title</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-toolbar</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-card</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-layout</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>c in contacts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>c.id<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\`background:\${c.color}\`<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-flex</span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pa-3 title<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{c.title}} {{c.name}} ({{c.age}})<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-flex</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-btn</span> <span class="token attr-name">flat</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>edit(c.id)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>edit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-btn</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-btn</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>remove(c.id)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>delete<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-btn</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-layout</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-layout</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>!contacts.length<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-flex</span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pa-3 title<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>There are no contacts.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-flex</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-layout</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-card</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-flex</span><span class="token punctuation">&gt;</span></span>

            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>src<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">&gt;</span></span>Source Code and References<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://github.com/NetCoreApps/Validation/blob/master/world/wwwroot/vuetify/_layout.html<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ref<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>/vuetify/_layout.html<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://github.com/NetCoreApps/Validation/blob/master/world/wwwroot/vuetify/contacts/index.html<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ref<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>/vuetify/contacts/index.html<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://github.com/NetCoreApps/Validation/blob/master/world/wwwroot/vuetify/contacts/index.ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ref<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>/vuetify/contacts/index.ts<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://github.com/NetCoreApps/Validation/blob/master/world/wwwroot/dtos.ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ref<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>/dtos.ts<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-flex</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-layout</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
{{/raw}}


{{#capture appendTo scripts}}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">var</span> colors <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> contactColors <span class="token operator">|</span> json <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> <span class="token constant">DATA</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    contacts<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token function">sendToGateway</span><span class="token punctuation">(</span><span class="token string">&#39;GetContacts&#39;</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token parameter">map</span> <span class="token operator">=&gt;</span> it<span class="token punctuation">.</span>Results <span class="token operator">|</span> json <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    contactTitles<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> contactTitles <span class="token operator">|</span> json <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    contactColors<span class="token operator">:</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>colors<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">k</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> text<span class="token operator">:</span>colors<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">,</span> value<span class="token operator">:</span>k <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    contactGenres<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> contactGenres <span class="token operator">|</span> json <span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
{{/capture}}
</code></pre></div><h4 id="index-ts" tabindex="-1">index.ts <a class="header-anchor" href="#index-ts" aria-hidden="true">#</a></h4><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Vue <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> errorResponse<span class="token punctuation">,</span> errorResponseExcept<span class="token punctuation">,</span> queryString <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@servicestack/client&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> client<span class="token punctuation">,</span> nameRules<span class="token punctuation">,</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../shared&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>CreateContact<span class="token punctuation">,</span> DeleteContact<span class="token punctuation">,</span> GetContact<span class="token punctuation">,</span> GetContacts<span class="token punctuation">,</span> Title<span class="token punctuation">,</span> UpdateContact<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../../dtos&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">declare</span> <span class="token keyword">var</span> <span class="token constant">DATA</span><span class="token operator">:</span><span class="token builtin">any</span><span class="token punctuation">;</span>

<span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    el<span class="token operator">:</span> <span class="token string">&#39;#app&#39;</span><span class="token punctuation">,</span>
    computed<span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token function-variable function">heading</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>update <span class="token operator">?</span> <span class="token string">&#39;Edit new Contact&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;Add new Contact&#39;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token function-variable function">action</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>update<span class="token operator">?</span> <span class="token string">&#39;Update Contact&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;Add Contact&#39;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token function-variable function">errorSummary</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">errorResponseExcept</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">&#39;title,name,color,filmGenres,age,agree&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    methods<span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token keyword">async</span> <span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> form <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>form <span class="token keyword">as</span> HTMLFormElement<span class="token punctuation">)</span><span class="token punctuation">;</span> 
            <span class="token keyword">if</span> <span class="token punctuation">(</span>form<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token keyword">this</span><span class="token punctuation">.</span>loading <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                    
                    <span class="token keyword">const</span> request <span class="token operator">=</span> <span class="token punctuation">{</span>
                        title<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>title <span class="token keyword">as</span> Title<span class="token punctuation">,</span>
                        name<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">,</span>
                        color<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>color<span class="token punctuation">,</span>
                        filmGenres<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>filmGenres<span class="token punctuation">,</span>
                        age<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token punctuation">,</span>
                    <span class="token punctuation">}</span><span class="token punctuation">;</span>
                    
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>update<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">UpdateContact</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token operator">...</span>request<span class="token punctuation">,</span> id<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                        <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CreateContact</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token operator">...</span>request<span class="token punctuation">,</span> agree<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>agree <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token keyword">this</span><span class="token punctuation">.</span>update <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                    <span class="token keyword">this</span><span class="token punctuation">.</span>responseStatus <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                    form<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">this</span><span class="token punctuation">.</span>responseStatus <span class="token operator">=</span> e<span class="token punctuation">.</span>responseStatus <span class="token operator">||</span> e<span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                    <span class="token keyword">this</span><span class="token punctuation">.</span>loading <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                    form<span class="token punctuation">.</span><span class="token function">resetValidation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token keyword">async</span> <span class="token function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>contacts <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">GetContacts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>results<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>form <span class="token keyword">as</span> HTMLFormElement<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>update <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token keyword">async</span> <span class="token function">edit</span><span class="token punctuation">(</span>id<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span>update <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
          <span class="token keyword">const</span> contact <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">GetContact</span><span class="token punctuation">(</span><span class="token punctuation">{</span> id <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>result<span class="token punctuation">;</span>
          Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> contact<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token keyword">async</span> <span class="token function">remove</span><span class="token punctuation">(</span>id<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">confirm</span><span class="token punctuation">(</span><span class="token string">&#39;Are you sure?&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>

            <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DeleteContact</span><span class="token punctuation">(</span><span class="token punctuation">{</span> id <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">GetContacts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        errorResponse
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">async</span> <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> qs <span class="token operator">=</span> <span class="token function">queryString</span><span class="token punctuation">(</span>location<span class="token punctuation">.</span>href<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>qs<span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">edit</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>qs<span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">data</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
        loading<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        valid<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        update<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> 
        <span class="token operator">...</span><span class="token constant">DATA</span><span class="token punctuation">,</span>

        id<span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>
        title<span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
        name<span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
        color<span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
        filmGenres<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        age<span class="token operator">:</span> <span class="token number">13</span><span class="token punctuation">,</span>
        agree<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        nameRules<span class="token punctuation">,</span>
        responseStatus<span class="token operator">:</span> <span class="token keyword">null</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,4),_hoisted_5$7=[_hoisted_1$f];function _sfc_render$h(n,a,s,t,e,o){return openBlock(),createElementBlock("div",null,_hoisted_5$7)}var tab1$2=_export_sfc(_sfc_main$i,[["render",_sfc_render$h]]);const _sfc_main$h={},_hoisted_1$e=createStaticVNode(`<h4 id="requires-auth-partial-html" tabindex="-1">_requires-auth-partial.html <a class="header-anchor" href="#requires-auth-partial-html" aria-hidden="true">#</a></h4><div class="language-html"><pre><code>{{ \`/client-ts/login?continue=\${PathInfo}\`
   | redirectIfNotAuthenticated }}

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">text-align</span><span class="token punctuation">:</span>right</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>small</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-muted<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        {{ userSession.DisplayName }}
        | <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/auth/logout?continue=/client-ts/<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Sign Out<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>small</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h4 id="index-html" tabindex="-1">index.html <a class="header-anchor" href="#index-html" aria-hidden="true">#</a></h4><div class="language-html"><pre><code>{{ &#39;requires-auth&#39; | partial }}

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>Add new Contact<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/contacts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>post<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col-lg-4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-validation-summary</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title,name,color,filmGenres,age,agree<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-check<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            {{#each contactTitles}}
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>custom-control custom-radio custom-control-inline<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>radio<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title-{{Key}}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{Key}}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>custom-control-input<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>custom-control-label<span class="token punctuation">&quot;</span></span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title-{{Key}}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{Value}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
            {{/each}}
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Full Name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>small</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name-help<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-muted<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Your first and last name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>small</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-label<span class="token punctuation">&quot;</span></span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>color<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Favorite color<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>color<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>color<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col-4 form-control<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
            {{#each contactColors}}
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{Key}}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{Value}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
            {{/each}}
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-check-label<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Favorite Film Genres<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-check<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        {{#each contactGenres}}
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>custom-control custom-checkbox<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>filmGenres-{{it}}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>filmGenres<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{it}}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-check-input<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-check-label<span class="token punctuation">&quot;</span></span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>filmGenres-{{it}}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{it}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
        {{/each}}
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control col-3<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>age<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>number<span class="token punctuation">&quot;</span></span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>13<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Age<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-check<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span> form-check-input<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>agree<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>agree<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-check-label<span class="token punctuation">&quot;</span></span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>agree<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Agree to terms and conditions<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Add Contact<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/client-ts/contacts/<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>reset<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>results<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span>

{{#capture appendTo scripts}}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">var</span> <span class="token constant">CONTACTS</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token function">sendToGateway</span><span class="token punctuation">(</span><span class="token string">&#39;GetContacts&#39;</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token parameter">map</span> <span class="token operator">=&gt;</span> it<span class="token punctuation">.</span>Results <span class="token operator">|</span> json <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
{{/capture}}

{{#raw appendTo scripts}}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
{{/raw}}

{{ htmlError }}
</code></pre></div><h4 id="index-ts" tabindex="-1">index.ts <a class="header-anchor" href="#index-ts" aria-hidden="true">#</a></h4><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> bootstrapForm<span class="token punctuation">,</span> bindHandlers<span class="token punctuation">,</span> JsonServiceClient <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@servicestack/client&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>Contact<span class="token punctuation">,</span> DeleteContact<span class="token punctuation">,</span> GetContact<span class="token punctuation">,</span> GetContacts<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;../../../dtos&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">declare</span> <span class="token keyword">var</span> <span class="token constant">CONTACTS</span><span class="token operator">:</span>Contact<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JsonServiceClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> form <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;form&quot;</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">;</span>
<span class="token function">bootstrapForm</span><span class="token punctuation">(</span>form<span class="token punctuation">,</span><span class="token punctuation">{</span>
    <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>r<span class="token operator">:</span><span class="token punctuation">{</span>result<span class="token operator">:</span>Contact<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        form<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token constant">CONTACTS</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">bindHandlers</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token function-variable function">deleteContact</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token keyword">function</span><span class="token punctuation">(</span>id<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">confirm</span><span class="token punctuation">(</span><span class="token string">&#39;Are you sure?&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>

        <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DeleteContact</span><span class="token punctuation">(</span><span class="token punctuation">{</span> id <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">GetContacts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token constant">CONTACTS</span> <span class="token operator">=</span> response<span class="token punctuation">.</span>results<span class="token punctuation">;</span>
        <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">contactRow</span> <span class="token operator">=</span> <span class="token punctuation">(</span>contact<span class="token operator">:</span>Contact<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;tr style=&quot;background:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>contact<span class="token punctuation">.</span>color<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;&gt;
        &lt;td&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>contact<span class="token punctuation">.</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>contact<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> (</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>contact<span class="token punctuation">.</span>age<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;/client-ts/contacts/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>contact<span class="token punctuation">.</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/edit&quot;&gt;edit&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;button class=&quot;btn btn-sm btn-primary&quot; data-click=&quot;deleteContact:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>contact<span class="token punctuation">.</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;&gt;delete&lt;/button&gt;&lt;/td&gt;
    &lt;/tr&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> sb <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">CONTACTS</span><span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span><span class="token constant">CONTACTS</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            sb <span class="token operator">+=</span> <span class="token function">contactRow</span><span class="token punctuation">(</span><span class="token constant">CONTACTS</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        sb <span class="token operator">=</span> <span class="token string">&quot;&lt;tr&gt;&lt;td&gt;There are no contacts.&lt;/td&gt;&lt;/tr&gt;&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;#results&quot;</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;tbody&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>sb<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/tbody&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,6),_hoisted_7$2=[_hoisted_1$e];function _sfc_render$g(n,a,s,t,e,o){return openBlock(),createElementBlock("div",null,_hoisted_7$2)}var tab2$2=_export_sfc(_sfc_main$h,[["render",_sfc_render$g]]);const _sfc_main$g={},_hoisted_1$d=createStaticVNode(`<h4 id="requires-auth-partial-html" tabindex="-1">_requires-auth-partial.html <a class="header-anchor" href="#requires-auth-partial-html" aria-hidden="true">#</a></h4><div class="language-html"><pre><code>{{ \`/client-jquery/login?continue=\${PathInfo}\`
   | redirectIfNotAuthenticated }}

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">text-align</span><span class="token punctuation">:</span>right</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>small</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-muted<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        {{ userSession.DisplayName }}
        | <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/auth/logout?continue=/client-jquery/<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Sign Out<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>small</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h4 id="index-html" tabindex="-1">index.html <a class="header-anchor" href="#index-html" aria-hidden="true">#</a></h4><div class="language-html"><pre><code>{{ &#39;requires-auth&#39; | partial }}

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>Add new Contact<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/contacts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>post<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col-lg-4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-validation-summary</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title,name,color,filmGenres,age,agree<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-check<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            {{#each contactTitles}}
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>custom-control custom-radio custom-control-inline<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>radio<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title-{{Key}}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{Key}}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>custom-control-input<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>custom-control-label<span class="token punctuation">&quot;</span></span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title-{{Key}}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{Value}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
            {{/each}}
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Full Name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>small</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name-help<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-muted<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Your first and last name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>small</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-label<span class="token punctuation">&quot;</span></span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>color<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Favorite color<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>color<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>color<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col-4 form-control<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
            {{#each contactColors}}
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{Key}}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{Value}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
            {{/each}}
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-check-label<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Favorite Film Genres<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-check<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        {{#each contactGenres}}
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>custom-control custom-checkbox<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>filmGenres-{{it}}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>filmGenres<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{it}}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-check-input<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-check-label<span class="token punctuation">&quot;</span></span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>filmGenres-{{it}}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{it}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
        {{/each}}
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control col-3<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>age<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>number<span class="token punctuation">&quot;</span></span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>13<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Age<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-check<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span> form-check-input<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>agree<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>agree<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-check-label<span class="token punctuation">&quot;</span></span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>agree<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Agree to terms and conditions<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Add Contact<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/client-jquery/contacts/<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>reset<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>results<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span>

{{#capture appendTo scripts}}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">var</span> <span class="token constant">CONTACTS</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token function">sendToGateway</span><span class="token punctuation">(</span><span class="token string">&#39;GetContacts&#39;</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token parameter">map</span> <span class="token operator">=&gt;</span> it<span class="token punctuation">.</span>Results <span class="token operator">|</span> json <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
{{/capture}}

{{#raw appendTo scripts}}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;form&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bootstrapForm</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">r</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;form&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token constant">CONTACTS</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bindHandlers</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token function-variable function">deleteContact</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">confirm</span><span class="token punctuation">(</span><span class="token string">&#39;Are you sure?&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            $<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;/contacts/&quot;</span> <span class="token operator">+</span> id <span class="token operator">+</span> <span class="token string">&quot;/delete&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">r</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
               $<span class="token punctuation">.</span><span class="token function">getJSON</span><span class="token punctuation">(</span><span class="token string">&quot;/contacts&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">r</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                   <span class="token constant">CONTACTS</span> <span class="token operator">=</span> r<span class="token punctuation">.</span>results<span class="token punctuation">;</span>
                   <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token punctuation">}</span><span class="token punctuation">)</span> 
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">function</span> <span class="token function">contactRow</span><span class="token punctuation">(</span><span class="token parameter">contact</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&#39;&lt;tr style=&quot;background:&#39;</span> <span class="token operator">+</span> contact<span class="token punctuation">.</span>color <span class="token operator">+</span> <span class="token string">&#39;&quot;&gt;&#39;</span> <span class="token operator">+</span>
                <span class="token string">&#39;&lt;td&gt;&#39;</span> <span class="token operator">+</span> contact<span class="token punctuation">.</span>title <span class="token operator">+</span> <span class="token string">&#39; &#39;</span> <span class="token operator">+</span> contact<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">&#39; (&#39;</span> <span class="token operator">+</span> contact<span class="token punctuation">.</span>age <span class="token operator">+</span> <span class="token string">&#39;)&lt;/td&gt;&#39;</span> <span class="token operator">+</span>
                <span class="token string">&#39;&lt;td&gt;&lt;a href=&quot;/client-jquery/contacts/&#39;</span> <span class="token operator">+</span> contact<span class="token punctuation">.</span>id <span class="token operator">+</span> <span class="token string">&#39;/edit&quot;&gt;edit&lt;/a&gt;&lt;/td&gt;&#39;</span> <span class="token operator">+</span>
                <span class="token string">&#39;&lt;td&gt;&lt;button class=&quot;btn btn-sm btn-primary&quot; data-click=&quot;deleteContact:&#39;</span> <span class="token operator">+</span> contact<span class="token punctuation">.</span>id <span class="token operator">+</span> <span class="token string">&#39;&quot;&gt;delete&lt;/button&gt;&lt;/td&gt;&#39;</span> <span class="token operator">+</span>
            <span class="token string">&#39;&lt;/tr&gt;&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> sb <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">CONTACTS</span><span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span><span class="token constant">CONTACTS</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                sb <span class="token operator">+=</span> <span class="token function">contactRow</span><span class="token punctuation">(</span><span class="token constant">CONTACTS</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            sb <span class="token operator">=</span> <span class="token string">&quot;&lt;tr&gt;&lt;td&gt;There are no contacts.&lt;/td&gt;&lt;/tr&gt;&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#results&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;tbody&gt;&quot;</span> <span class="token operator">+</span> sb <span class="token operator">+</span> <span class="token string">&quot;&lt;/tbody&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
{{/raw}}

{{ htmlError }}
</code></pre></div>`,4),_hoisted_5$6=[_hoisted_1$d];function _sfc_render$f(n,a,s,t,e,o){return openBlock(),createElementBlock("div",null,_hoisted_5$6)}var tab3$2=_export_sfc(_sfc_main$g,[["render",_sfc_render$f]]);const _sfc_main$f={},_hoisted_1$c=createStaticVNode(`<h4 id="requiresauth-cshtml" tabindex="-1">_RequiresAuth.cshtml <a class="header-anchor" href="#requiresauth-cshtml" aria-hidden="true">#</a></h4><div class="language-html"><pre><code>@{ RedirectIfNotAuthenticated($&quot;/client-razor/login?continue={Request.PathInfo}&quot;); }

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">text-align</span><span class="token punctuation">:</span>right</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>small</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-muted<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        @UserSession.DisplayName
        | <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/auth/logout?continue=/client-razor/<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Sign Out<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>small</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h4 id="default-cshtml" tabindex="-1">default.cshtml <a class="header-anchor" href="#default-cshtml" aria-hidden="true">#</a></h4><div class="language-html"><pre><code>@await Html.PartialAsync(&quot;_RequiresAuth&quot;)

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>Add new Contact<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/contacts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>post<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col-lg-4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-validation-summary</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title,name,color,filmGenres,age,agree<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-check<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        @foreach (var it in Html.ContactTitles())
        {
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>custom-control custom-radio custom-control-inline<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>radio<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title-@it.Key<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@it.Key<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>custom-control-input<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>custom-control-label<span class="token punctuation">&quot;</span></span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title-@it.Key<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>@it.Value<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
        }
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Full Name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>small</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name-help<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-muted<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Your first and last name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>small</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-label<span class="token punctuation">&quot;</span></span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>color<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Favorite color<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>color<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>color<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col-4 form-control<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
        @foreach (var it in Html.ContactColors())
        {
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@it.Key<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>@it.Value<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
        }
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-check-label<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Favorite Film Genres<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-check<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        @foreach (var it in Html.ContactGenres())
        {
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>custom-control custom-checkbox<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>filmGenres-@it<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>filmGenres<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@it<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-check-input<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-check-label<span class="token punctuation">&quot;</span></span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>filmGenres-@it<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>@it<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
        }
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control col-3<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>age<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>number<span class="token punctuation">&quot;</span></span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>13<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Age<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-check<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span> form-check-input<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>agree<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>agree<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-check-label<span class="token punctuation">&quot;</span></span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>agree<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Agree to terms and conditions<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Add Contact<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/client-razor/contacts/<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>reset<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>results<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span>

@section scripts
{
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
        <span class="token keyword">var</span> <span class="token constant">CONTACTS</span> <span class="token operator">=</span> @<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">await</span> Gateway<span class="token punctuation">.</span><span class="token function">SendAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">GetContacts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Results<span class="token punctuation">.</span><span class="token function">AsRawJson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;form&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bootstrapForm</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">r</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;form&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token constant">CONTACTS</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bindHandlers</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token function-variable function">deleteContact</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">confirm</span><span class="token punctuation">(</span><span class="token string">&#39;Are you sure?&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 
                    <span class="token keyword">return</span><span class="token punctuation">;</span>
                $<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;/contacts/&quot;</span> <span class="token operator">+</span> id <span class="token operator">+</span> <span class="token string">&quot;/delete&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">r</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                   $<span class="token punctuation">.</span><span class="token function">getJSON</span><span class="token punctuation">(</span><span class="token string">&quot;/contacts&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">r</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                       <span class="token constant">CONTACTS</span> <span class="token operator">=</span> r<span class="token punctuation">.</span>results<span class="token punctuation">;</span>
                       <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                   <span class="token punctuation">}</span><span class="token punctuation">)</span> 
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
        <span class="token keyword">function</span> <span class="token function">contactRow</span><span class="token punctuation">(</span><span class="token parameter">contact</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token string">&#39;&lt;tr style=&quot;background:&#39;</span> <span class="token operator">+</span> contact<span class="token punctuation">.</span>color <span class="token operator">+</span> <span class="token string">&#39;&quot;&gt;&#39;</span> <span class="token operator">+</span>
                    <span class="token string">&#39;&lt;td&gt;&#39;</span> <span class="token operator">+</span> contact<span class="token punctuation">.</span>title <span class="token operator">+</span> <span class="token string">&#39; &#39;</span> <span class="token operator">+</span> contact<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">&#39; (&#39;</span> <span class="token operator">+</span> contact<span class="token punctuation">.</span>age <span class="token operator">+</span> <span class="token string">&#39;)&lt;/td&gt;&#39;</span> <span class="token operator">+</span>
                    <span class="token string">&#39;&lt;td&gt;&lt;a href=&quot;/client-razor/contacts/&#39;</span> <span class="token operator">+</span> contact<span class="token punctuation">.</span>id <span class="token operator">+</span> <span class="token string">&#39;/edit&quot;&gt;edit&lt;/a&gt;&lt;/td&gt;&#39;</span> <span class="token operator">+</span>
                    <span class="token string">&#39;&lt;td&gt;&lt;button class=&quot;btn btn-sm btn-primary&quot; data-click=&quot;deleteContact:&#39;</span> <span class="token operator">+</span> contact<span class="token punctuation">.</span>id <span class="token operator">+</span> <span class="token string">&#39;&quot;&gt;delete&lt;/button&gt;&lt;/td&gt;&#39;</span> <span class="token operator">+</span>
                <span class="token string">&#39;&lt;/tr&gt;&#39;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        
        <span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">var</span> sb <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">CONTACTS</span><span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span><span class="token constant">CONTACTS</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    sb <span class="token operator">+=</span> <span class="token function">contactRow</span><span class="token punctuation">(</span><span class="token constant">CONTACTS</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                sb <span class="token operator">=</span> <span class="token string">&quot;&lt;tr&gt;&lt;td&gt;There are no contacts.&lt;/td&gt;&lt;/tr&gt;&quot;</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#results&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;tbody&gt;&quot;</span> <span class="token operator">+</span> sb <span class="token operator">+</span> <span class="token string">&quot;&lt;/tbody&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
}
</code></pre></div>`,4),_hoisted_5$5=[_hoisted_1$c];function _sfc_render$e(n,a,s,t,e,o){return openBlock(),createElementBlock("div",null,_hoisted_5$5)}var tab4$2=_export_sfc(_sfc_main$f,[["render",_sfc_render$e]]);const _sfc_main$e={name:"client-contacts-uis",components:{tab1:tab1$2,tab2:tab2$2,tab3:tab3$2,tab4:tab4$2},data(){return{currentTabComponent:"tab1",isActive(n){return this.currentTabComponent==n}}}};function _sfc_render$d(n,a,s,t,e,o){return openBlock(),createElementBlock(Fragment,null,[createBaseVNode("button",{class:normalizeClass(["border-0 py-2 px-4 box-border rounded bg-white text-lg cursor-pointer",{"text-white":e.isActive("tab1"),"bg-blue-600":e.isActive("tab1"),"text-blue-600":!e.isActive("tab1")}]),onClick:a[0]||(a[0]=c=>e.currentTabComponent="tab1")},"Vuetify ",2),createBaseVNode("button",{class:normalizeClass(["border-0 py-2 px-4 box-border rounded bg-white text-lg cursor-pointer",{"text-white":e.isActive("tab2"),"bg-blue-600":e.isActive("tab2"),"text-blue-600":!e.isActive("tab2")}]),onClick:a[1]||(a[1]=c=>e.currentTabComponent="tab2")},"Client TypeScript ",2),createBaseVNode("button",{class:normalizeClass(["border-0 py-2 px-4 box-border rounded bg-white text-lg cursor-pointer",{"text-white":e.isActive("tab3"),"bg-blue-600":e.isActive("tab3"),"text-blue-600":!e.isActive("tab3")}]),onClick:a[2]||(a[2]=c=>e.currentTabComponent="tab3")},"Client jQuery ",2),createBaseVNode("button",{class:normalizeClass(["border-0 py-2 px-4 box-border rounded bg-white text-lg cursor-pointer",{"text-white":e.isActive("tab4"),"bg-blue-600":e.isActive("tab4"),"text-blue-600":!e.isActive("tab4")}]),onClick:a[3]||(a[3]=c=>e.currentTabComponent="tab4")},"Client Razor ",2),(openBlock(),createBlock(KeepAlive,null,[(openBlock(),createBlock(resolveDynamicComponent(e.currentTabComponent),{class:"mt-4"}))],1024))],64)}var clientContactsUis=_export_sfc(_sfc_main$e,[["render",_sfc_render$d]]);const _sfc_main$d={},_hoisted_1$b=createStaticVNode(`<h4 id="login-html" tabindex="-1">login.html <a class="header-anchor" href="#login-html" aria-hidden="true">#</a></h4><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>Sign In using credentials<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/auth/credentials<span class="token punctuation">&quot;</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>post<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col-lg-4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        {{ [&#39;userName&#39;,&#39;password&#39;] | validationSummary({class:&#39;alert alert-warning&#39;}) }}
        {{ { continue: qs.continue ?? &#39;/server/&#39;, errorView:&#39;/server/login&#39; } | htmlHiddenInputs }}
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        {{ {id:&#39;userName&#39;}
            | formInput({label:&#39;Email&#39;,help:&#39;Email you signed up with&#39;,size:&#39;lg&#39;}) }}
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        {{ {id:&#39;password&#39;,type:&#39;password&#39;}
            | formInput({label:&#39;Password&#39;,help:&#39;6 characters or more&#39;,size:&#39;lg&#39;,preserveValue:false}) }}
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        {{ {id:&#39;rememberMe&#39;,type:&#39;checkbox&#39;,checked:true} | formInput({label:&#39;Remember Me&#39;}) }}
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-lg btn-primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Login<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lnk<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/server/register<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Register New User<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
</code></pre></div>`,2),_hoisted_3$2=[_hoisted_1$b];function _sfc_render$c(n,a,s,t,e,o){return openBlock(),createElementBlock("div",null,_hoisted_3$2)}var tab1$1=_export_sfc(_sfc_main$d,[["render",_sfc_render$c]]);const _sfc_main$c={},_hoisted_1$a=createStaticVNode(`<h4 id="layout-html" tabindex="-1">_layout.html <a class="header-anchor" href="#layout-html" aria-hidden="true">#</a></h4><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/lib/@servicestack/client/index.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h4 id="login-html" tabindex="-1">login.html <a class="header-anchor" href="#login-html" aria-hidden="true">#</a></h4><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>Sign In using credentials<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/auth/credentials<span class="token punctuation">&quot;</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>post<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            {{ &#39;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>alert alert-danger<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{0}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>&#39; | htmlFormat(errorResponseExcept([&#39;userName&#39;,&#39;password&#39;])) }}
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hidden<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>continue<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{qs.continue ?? <span class="token punctuation">&#39;</span>/server-ts/<span class="token punctuation">&#39;</span>}}<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hidden<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>errorView<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/server-ts/login<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control form-control-lg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userName<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UserName<span class="token punctuation">&quot;</span></span>
                   <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ <span class="token punctuation">&#39;</span>userName<span class="token punctuation">&#39;</span> | formValue }}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-invalid</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ <span class="token punctuation">&#39;</span>userName<span class="token punctuation">&#39;</span> | errorResponse }}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control form-control-lg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Password<span class="token punctuation">&quot;</span></span>
                   <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-invalid</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ <span class="token punctuation">&#39;</span>password<span class="token punctuation">&#39;</span> | errorResponse }}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group col-md-4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-lg btn-primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Login<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rememberMe<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rememberMe<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span> <span class="token attr-name">{{</span> <span class="token attr-name"><span class="token namespace">{checked:</span>formCheckValue(&#39;rememberMe&#39;)}</span> <span class="token attr-name">|</span> <span class="token attr-name">htmlAttrs</span> <span class="token attr-name">}}</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rememberMe<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Remember Me<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group col-md-4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lnk<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/server-ts/register<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Register New User<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>

{{#raw appendTo scripts}}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/server-ts/login.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
{{/raw}}
</code></pre></div><h4 id="login-ts" tabindex="-1">login.ts <a class="header-anchor" href="#login-ts" aria-hidden="true">#</a></h4><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span>bindHandlers<span class="token punctuation">,</span> bootstrap<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@servicestack/client&quot;</span><span class="token punctuation">;</span>

<span class="token function">bootstrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//converts data-invalid attributes into Bootstrap v4 error messages.</span>

<span class="token function">bindHandlers</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token function-variable function">switchUser</span><span class="token operator">:</span> <span class="token punctuation">(</span>u<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;[name=userName]&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> HTMLInputElement<span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token operator">=</span> u<span class="token punctuation">;</span>
        <span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;[name=password]&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> HTMLInputElement<span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;p@55wOrd&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,6),_hoisted_7$1=[_hoisted_1$a];function _sfc_render$b(n,a,s,t,e,o){return openBlock(),createElementBlock("div",null,_hoisted_7$1)}var tab2$1=_export_sfc(_sfc_main$c,[["render",_sfc_render$b]]);const _sfc_main$b={},_hoisted_1$9=createStaticVNode(`<h4 id="layout-html" tabindex="-1">_layout.html <a class="header-anchor" href="#layout-html" aria-hidden="true">#</a></h4><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/assets/js/jquery.min.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/js/ss-utils.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h4 id="login-html" tabindex="-1">login.html <a class="header-anchor" href="#login-html" aria-hidden="true">#</a></h4><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>Sign In using credentials<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/auth/credentials<span class="token punctuation">&quot;</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>post<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        {{ &#39;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>alert alert-danger<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{0}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>&#39; | htmlFormat(errorResponseExcept([&#39;userName&#39;,&#39;password&#39;])) }}
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hidden<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>continue<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{qs.continue ?? <span class="token punctuation">&#39;</span>/server-jquery/<span class="token punctuation">&#39;</span>}}<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hidden<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>errorView<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/server-jquery/login<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control form-control-lg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userName<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UserName<span class="token punctuation">&quot;</span></span> 
               <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ <span class="token punctuation">&#39;</span>userName<span class="token punctuation">&#39;</span> | formValue }}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-invalid</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ <span class="token punctuation">&#39;</span>userName<span class="token punctuation">&#39;</span> | errorResponse }}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control form-control-lg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Password<span class="token punctuation">&quot;</span></span> 
               <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-invalid</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ <span class="token punctuation">&#39;</span>password<span class="token punctuation">&#39;</span> | errorResponse }}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group col-md-4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-lg btn-primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Login<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rememberMe<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rememberMe<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span> <span class="token attr-name">{{</span> <span class="token attr-name"><span class="token namespace">{checked:</span>formCheckValue(&#39;rememberMe&#39;)}</span> <span class="token attr-name">|</span> <span class="token attr-name">htmlAttrs</span> <span class="token attr-name">}}</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rememberMe<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Remember Me<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group col-md-4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lnk<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/server-jquery/register<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Register New User<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">&gt;</span></span>Quick Login:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>quicklist<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">data-click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>switchUser:admin@email.com<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>admin@email.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">data-click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>switchUser:new@user.com<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>new@user.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

{{#raw appendTo scripts}}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bootstrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bindHandlers</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token function-variable function">switchUser</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">u</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;[name=userName]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;[name=password]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token string">&#39;p@55wOrd&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
{{/raw}}
</code></pre></div>`,4),_hoisted_5$4=[_hoisted_1$9];function _sfc_render$a(n,a,s,t,e,o){return openBlock(),createElementBlock("div",null,_hoisted_5$4)}var tab3$1=_export_sfc(_sfc_main$b,[["render",_sfc_render$a]]);const _sfc_main$a={},_hoisted_1$8=createStaticVNode(`<h4 id="login-cshtml" tabindex="-1">login.cshtml <a class="header-anchor" href="#login-cshtml" aria-hidden="true">#</a></h4><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>Sign In using credentials<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/auth/credentials<span class="token punctuation">&quot;</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>post<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col-lg-4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        @Html.ValidationSummary(new[]{ &quot;userName&quot;,&quot;password&quot; }, 
            new { @class = &quot;alert alert-warning&quot; })
        
        @Html.HiddenInputs(new { 
            @continue = Html.Query(&quot;continue&quot;) ?? &quot;/server-razor/&quot;,
            errorView = &quot;/server-razor/login&quot;
        })
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        @Html.FormInput(new { id = &quot;userName&quot; }, new InputOptions {
            Label = &quot;Email&quot;,
            Help  = &quot;Email you signed up with&quot;,
            Size  = &quot;lg&quot;,
        })
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        @Html.FormInput(new { id = &quot;password&quot;, type = &quot;password&quot; }, new InputOptions {
            Label = &quot;Password&quot;,
            Help  = &quot;6 characters or more&quot;,
            Size  = &quot;lg&quot;,
            PreserveValue = false,
        })
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        @Html.FormInput(new { 
            id   = &quot;rememberMe&quot;, 
            type = &quot;checkbox&quot;,
            @checked = true,
        },
        new InputOptions { Label = &quot;Remember Me&quot; })
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-lg btn-primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Login<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lnk<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/server-razor/register<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Register New User<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
</code></pre></div>`,2),_hoisted_3$1=[_hoisted_1$8];function _sfc_render$9(n,a,s,t,e,o){return openBlock(),createElementBlock("div",null,_hoisted_3$1)}var tab4$1=_export_sfc(_sfc_main$a,[["render",_sfc_render$9]]);const _sfc_main$9={name:"server-login-uis",components:{tab1:tab1$1,tab2:tab2$1,tab3:tab3$1,tab4:tab4$1},data(){return{currentTabComponent:"tab1",isActive(n){return this.currentTabComponent==n}}}};function _sfc_render$8(n,a,s,t,e,o){return openBlock(),createElementBlock(Fragment,null,[createBaseVNode("button",{class:normalizeClass(["border-0 py-2 px-4 box-border rounded bg-white text-lg cursor-pointer",{"text-white":e.isActive("tab1"),"bg-blue-600":e.isActive("tab1"),"text-blue-600":!e.isActive("tab1")}]),onClick:a[0]||(a[0]=c=>e.currentTabComponent="tab1")},"Sharp Pages ",2),createBaseVNode("button",{class:normalizeClass(["border-0 py-2 px-4 box-border rounded bg-white text-lg cursor-pointer",{"text-white":e.isActive("tab2"),"bg-blue-600":e.isActive("tab2"),"text-blue-600":!e.isActive("tab2")}]),onClick:a[1]||(a[1]=c=>e.currentTabComponent="tab2")},"Client TypeScript ",2),createBaseVNode("button",{class:normalizeClass(["border-0 py-2 px-4 box-border rounded bg-white text-lg cursor-pointer",{"text-white":e.isActive("tab3"),"bg-blue-600":e.isActive("tab3"),"text-blue-600":!e.isActive("tab3")}]),onClick:a[2]||(a[2]=c=>e.currentTabComponent="tab3")},"Client jQuery ",2),createBaseVNode("button",{class:normalizeClass(["border-0 py-2 px-4 box-border rounded bg-white text-lg cursor-pointer",{"text-white":e.isActive("tab4"),"bg-blue-600":e.isActive("tab4"),"text-blue-600":!e.isActive("tab4")}]),onClick:a[3]||(a[3]=c=>e.currentTabComponent="tab4")},"Client Razor ",2),(openBlock(),createBlock(KeepAlive,{class:"mt-4"},[(openBlock(),createBlock(resolveDynamicComponent(e.currentTabComponent)))],1024))],64)}var serveruis=_export_sfc(_sfc_main$9,[["render",_sfc_render$8]]);const _sfc_main$8={},_hoisted_1$7=createStaticVNode(`<h4 id="requires-auth-partial-html" tabindex="-1">_requires-auth-partial.html <a class="header-anchor" href="#requires-auth-partial-html" aria-hidden="true">#</a></h4><div class="language-html"><pre><code>{{ \`/server/login?continue=\${PathInfo}\`
   | redirectIfNotAuthenticated }}

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">text-align</span><span class="token punctuation">:</span>right</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>small</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-muted<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        {{ userSession.DisplayName }} 
        | <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/auth/logout?continue=/server/<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Sign Out<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>small</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h4 id="index-html" tabindex="-1">index.html <a class="header-anchor" href="#index-html" aria-hidden="true">#</a></h4><div class="language-html"><pre><code>{{ &#39;requires-auth&#39; | partial }}

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>Add new Contact<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/contacts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>post<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col-lg-4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        {{ &#39;title,name,color,age,filmGenres,agree&#39; | validationSummary }}
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        {{ {id:&#39;title&#39;,type:&#39;radio&#39;} | formInput({values:contactTitles,inline:true}) }}
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        {{ {id:&#39;name&#39;,placeholder:&#39;Name&#39;} | formInput({label:&#39;Full Name&#39;,help:&#39;Your first and last name&#39;}) }}
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        {{ {id:&#39;color&#39;,class:&#39;col-4&#39;}
           | formSelect({label:&#39;Favorite color&#39;,values:{&#39;&#39;, ...contactColors}}) }}
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        {{ {id:&#39;filmGenres&#39;,type:&#39;checkbox&#39;} | formInput({label:&#39;Favorite Film Genres&#39;,values:contactGenres,help:&quot;choose one or more&quot;}) }}
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        {{ {id:&#39;age&#39;,type:&#39;number&#39;,min:13,placeholder:&#39;Age&#39;,class:&#39;col-3&#39;} | formInput }}
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        {{ {id:&#39;agree&#39;,type:&#39;checkbox&#39;} | formInput({label:&#39;Agree to terms and conditions&#39;}) }}
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Add Contact<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/server/contacts/<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>reset<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>

{{ sendToGateway(&#39;GetContacts&#39;) | assignTo: response }}

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>results<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">&gt;</span></span>
    {{#each response.Results}}
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token selector">background:</span><span class="token punctuation">{</span><span class="token punctuation">{</span>Color<span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>{{Title}} {{Name}} ({{Age}})<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/server/contacts/{{Id}}/edit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>edit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>post<span class="token punctuation">&quot;</span></span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/contacts/{{Id}}/delete<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">onsubmit</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value javascript language-javascript"><span class="token keyword">return</span> <span class="token function">confirm</span><span class="token punctuation">(</span><span class="token string">&#39;Are you sure?&#39;</span><span class="token punctuation">)</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-sm btn-primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>delete<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>
    {{else}}
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>There are no contacts.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>
    {{/each}}
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span>

{{ htmlError }}
</code></pre></div>`,4),_hoisted_5$3=[_hoisted_1$7];function _sfc_render$7(n,a,s,t,e,o){return openBlock(),createElementBlock("div",null,_hoisted_5$3)}var tab1=_export_sfc(_sfc_main$8,[["render",_sfc_render$7]]);const _sfc_main$7={},_hoisted_1$6=createStaticVNode(`<h4 id="requires-auth-partial-html" tabindex="-1">_requires-auth-partial.html <a class="header-anchor" href="#requires-auth-partial-html" aria-hidden="true">#</a></h4><div class="language-html"><pre><code>{{ \`/server-ts/login?continue=\${PathInfo}\`
   | redirectIfNotAuthenticated }}

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">text-align</span><span class="token punctuation">:</span>right</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>small</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-muted<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        {{ userSession.DisplayName }} 
        | <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/auth/logout?continue=/server/<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Sign Out<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>small</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h4 id="dtos-ts" tabindex="-1">dtos.ts <a class="header-anchor" href="#dtos-ts" aria-hidden="true">#</a></h4><div class="language-ts"><pre><code><span class="token comment">// generated with https://docs.servicestack.net/typescript-add-servicestack-reference</span>

<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Contact</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">constructor</span><span class="token punctuation">(</span>init<span class="token operator">?</span><span class="token operator">:</span>Partial<span class="token operator">&lt;</span>Contact<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span>Object<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> init<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> userAuthId<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> title<span class="token operator">:</span> Title<span class="token punctuation">;</span>
    <span class="token keyword">public</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> color<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> filmGenres<span class="token operator">:</span> FilmGenres<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// @Route(&quot;/contacts/{Id}&quot;, &quot;DELETE&quot;)</span>
<span class="token comment">// @Route(&quot;/contacts/{Id}/delete&quot;, &quot;POST&quot;)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">DeleteContact</span> <span class="token keyword">implements</span> <span class="token class-name">IReturnVoid</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">constructor</span><span class="token punctuation">(</span>init<span class="token operator">?</span><span class="token operator">:</span>Partial<span class="token operator">&lt;</span>DeleteContact<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span>Object<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> init<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">continue</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token function">createResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token function">getTypeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token string">&#39;DeleteContact&#39;</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// @Route(&quot;/contacts&quot;, &quot;GET&quot;)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">GetContacts</span> <span class="token keyword">implements</span> <span class="token class-name">IReturn<span class="token operator">&lt;</span>GetContactsResponse<span class="token operator">&gt;</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">constructor</span><span class="token punctuation">(</span>init<span class="token operator">?</span><span class="token operator">:</span>Partial<span class="token operator">&lt;</span>GetContacts<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span>Object<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> init<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token function">createResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">GetContactsResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token function">getTypeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token string">&#39;GetContacts&#39;</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="index-html" tabindex="-1">index.html <a class="header-anchor" href="#index-html" aria-hidden="true">#</a></h4><div class="language-html"><pre><code>{{ &#39;requires-auth&#39; | partial }}

{{ &#39;/server-ts/contacts/&#39; | assignTo: continue }}

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>Add new Contact<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/contacts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>post<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col-lg-4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        {{ &#39;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>alert alert-danger<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{0}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>&#39; | htmlFormat(errorResponseExcept(&#39;title,name,color,filmGenres,age,agree&#39;)) }}
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hidden<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Continue<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ continue }}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hidden<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ErrorView<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ continue }}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-check<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-invalid</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ <span class="token punctuation">&#39;</span>title<span class="token punctuation">&#39;</span> | errorResponse }}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            {{#each contactTitles}}
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>custom-control custom-radio custom-control-inline<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                &lt;input type=&quot;radio&quot; id=&quot;title-{{Key}}&quot; name=&quot;title&quot; value=&quot;{{Key}}&quot; class=&quot;custom-control-input&quot;
                       {{ {checked:formValue(&#39;title&#39;)==Key} | htmlAttrs }}&gt;
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>custom-control-label<span class="token punctuation">&quot;</span></span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title-{{Key}}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{Value}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
            {{/each}}
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Full Name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Name<span class="token punctuation">&quot;</span></span>
               <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ <span class="token punctuation">&#39;</span>name<span class="token punctuation">&#39;</span> | formValue }}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-invalid</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{errorResponse(<span class="token punctuation">&#39;</span>name<span class="token punctuation">&#39;</span>)}}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>small</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name-help<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-muted<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Your first and last name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>small</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-label<span class="token punctuation">&quot;</span></span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>color<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Favorite color<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>color<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>color<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col-4 form-control<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-invalid</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ <span class="token punctuation">&#39;</span>color<span class="token punctuation">&#39;</span> | errorResponse }}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
            {{#each contactColors}}
                &lt;option value=&quot;{{Key}}&quot; {{ {selected:formValue(&#39;color&#39;)==Key} | htmlAttrs }}&gt;{{Value}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
            {{/each}}
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-check-label<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Favorite Film Genres<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-check<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-invalid</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ <span class="token punctuation">&#39;</span>filmGenres<span class="token punctuation">&#39;</span> | errorResponse }}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        {{ &#39;filmGenres&#39; | formValues | assignTo: selectedGenres }}
        {{#each contactGenres}}
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>custom-control custom-checkbox<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>filmGenres-{{it}}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>filmGenres<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{it}}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-check-input<span class="token punctuation">&quot;</span></span>
                       <span class="token attr-name">{{</span> <span class="token attr-name"><span class="token namespace">{checked:</span>contains(selectedGenres,</span> <span class="token attr-name">it)}</span> <span class="token attr-name">|</span> <span class="token attr-name">htmlAttrs</span> <span class="token attr-name">}}</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-check-label<span class="token punctuation">&quot;</span></span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>filmGenres-{{it}}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{it}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
        {{/each}}
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control col-3<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>age<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>number<span class="token punctuation">&quot;</span></span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>13<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Age<span class="token punctuation">&quot;</span></span>
               <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ <span class="token punctuation">&#39;</span>age<span class="token punctuation">&#39;</span> | formValue }}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-invalid</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{errorResponse(<span class="token punctuation">&#39;</span>age<span class="token punctuation">&#39;</span>)}}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-check<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span> form-check-input<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>agree<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>agree<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>
                   <span class="token attr-name">data-invalid</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ <span class="token punctuation">&#39;</span>agree<span class="token punctuation">&#39;</span> | errorResponse }}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-check-label<span class="token punctuation">&quot;</span></span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>agree<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Agree to terms and conditions<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Add Contact<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ continue }}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>reset<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>results<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span>

{{#capture appendTo scripts}}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">var</span> <span class="token constant">CONTACTS</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token function">sendToGateway</span><span class="token punctuation">(</span><span class="token string">&#39;GetContacts&#39;</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token parameter">map</span> <span class="token operator">=&gt;</span> it<span class="token punctuation">.</span>Results <span class="token operator">|</span> json <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
{{/capture}}

{{#raw appendTo scripts}}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/server-ts/contacts/index.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
{{/raw}}

{{ htmlError }}
</code></pre></div><h4 id="index-ts" tabindex="-1">index.ts <a class="header-anchor" href="#index-ts" aria-hidden="true">#</a></h4><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span>bindHandlers<span class="token punctuation">,</span> bootstrap<span class="token punctuation">,</span> JsonServiceClient<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@servicestack/client&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>Contact<span class="token punctuation">,</span> DeleteContact<span class="token punctuation">,</span> GetContacts<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;../../../dtos&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">declare</span> <span class="token keyword">var</span> <span class="token constant">CONTACTS</span><span class="token operator">:</span>Contact<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JsonServiceClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">bootstrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//converts data-invalid attributes into Bootstrap v4 error messages.</span>

<span class="token function">bindHandlers</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token function-variable function">deleteContact</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token keyword">function</span><span class="token punctuation">(</span>id<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">confirm</span><span class="token punctuation">(</span><span class="token string">&#39;Are you sure?&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>

        <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DeleteContact</span><span class="token punctuation">(</span><span class="token punctuation">{</span> id <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">GetContacts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token constant">CONTACTS</span> <span class="token operator">=</span> response<span class="token punctuation">.</span>results<span class="token punctuation">;</span>
        <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">contactRow</span> <span class="token operator">=</span> <span class="token punctuation">(</span>contact<span class="token operator">:</span>Contact<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;tr style=&quot;background:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>contact<span class="token punctuation">.</span>color<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;&gt;
        &lt;td&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>contact<span class="token punctuation">.</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>contact<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> (</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>contact<span class="token punctuation">.</span>age<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)&lt;/td&gt;
        &lt;td&gt;&lt;a href=&quot;/server-ts/contacts/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>contact<span class="token punctuation">.</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/edit&quot;&gt;edit&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;button class=&quot;btn btn-sm btn-primary&quot; data-click=&quot;deleteContact:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>contact<span class="token punctuation">.</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;&gt;delete&lt;/button&gt;&lt;/td&gt;
    &lt;/tr&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> sb <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">CONTACTS</span><span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span><span class="token constant">CONTACTS</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            sb <span class="token operator">+=</span> <span class="token function">contactRow</span><span class="token punctuation">(</span><span class="token constant">CONTACTS</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        sb <span class="token operator">=</span> <span class="token string">&quot;&lt;tr&gt;&lt;td&gt;There are no contacts.&lt;/td&gt;&lt;/tr&gt;&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;#results&quot;</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;tbody&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>sb<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/tbody&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,8),_hoisted_9=[_hoisted_1$6];function _sfc_render$6(n,a,s,t,e,o){return openBlock(),createElementBlock("div",null,_hoisted_9)}var tab2=_export_sfc(_sfc_main$7,[["render",_sfc_render$6]]);const _sfc_main$6={},_hoisted_1$5=createStaticVNode(`<h4 id="requires-auth-partial-html" tabindex="-1">_requires-auth-partial.html <a class="header-anchor" href="#requires-auth-partial-html" aria-hidden="true">#</a></h4><div class="language-html"><pre><code>{{ \`/server-jquery/login?continue=\${PathInfo}\`
   | redirectIfNotAuthenticated }}

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">text-align</span><span class="token punctuation">:</span>right</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>small</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-muted<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        {{ userSession.DisplayName }} 
        | <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/auth/logout?continue=/server/<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Sign Out<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>small</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h4 id="index-html" tabindex="-1">index.html <a class="header-anchor" href="#index-html" aria-hidden="true">#</a></h4><div class="language-html"><pre><code>{{ &#39;requires-auth&#39; | partial }}

{{ &#39;/server-jquery/contacts/&#39; | assignTo: continue }}

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>Add new Contact<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/contacts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>post<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col-lg-4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        {{ &#39;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>alert alert-danger<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{0}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>&#39; | htmlFormat(errorResponseExcept(&#39;title,name,color,filmGenres,age,agree&#39;)) }}
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hidden<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Continue<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ continue }}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hidden<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ErrorView<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ continue }}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-check<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-invalid</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ <span class="token punctuation">&#39;</span>title<span class="token punctuation">&#39;</span> | errorResponse }}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            {{#each contactTitles}}
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>custom-control custom-radio custom-control-inline<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                &lt;input type=&quot;radio&quot; id=&quot;title-{{Key}}&quot; name=&quot;title&quot; value=&quot;{{Key}}&quot; class=&quot;custom-control-input&quot;
                       {{ {checked:formValue(&#39;title&#39;)==Key} | htmlAttrs }}&gt;
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>custom-control-label<span class="token punctuation">&quot;</span></span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title-{{Key}}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{Value}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
            {{/each}}
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Full Name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Name<span class="token punctuation">&quot;</span></span>
               <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ <span class="token punctuation">&#39;</span>name<span class="token punctuation">&#39;</span> | formValue }}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-invalid</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{errorResponse(<span class="token punctuation">&#39;</span>name<span class="token punctuation">&#39;</span>)}}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>small</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name-help<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-muted<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Your first and last name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>small</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-label<span class="token punctuation">&quot;</span></span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>color<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Favorite color<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>color<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>color<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col-4 form-control<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-invalid</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ <span class="token punctuation">&#39;</span>color<span class="token punctuation">&#39;</span> | errorResponse }}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
            {{#each contactColors}}
            &lt;option value=&quot;{{Key}}&quot; {{ {selected:formValue(&#39;color&#39;)==Key} | htmlAttrs }}&gt;{{Value}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
            {{/each}}
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-check-label<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Favorite Film Genres<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-check<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-invalid</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ <span class="token punctuation">&#39;</span>filmGenres<span class="token punctuation">&#39;</span> | errorResponse }}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            {{ &#39;filmGenres&#39; | formValues | assignTo: selectedGenres }}
            {{#each contactGenres}}
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>custom-control custom-checkbox<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>filmGenres-{{it}}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>filmGenres<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{it}}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-check-input<span class="token punctuation">&quot;</span></span>
                       <span class="token attr-name">{{</span> <span class="token attr-name"><span class="token namespace">{checked:</span>contains(selectedGenres,</span> <span class="token attr-name">it)}</span> <span class="token attr-name">|</span> <span class="token attr-name">htmlAttrs</span> <span class="token attr-name">}}</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-check-label<span class="token punctuation">&quot;</span></span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>filmGenres-{{it}}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{it}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
            {{/each}}
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control col-3<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>age<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>number<span class="token punctuation">&quot;</span></span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>13<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Age<span class="token punctuation">&quot;</span></span>
               <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ <span class="token punctuation">&#39;</span>age<span class="token punctuation">&#39;</span> | formValue }}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-invalid</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{errorResponse(<span class="token punctuation">&#39;</span>age<span class="token punctuation">&#39;</span>)}}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-check<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span> form-check-input<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>agree<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>agree<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>
                   <span class="token attr-name">data-invalid</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ <span class="token punctuation">&#39;</span>agree<span class="token punctuation">&#39;</span> | errorResponse }}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-check-label<span class="token punctuation">&quot;</span></span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>agree<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Agree to terms and conditions<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Add Contact<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ continue }}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>reset<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>results<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span>

{{#capture appendTo scripts}}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">var</span> <span class="token constant">CONTACTS</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token function">sendToGateway</span><span class="token punctuation">(</span><span class="token string">&#39;GetContacts&#39;</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token parameter">map</span> <span class="token operator">=&gt;</span> it<span class="token punctuation">.</span>Results <span class="token operator">|</span> json <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
{{/capture}}

{{#raw appendTo scripts}}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bootstrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bindHandlers</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token function-variable function">deleteContact</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">confirm</span><span class="token punctuation">(</span><span class="token string">&#39;Are you sure?&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            $<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;/contacts/&quot;</span> <span class="token operator">+</span> id <span class="token operator">+</span> <span class="token string">&quot;/delete&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">r</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
               $<span class="token punctuation">.</span><span class="token function">getJSON</span><span class="token punctuation">(</span><span class="token string">&quot;/contacts&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">r</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                   <span class="token constant">CONTACTS</span> <span class="token operator">=</span> r<span class="token punctuation">.</span>results<span class="token punctuation">;</span>
                   <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token punctuation">}</span><span class="token punctuation">)</span> 
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">function</span> <span class="token function">contactRow</span><span class="token punctuation">(</span><span class="token parameter">contact</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&#39;&lt;tr style=&quot;background:&#39;</span> <span class="token operator">+</span> contact<span class="token punctuation">.</span>color <span class="token operator">+</span> <span class="token string">&#39;&quot;&gt;&#39;</span> <span class="token operator">+</span>
                <span class="token string">&#39;&lt;td&gt;&#39;</span> <span class="token operator">+</span> contact<span class="token punctuation">.</span>title <span class="token operator">+</span> <span class="token string">&#39; &#39;</span> <span class="token operator">+</span> contact<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">&#39; (&#39;</span> <span class="token operator">+</span> contact<span class="token punctuation">.</span>age <span class="token operator">+</span> <span class="token string">&#39;)&lt;/td&gt;&#39;</span> <span class="token operator">+</span>
                <span class="token string">&#39;&lt;td&gt;&lt;a href=&quot;/server-jquery/contacts/&#39;</span> <span class="token operator">+</span> contact<span class="token punctuation">.</span>id <span class="token operator">+</span> <span class="token string">&#39;/edit&quot;&gt;edit&lt;/a&gt;&lt;/td&gt;&#39;</span> <span class="token operator">+</span>
                <span class="token string">&#39;&lt;td&gt;&lt;button class=&quot;btn btn-sm btn-primary&quot; data-click=&quot;deleteContact:&#39;</span> <span class="token operator">+</span> contact<span class="token punctuation">.</span>id <span class="token operator">+</span> <span class="token string">&#39;&quot;&gt;delete&lt;/button&gt;&lt;/td&gt;&#39;</span> <span class="token operator">+</span>
            <span class="token string">&#39;&lt;/tr&gt;&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> sb <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">CONTACTS</span><span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span><span class="token constant">CONTACTS</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                sb <span class="token operator">+=</span> <span class="token function">contactRow</span><span class="token punctuation">(</span><span class="token constant">CONTACTS</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            sb <span class="token operator">=</span> <span class="token string">&quot;&lt;tr&gt;&lt;td&gt;There are no contacts.&lt;/td&gt;&lt;/tr&gt;&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#results&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;tbody&gt;&quot;</span> <span class="token operator">+</span> sb <span class="token operator">+</span> <span class="token string">&quot;&lt;/tbody&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
{{/raw}}

{{ htmlError }}
</code></pre></div>`,4),_hoisted_5$2=[_hoisted_1$5];function _sfc_render$5(n,a,s,t,e,o){return openBlock(),createElementBlock("div",null,_hoisted_5$2)}var tab3=_export_sfc(_sfc_main$6,[["render",_sfc_render$5]]);const _sfc_main$5={},_hoisted_1$4=createStaticVNode(`<h4 id="requiresauthserver-cshtml" tabindex="-1">_RequiresAuthServer.cshtml <a class="header-anchor" href="#requiresauthserver-cshtml" aria-hidden="true">#</a></h4><div class="language-html"><pre><code>@{ RedirectIfNotAuthenticated($&quot;/server-razor/login?continue={Request.PathInfo}&quot;); }

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">text-align</span><span class="token punctuation">:</span>right</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>small</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-muted<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        @UserSession.DisplayName
        | <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/auth/logout?continue=/server-razor/<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Sign Out<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>small</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h4 id="default-cshtml" tabindex="-1">default.cshtml <a class="header-anchor" href="#default-cshtml" aria-hidden="true">#</a></h4><div class="language-html"><pre><code>@await Html.PartialAsync(&quot;_RequiresAuthServer&quot;)

@{ var Continue = &quot;/server-razor/contacts/&quot;; }

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>Add new Contact<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/contacts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>post<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col-lg-4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        @Html.ValidationSummary(new[]{ &quot;title&quot;,&quot;name&quot;,&quot;color&quot;,&quot;age&quot;,&quot;filmGenres&quot;,&quot;agree&quot; })
        @Html.HiddenInputs(new { @continue = Continue, errorView = Continue })
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        @Html.FormInput(new { 
            id = &quot;title&quot;, 
            type = &quot;radio&quot;,
        }, new InputOptions { 
            Values = Html.ContactTitles(),
            Inline = true,
        })
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        @Html.FormInput(new { 
            id = &quot;name&quot;, 
            placeholder = &quot;Name&quot;, 
        }, new InputOptions {
            Label = &quot;Full Name&quot;,
            Help  = &quot;Your first and last name&quot;,
        })
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        @Html.FormSelect(new { 
            id = &quot;color&quot;, 
            @class = &quot;col-4&quot;, 
        }, new InputOptions {
            Label  = &quot;Favorite color&quot;,
            Values = new StringDictionary { {&quot;&quot;,&quot;&quot;} }.Merge(Html.ContactColors()),
        })
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        @Html.FormInput(new { 
            id = &quot;filmGenres&quot;, 
            type = &quot;checkbox&quot;,
        }, new InputOptions { 
            Label  = &quot;Favorite Film Genres&quot;,
            Help   = &quot;choose one or more&quot;,
            Values = Html.ContactGenres()
        })
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        @Html.FormInput(new { 
            id = &quot;age&quot;, 
            type = &quot;number&quot;,
            min = 13,
            placeholder = &quot;Age&quot;,
            @class = &quot;col-3&quot;,
        })
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        @Html.FormInput(new {
            id   = &quot;agree&quot;,
            type = &quot;checkbox&quot;,
        },
        new InputOptions { Label = &quot;Agree to terms and conditions&quot; })
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Add Contact<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/server-razor/contacts/<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>reset<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>

@{ var response = await Gateway.SendAsync(new GetContacts()); }

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>results<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">&gt;</span></span>
    @foreach (var c in response.Results)
    {
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">background</span><span class="token punctuation">:</span>@c.Color</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>@c.Title @c.Name (@c.Age)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/server-razor/contacts/@c.Id/edit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>edit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>post<span class="token punctuation">&quot;</span></span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/contacts/@c.Id/delete<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">onsubmit</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value javascript language-javascript"><span class="token keyword">return</span> <span class="token function">confirm</span><span class="token punctuation">(</span><span class="token string">&#39;Are you sure?&#39;</span><span class="token punctuation">)</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hidden<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>continue<span class="token punctuation">&quot;</span></span>  <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@Continue<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-sm btn-primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>delete<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>
    }
    @if (response.Results.IsEmpty()) 
    {
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>There are no contacts.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>
    }
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span>
</code></pre></div>`,4),_hoisted_5$1=[_hoisted_1$4];function _sfc_render$4(n,a,s,t,e,o){return openBlock(),createElementBlock("div",null,_hoisted_5$1)}var tab4=_export_sfc(_sfc_main$5,[["render",_sfc_render$4]]);const _sfc_main$4={name:"server-contacts-uis",components:{tab1,tab2,tab3,tab4},data(){return{currentTabComponent:"tab1",isActive(n){return this.currentTabComponent==n}}}};function _sfc_render$3(n,a,s,t,e,o){return openBlock(),createElementBlock(Fragment,null,[createBaseVNode("button",{class:normalizeClass(["border-0 py-2 px-4 box-border rounded bg-white text-lg cursor-pointer",{"text-white":e.isActive("tab1"),"bg-blue-600":e.isActive("tab1"),"text-blue-600":!e.isActive("tab1")}]),onClick:a[0]||(a[0]=c=>e.currentTabComponent="tab1")},"Script Pages ",2),createBaseVNode("button",{class:normalizeClass(["border-0 py-2 px-4 box-border rounded bg-white text-lg cursor-pointer",{"text-white":e.isActive("tab2"),"bg-blue-600":e.isActive("tab2"),"text-blue-600":!e.isActive("tab2")}]),onClick:a[1]||(a[1]=c=>e.currentTabComponent="tab2")},"Server TypeScript ",2),createBaseVNode("button",{class:normalizeClass(["border-0 py-2 px-4 box-border rounded bg-white text-lg cursor-pointer",{"text-white":e.isActive("tab3"),"bg-blue-600":e.isActive("tab3"),"text-blue-600":!e.isActive("tab3")}]),onClick:a[2]||(a[2]=c=>e.currentTabComponent="tab3")},"Server jQuery ",2),createBaseVNode("button",{class:normalizeClass(["border-0 py-2 px-4 box-border rounded bg-white text-lg cursor-pointer",{"text-white":e.isActive("tab4"),"bg-blue-600":e.isActive("tab4"),"text-blue-600":!e.isActive("tab4")}]),onClick:a[3]||(a[3]=c=>e.currentTabComponent="tab4")},"Server Razor ",2),(openBlock(),createBlock(KeepAlive,null,[(openBlock(),createBlock(resolveDynamicComponent(e.currentTabComponent),{class:"mt-4"}))],1024))],64)}var serverContactsUis=_export_sfc(_sfc_main$4,[["render",_sfc_render$3]]);class HelloResponse{constructor(a){Object.assign(this,a)}}class Hello{constructor(a){Object.assign(this,a)}createResponse(){return new HelloResponse}getTypeName(){return"Hello"}}var commonjsGlobal=typeof globalThis!="undefined"?globalThis:typeof window!="undefined"?window:typeof global!="undefined"?global:typeof self!="undefined"?self:{},dist$1={};(function(exports){var __assign=commonjsGlobal&&commonjsGlobal.__assign||function(){return __assign=Object.assign||function(n){for(var a,s=1,t=arguments.length;s<t;s++){a=arguments[s];for(var e in a)Object.prototype.hasOwnProperty.call(a,e)&&(n[e]=a[e])}return n},__assign.apply(this,arguments)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.errorResponseExcept=exports.errorResponseSummary=exports.toObject=exports.toFormData=exports.parseResponseStatus=exports.getField=exports.normalize=exports.normalizeKey=exports.parseCookie=exports.tryDecode=exports.stripQuotes=exports.bytesToBase64=exports.appendQueryString=exports.createUrl=exports.createPath=exports.combinePaths=exports.queryString=exports.humanize=exports.onlyProps=exports.chop=exports.lastRightPart=exports.lastLeftPart=exports.rightPart=exports.leftPart=exports.splitOnLast=exports.splitOnFirst=exports.css=exports.nameOf=exports.sanitize=exports.toPascalCase=exports.toCamelCase=exports.isFormData=exports.JsonServiceClient=exports.GetAccessTokenResponse=exports.HttpMethods=exports.ServerEventUser=exports.GetEventSubscribers=exports.UpdateEventSubscriberResponse=exports.UpdateEventSubscriber=exports.ServerEventReceiver=exports.ServerEventsClient=exports.ReadyState=exports.SingletonInstanceResolver=exports.NewInstanceResolver=exports.GetNavItemsResponse=exports.GetNavItems=exports.NavItem=exports.ErrorResponse=exports.ResponseError=exports.ResponseStatus=void 0,exports.fromDateTime=exports.isNullOrEmpty=exports.indexOfAny=exports.htmlAttrs=exports.enc=exports.uniq=exports.flatMap=exports.toTimeSpanFmt=exports.toXsdDuration=exports.fromXsdDuration=exports.classNames=exports.NavOptions=exports.UserAttributes=exports.LinkButtonDefaults=exports.NavButtonGroupDefaults=exports.NavbarDefaults=exports.NavLinkDefaults=exports.NavDefaults=exports.btnClasses=exports.btnSizeClass=exports.BootstrapSizes=exports.btnColorClass=exports.BootstrapColors=exports.activeClass=exports.activeClassNav=exports.omit=exports.pick=exports.safeVarName=exports.trimEnd=exports.populateForm=exports.triggerEvent=exports.serializeToFormData=exports.serializeToUrlEncoded=exports.serializeToObject=exports.serializeForm=exports.ajaxSubmit=exports.formSubmit=exports.toVarNames=exports.bootstrapForm=exports.bindHandlers=exports.bootstrap=exports.createElement=exports.toLocalISOString=exports.timeFmt12=exports.dateFmtHM=exports.dateFmt=exports.padInt=exports.toDateFmt=exports.toDate=exports.errorResponse=void 0,exports.Inspect=exports.alignAuto=exports.alignRight=exports.alignCenter=exports.alignLeft=exports.uniqueKeys=exports.JSV=exports.StringBuffer=exports.toBase64String=exports.toByteArray=exports.fromByteArray=exports.toGuid=exports.fromGuid=exports.toTimeSpan=exports.fromTimeSpan=exports.toDateTime=void 0;function nodeRequire(){try{var isNode=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node!="undefined";return isNode?eval("require"):null}catch(n){return null}}var R=nodeRequire();R&&R("cross-fetch/polyfill");var ResponseStatus=function(){function n(a){Object.assign(this,a)}return n}();exports.ResponseStatus=ResponseStatus;var ResponseError=function(){function n(a){Object.assign(this,a)}return n}();exports.ResponseError=ResponseError;var ErrorResponse=function(){function n(a){Object.assign(this,a)}return n}();exports.ErrorResponse=ErrorResponse;var NavItem=function(){function n(a){Object.assign(this,a)}return n}();exports.NavItem=NavItem;var GetNavItems=function(){function n(a){Object.assign(this,a)}return n.prototype.createResponse=function(){return new GetNavItemsResponse},n.prototype.getTypeName=function(){return"GetNavItems"},n}();exports.GetNavItems=GetNavItems;var GetNavItemsResponse=function(){function n(a){Object.assign(this,a)}return n}();exports.GetNavItemsResponse=GetNavItemsResponse;var NewInstanceResolver=function(){function n(){}return n.prototype.tryResolve=function(a){return new a},n}();exports.NewInstanceResolver=NewInstanceResolver;var SingletonInstanceResolver=function(){function n(){}return n.prototype.tryResolve=function(a){return a.instance||(a.instance=new a)},n}();exports.SingletonInstanceResolver=SingletonInstanceResolver;function eventMessageType(n){switch(n){case"onConnect":return"ServerEventConnect";case"onHeartbeat":return"ServerEventHeartbeat";case"onJoin":return"ServerEventJoin";case"onLeave":return"ServerEventLeave";case"onUpdate":return"ServerEventUpdate"}return null}(function(n){n[n.CONNECTING=0]="CONNECTING",n[n.OPEN=1]="OPEN",n[n.CLOSED=2]="CLOSED"})(exports.ReadyState||(exports.ReadyState={}));var ServerEventsClient=function(){function n(a,s,t,e){var o=this;if(t===void 0&&(t={}),e===void 0&&(e=null),this.channels=s,this.options=t,this.eventSource=e,this.onMessage=function(c){if(typeof document=="undefined"){var l=c.data?c.data.indexOf(`
`):-1;if(l>=0){var u=c.data,i=c.lastEventId,k=Object.assign({},{lastEventId:i,data:u.substring(0,l)}),d=Object.assign({},{lastEventId:i,data:u.substring(l+1)});o._onMessage(k),o._onMessage(d);return}}o._onMessage(c)},this._onMessage=function(c){if(!o.stopped){var l=o.options;if(typeof u=="undefined")var u={querySelectorAll:function(X){return[]}};var i=u.querySelectorAll.bind(u),k=splitOnFirst(c.data," "),d=null,m=k[0],b=splitOnFirst(m,"@");b.length>1&&(d=b[0],m=b[1]);var C=k[1],O=null;try{O=C?JSON.parse(C):null}catch{}if(k=splitOnFirst(m,"."),k.length<=1)throw"invalid selector format: "+m;var f=k[0],y=k[1].replace(new RegExp("%20","g")," "),S=splitOnFirst(y,"$"),N=S[0],q=S[1],F=q&&i(q),L=F&&F[0],D=parseInt(c.lastEventId),Y=c.data,J=eventMessageType(N)||"ServerEventMessage",z={eventId:D,data:Y,type:J,channel:d,selector:m,json:C,body:O,op:f,target:S[0],cssSelector:q,meta:{}},Z=typeof O=="object"?Object.assign({},z,O):z;if(!(l.validate&&l.validate(z)===!1)){var G=new Headers;if(G.set("Content-Type","text/plain"),f==="cmd")if(N==="onConnect"){o.connectionInfo=Z,typeof O.heartbeatIntervalMs=="string"&&(o.connectionInfo.heartbeatIntervalMs=parseInt(O.heartbeatIntervalMs)),typeof O.idleTimeoutMs=="string"&&(o.connectionInfo.idleTimeoutMs=parseInt(O.idleTimeoutMs)),Object.assign(l,O);var W=l.handlers.onConnect;if(W&&(W.call(L||u.body,o.connectionInfo,z),o.stopped))return;l.heartbeatUrl&&(l.heartbeat&&clearInterval(l.heartbeat),l.heartbeat=setInterval(function(){if(o.eventSource.readyState===EventSource.CLOSED){clearInterval(l.heartbeat);var X=l.handlers.onStop;X!=null&&X.apply(o.eventSource),o.reconnectServerEvents({error:new Error("EventSource is CLOSED")});return}fetch(new Request(l.heartbeatUrl,{method:"POST",mode:"cors",headers:G,credentials:o.serviceClient.credentials})).then(function($){if(!$.ok)throw new Error($.status+" - "+$.statusText)}).catch(function($){return o.reconnectServerEvents({error:$})})},o.connectionInfo&&o.connectionInfo.heartbeatIntervalMs||l.heartbeatIntervalMs||1e4)),l.unRegisterUrl&&typeof window!="undefined"&&(window.onunload=function(){navigator.sendBeacon?(o.stopped=!0,o.eventSource&&o.eventSource.close(),navigator.sendBeacon(l.unRegisterUrl)):o.stop()}),o.updateSubscriberUrl=l.updateSubscriberUrl,o.updateChannels((l.channels||"").split(","))}else{var en=N=="onJoin"||N=="onLeave"||N=="onUpdate",W=l.handlers[N];if(W)en?W.call(L||u.body,Z):W.call(L||u.body,O,z);else if(!en){var un=l.receivers&&l.receivers.cmd;o.invokeReceiver(un,N,L,z,"cmd")}en&&(W=l.handlers.onCommand,W&&W.call(L||u.body,Z))}else f==="trigger"?o.raiseEvent(y,z):f==="css"&&css(F||i("body"),N,O);var pn=l.receivers&&l.receivers[f];if(o.invokeReceiver(pn,N,L,z,f),!eventMessageType(N)){var W=l.handlers.onMessage;W&&W.call(L||u.body,Z)}l.onTick&&l.onTick()}}},this.onError=function(c){if(!o.stopped){c||(c=event);var l=o.options.onException;l!=null&&l.call(o.eventSource,c),o.options.onTick&&o.options.onTick()}},this.channels.length===0)throw"at least 1 channel is required";this.resolver=this.options.resolver||new NewInstanceResolver,this.eventStreamUri=combinePaths(a,"event-stream")+"?",this.updateChannels(s),this.serviceClient=new JsonServiceClient(a),this.listeners={},this.withCredentials=!0,this.options.handlers||(this.options.handlers={})}return n.prototype.getEventSourceOptions=function(){return{withCredentials:this.withCredentials}},n.prototype.reconnectServerEvents=function(a){var s=this;if(a===void 0&&(a={}),!this.stopped){a.error&&this.onError(a.error);var t=this.eventSource,e=a.url||this.eventStreamUri||t.url;this.options.resolveStreamUrl!=null&&(e=this.options.resolveStreamUrl(e));var o=this.EventSource?new this.EventSource(e,this.getEventSourceOptions()):new EventSource(e,this.getEventSourceOptions());o.addEventListener("error",function(l){return(a.onerror||t.onerror||s.onError)(l)}),o.addEventListener("message",a.onmessage||t.onmessage||this.onMessage);var c=this.options.onReconnect;return c!=null&&c.call(o,a.error),t.removeEventListener&&(t.removeEventListener("error",this.onError),t.removeEventListener("message",this.onMessage)),t.close(),this.eventSource=o}},n.prototype.start=function(){var a=this;if(this.stopped=!1,this.eventSource==null||this.eventSource.readyState===EventSource.CLOSED){var s=this.eventStreamUri;this.options.resolveStreamUrl!=null&&(s=this.options.resolveStreamUrl(s)),this.eventSource=this.EventSource?new this.EventSource(s,this.getEventSourceOptions()):new EventSource(s,this.getEventSourceOptions()),this.eventSource.addEventListener("error",this.onError),this.eventSource.addEventListener("message",function(t){return a.onMessage(t)})}return this},n.prototype.stop=function(){this.stopped=!0,this.eventSource&&this.eventSource.close();var a=this.options;a&&a.heartbeat&&clearInterval(a.heartbeat);var s=this.connectionInfo;return s==null||s.unRegisterUrl==null?new Promise(function(t,e){return t()}):(this.connectionInfo=null,fetch(new Request(s.unRegisterUrl,{method:"POST",mode:"cors",credentials:this.serviceClient.credentials})).then(function(t){if(!t.ok)throw new Error(t.status+" - "+t.statusText)}).catch(this.onError))},n.prototype.invokeReceiver=function(a,s,t,e,o){if(a)if(typeof a=="function"&&(a=this.resolver.tryResolve(a)),s=s.replace("-",""),a.client=this,a.request=e,typeof a[s]=="function")a[s].call(t||a,e.body,e);else if(s in a)a[s]=e.body;else{var c=Object.getOwnPropertyDescriptor(a,s);if(c!=null){c.set?c.set(e.body):c.writable&&(a[s]=e.body);return}var l=s.toLowerCase();for(var u in a)if(u.toLowerCase()==l){typeof a[u]=="function"?a[u].call(t||a,e.body,e):a[u]=e.body;return}var i=a.noSuchMethod;typeof i=="function"&&i.call(t||a,e.target,e)}},n.prototype.hasConnected=function(){return this.connectionInfo!=null},n.prototype.registerHandler=function(a,s){return this.options.handlers||(this.options.handlers={}),this.options.handlers[a]=s,this},n.prototype.setResolver=function(a){return this.options.resolver=a,this},n.prototype.registerReceiver=function(a){return this.registerNamedReceiver("cmd",a)},n.prototype.registerNamedReceiver=function(a,s){return this.options.receivers||(this.options.receivers={}),this.options.receivers[a]=s,this},n.prototype.unregisterReceiver=function(a){return a===void 0&&(a="cmd"),this.options.receivers&&delete this.options.receivers[a],this},n.prototype.updateChannels=function(a){this.channels=a;var s=this.eventSource!=null?this.eventSource.url:this.eventStreamUri;this.eventStreamUri=s.substring(0,Math.min(s.indexOf("?"),s.length))+"?channels="+a.join(",")+"&t="+new Date().getTime()},n.prototype.update=function(a,s){var t=typeof a=="string"?a.split(","):a,e=typeof s=="string"?s.split(","):s,o=[];for(var c in this.channels){var l=this.channels[c];(e==null||e.indexOf(l)===-1)&&o.push(l)}if(t)for(var c in t){var l=t[c];o.indexOf(l)===-1&&o.push(l)}this.updateChannels(o)},n.prototype.addListener=function(a,s){var t=this.listeners[a]||(this.listeners[a]=[]);return t.push(s),this},n.prototype.removeListener=function(a,s){var t=this.listeners[a];if(t){var e=t.indexOf(s);e>=0&&t.splice(e,1)}return this},n.prototype.raiseEvent=function(a,s){var t=this,e=this.listeners[a];e&&e.forEach(function(o){try{o(s)}catch(c){t.onError(c)}})},n.prototype.getConnectionInfo=function(){if(this.connectionInfo==null)throw"Not Connected";return this.connectionInfo},n.prototype.getSubscriptionId=function(){return this.getConnectionInfo().id},n.prototype.updateSubscriber=function(a){var s=this;return a.id==null&&(a.id=this.getSubscriptionId()),this.serviceClient.post(a).then(function(t){s.update(a.subscribeChannels,a.unsubscribeChannels)}).catch(this.onError)},n.prototype.subscribeToChannels=function(){for(var a=this,s=[],t=0;t<arguments.length;t++)s[t]=arguments[t];var e=new UpdateEventSubscriber;return e.id=this.getSubscriptionId(),e.subscribeChannels=s,this.serviceClient.post(e).then(function(o){a.update(s,null)}).catch(this.onError)},n.prototype.unsubscribeFromChannels=function(){for(var a=this,s=[],t=0;t<arguments.length;t++)s[t]=arguments[t];var e=new UpdateEventSubscriber;return e.id=this.getSubscriptionId(),e.unsubscribeChannels=s,this.serviceClient.post(e).then(function(o){a.update(null,s)}).catch(this.onError)},n.prototype.getChannelSubscribers=function(){var a=this,s=new GetEventSubscribers;return s.channels=this.channels,this.serviceClient.get(s).then(function(t){return t.map(function(e){return a.toServerEventUser(e)})}).catch(function(t){return a.onError(t),[]})},n.prototype.toServerEventUser=function(a){var s=a.channels,t=new ServerEventUser;t.userId=a.userId,t.displayName=a.displayName,t.profileUrl=a.profileUrl,t.channels=s?s.split(","):null;for(var e in a)e=="userId"||e=="displayName"||e=="profileUrl"||e=="channels"||(t.meta==null&&(t.meta={}),t.meta[e]=a[e]);return t},n.UnknownChannel="*",n}();exports.ServerEventsClient=ServerEventsClient;var ServerEventReceiver=function(){function n(){}return n.prototype.noSuchMethod=function(a,s){},n}();exports.ServerEventReceiver=ServerEventReceiver;var UpdateEventSubscriber=function(){function n(){}return n.prototype.createResponse=function(){return new UpdateEventSubscriberResponse},n.prototype.getTypeName=function(){return"UpdateEventSubscriber"},n}();exports.UpdateEventSubscriber=UpdateEventSubscriber;var UpdateEventSubscriberResponse=function(){function n(){}return n}();exports.UpdateEventSubscriberResponse=UpdateEventSubscriberResponse;var GetEventSubscribers=function(){function n(){}return n.prototype.createResponse=function(){return[]},n.prototype.getTypeName=function(){return"GetEventSubscribers"},n}();exports.GetEventSubscribers=GetEventSubscribers;var ServerEventUser=function(){function n(){}return n}();exports.ServerEventUser=ServerEventUser;var HttpMethods=function(){function n(){}return n.Get="GET",n.Post="POST",n.Put="PUT",n.Delete="DELETE",n.Patch="PATCH",n.Head="HEAD",n.Options="OPTIONS",n.hasRequestBody=function(a){return!(a==="GET"||a==="DELETE"||a==="HEAD"||a==="OPTIONS")},n}();exports.HttpMethods=HttpMethods;var GetAccessToken=function(){function n(a){Object.assign(this,a)}return n.prototype.createResponse=function(){return new GetAccessTokenResponse},n.prototype.getTypeName=function(){return"GetAccessToken"},n}(),GetAccessTokenResponse=function(){function n(){}return n}();exports.GetAccessTokenResponse=GetAccessTokenResponse;var JsonServiceClient=function(){function n(a){a===void 0&&(a="/"),this.baseUrl=a,this.replyBaseUrl=combinePaths(a,"json","reply")+"/",this.oneWayBaseUrl=combinePaths(a,"json","oneway")+"/",this.mode="cors",this.credentials="include",this.headers=new Headers,this.headers.set("Content-Type","application/json"),this.manageCookies=typeof document=="undefined",this.cookies={}}return n.prototype.setCredentials=function(a,s){this.userName=a,this.password=s},n.prototype.setBearerToken=function(a){this.bearerToken=a},n.prototype.get=function(a,s){return typeof a!="string"?this.send(HttpMethods.Get,a,s):this.send(HttpMethods.Get,null,s,this.toAbsoluteUrl(a))},n.prototype.delete=function(a,s){return typeof a!="string"?this.send(HttpMethods.Delete,a,s):this.send(HttpMethods.Delete,null,s,this.toAbsoluteUrl(a))},n.prototype.post=function(a,s){return this.send(HttpMethods.Post,a,s)},n.prototype.postToUrl=function(a,s,t){return this.send(HttpMethods.Post,s,t,this.toAbsoluteUrl(a))},n.prototype.postBody=function(a,s,t){return this.sendBody(HttpMethods.Post,a,s,t)},n.prototype.put=function(a,s){return this.send(HttpMethods.Put,a,s)},n.prototype.putToUrl=function(a,s,t){return this.send(HttpMethods.Put,s,t,this.toAbsoluteUrl(a))},n.prototype.putBody=function(a,s,t){return this.sendBody(HttpMethods.Put,a,s,t)},n.prototype.patch=function(a,s){return this.send(HttpMethods.Patch,a,s)},n.prototype.patchToUrl=function(a,s,t){return this.send(HttpMethods.Patch,s,t,this.toAbsoluteUrl(a))},n.prototype.patchBody=function(a,s,t){return this.sendBody(HttpMethods.Patch,a,s,t)},n.prototype.publish=function(a,s){return this.sendOneWay(a,s)},n.prototype.sendOneWay=function(a,s){var t=combinePaths(this.oneWayBaseUrl,nameOf(a));return this.send(HttpMethods.Post,a,null,t)},n.prototype.sendAll=function(a){if(a.length==0)return Promise.resolve([]);var s=combinePaths(this.replyBaseUrl,nameOf(a[0])+"[]");return this.send(HttpMethods.Post,a,null,s)},n.prototype.sendAllOneWay=function(a){if(a.length==0)return Promise.resolve(void 0);var s=combinePaths(this.oneWayBaseUrl,nameOf(a[0])+"[]");return this.send(HttpMethods.Post,a,null,s).then(function(t){})},n.prototype.createUrlFromDto=function(a,s){var t=combinePaths(this.replyBaseUrl,nameOf(s)),e=HttpMethods.hasRequestBody(a);return e||(t=appendQueryString(t,s)),t},n.prototype.toAbsoluteUrl=function(a){return a.startsWith("http://")||a.startsWith("https://")?a:combinePaths(this.baseUrl,a)},n.prototype.deleteCookie=function(a){this.manageCookies?delete this.cookies[a]:document&&(document.cookie=a+"=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/")},n.prototype.createRequest=function(a){var s=this,t=a.method,e=a.request,o=a.url,c=a.args,l=a.body;if(o||(o=this.createUrlFromDto(t,e)),c&&(o=appendQueryString(o,c)),this.bearerToken!=null?this.headers.set("Authorization","Bearer "+this.bearerToken):this.userName!=null&&this.headers.set("Authorization","Basic "+n.toBase64(this.userName+":"+this.password)),this.manageCookies){var u=Object.keys(this.cookies).map(function(m){var b=s.cookies[m];return b.expires&&b.expires<new Date?null:b.name+"="+encodeURIComponent(b.value)}).filter(function(m){return!!m});u.length>0?this.headers.set("Cookie",u.join("; ")):this.headers.delete("Cookie")}var i=new Headers(this.headers),k=HttpMethods.hasRequestBody(t),d={url:o,method:t,mode:this.mode,credentials:this.credentials,headers:i,compress:!1};return k&&(d.body=l||JSON.stringify(e),isFormData(l)&&i.delete("Content-Type")),this.requestFilter!=null&&this.requestFilter(d),d},n.prototype.json=function(a){return this.parseJson?this.parseJson(a):a.json()},n.prototype.createResponse=function(a,s){var t=this;if(!a.ok)throw a;if(this.manageCookies){var e=[];a.headers.forEach(function(i,k){switch(k.toLowerCase()){case"set-cookie":var d=i.split(",");d.forEach(function(m){return e.push(m)});break}}),e.forEach(function(i){var k=parseCookie(i);k&&(t.cookies[k.name]=k)})}a.headers.forEach(function(i,k){switch(k.toLowerCase()){case"x-cookies":i.split(",").indexOf("ss-reftok")>=0&&(t.useTokenCookie=!0);break}}),this.responseFilter!=null&&this.responseFilter(a);var o=s&&typeof s!="string"&&typeof s.createResponse=="function"?s.createResponse():null;if(typeof o=="string")return a.text().then(function(i){return i});var c=a.headers.get("content-type"),l=c&&c.indexOf("application/json")!==-1;if(l)return this.json(a).then(function(i){return i});if(typeof Uint8Array!="undefined"&&o instanceof Uint8Array){if(typeof a.arrayBuffer!="function")throw new Error("This fetch polyfill does not implement 'arrayBuffer'");return a.arrayBuffer().then(function(i){return new Uint8Array(i)})}else if(typeof Blob=="function"&&o instanceof Blob){if(typeof a.blob!="function")throw new Error("This fetch polyfill does not implement 'blob'");return a.blob().then(function(i){return i})}var u=a.headers.get("content-length");return u==="0"||u==null&&!l?o:this.json(a).then(function(i){return i})},n.prototype.handleError=function(a,s,t){var e=this;if(t===void 0&&(t=null),s instanceof Error)throw this.raiseError(a,s);if(s.bodyUsed)throw this.raiseError(s,createErrorResponse(s.status,s.statusText,t));var o=typeof s.json=="undefined"&&s.responseStatus;return o?new Promise(function(c,l){return l(e.raiseError(null,s))}):this.json(s).then(function(c){var l=sanitize(c);throw l.responseStatus?(t!=null&&(l.type=t),l):createErrorResponse(s.status,s.statusText,t)}).catch(function(c){throw c instanceof Error||typeof window!="undefined"&&c instanceof window.DOMException?e.raiseError(s,createErrorResponse(s.status,s.statusText,t)):e.raiseError(s,c)})},n.prototype.send=function(a,s,t,e){return this.sendRequest({method:a,request:s,args:t,url:e})},n.prototype.sendBody=function(a,s,t,e){var o=combinePaths(this.replyBaseUrl,nameOf(s));return this.sendRequest({method:a,request:t,body:typeof t=="string"||isFormData(t)?t:JSON.stringify(t),url:appendQueryString(o,s),args:e,returns:s})},n.prototype.sendRequest=function(a){var s=this,t=this.createRequest(a),e=a.returns||a.request,o=null,c=function(){var l=s.createRequest(a);return s.urlFilter&&s.urlFilter(l.url),fetch(l.url,l).then(function(u){return s.createResponse(u,e)}).catch(function(u){return s.handleError(o,u)})};return this.urlFilter&&this.urlFilter(t.url),fetch(t.url,t).then(function(l){o=l;var u=s.createResponse(l,e);return u}).catch(function(l){if(l.status===401){if(s.refreshToken||s.useTokenCookie||s.cookies["ss-reftok"]!=null){var u=new GetAccessToken({refreshToken:s.refreshToken,useTokenCookie:!!s.useTokenCookie}),i=s.refreshTokenUri||s.createUrlFromDto(HttpMethods.Post,u);s.useTokenCookie&&(s.bearerToken=null,s.headers.delete("Authorization"));var k=s.createRequest({method:HttpMethods.Post,request:u,args:null,url:i});return fetch(i,k).then(function(d){return s.createResponse(d,u).then(function(m){return s.bearerToken=m.accessToken||null,c()})}).catch(function(d){return s.onAuthenticationRequired?s.onAuthenticationRequired().then(c).catch(function(m){return s.handleError(o,m,"RefreshTokenException")}):s.handleError(o,d,"RefreshTokenException")})}else if(s.onAuthenticationRequired)return s.onAuthenticationRequired().then(c)}return s.handleError(o,l)})},n.prototype.raiseError=function(a,s){return this.exceptionFilter!=null&&this.exceptionFilter(a,s),s},n}();exports.JsonServiceClient=JsonServiceClient;function isFormData(n){return typeof window!="undefined"&&n instanceof FormData}exports.isFormData=isFormData;function createErrorResponse(n,a,s){s===void 0&&(s=null);var t=new ErrorResponse;return s!=null&&(t.type=s),t.responseStatus=new ResponseStatus,t.responseStatus.errorCode=n&&n.toString(),t.responseStatus.message=a,t}function toCamelCase(n){return n&&n.charAt(0).toLowerCase()+n.substring(1)}exports.toCamelCase=toCamelCase;function toPascalCase(n){return n&&n.charAt(0).toUpperCase()+n.substring(1)}exports.toPascalCase=toPascalCase;function sanitize(n){if(n.responseStatus||n.errors)return n;var a={};for(var s in n)n.hasOwnProperty(s)&&(n[s]instanceof Object?a[toCamelCase(s)]=sanitize(n[s]):a[toCamelCase(s)]=n[s]);if(a.errors=[],n.Errors!=null)for(var t=0,e=n.Errors.length;t<e;t++){var o=n.Errors[t],c={};for(var s in o)c[toCamelCase(s)]=o[s];a.errors.push(c)}return a}exports.sanitize=sanitize;function nameOf(n){if(!n)return"null";if(typeof n.getTypeName=="function")return n.getTypeName();var a=n&&n.constructor;if(a==null)throw n+" doesn't have constructor";if(a.name)return a.name;var s=a.toString();return s.substring(9,s.indexOf("("))}exports.nameOf=nameOf;function css(n,a,s){for(var t=typeof n=="string"?document.querySelectorAll(n):n,e=0;e<t.length;e++){var o=t[e];o!=null&&o.style!=null&&(o.style[a]=s)}}exports.css=css;function splitOnFirst(n,a){if(!n)return[n];var s=n.indexOf(a);return s>=0?[n.substring(0,s),n.substring(s+1)]:[n]}exports.splitOnFirst=splitOnFirst;function splitOnLast(n,a){if(!n)return[n];var s=n.lastIndexOf(a);return s>=0?[n.substring(0,s),n.substring(s+1)]:[n]}exports.splitOnLast=splitOnLast;function leftPart(n,a){if(n==null)return null;var s=n.indexOf(a);return s==-1?n:n.substring(0,s)}exports.leftPart=leftPart;function rightPart(n,a){if(n==null)return null;var s=n.indexOf(a);return s==-1?n:n.substring(s+a.length)}exports.rightPart=rightPart;function lastLeftPart(n,a){if(n==null)return null;var s=n.lastIndexOf(a);return s==-1?n:n.substring(0,s)}exports.lastLeftPart=lastLeftPart;function lastRightPart(n,a){if(n==null)return null;var s=n.lastIndexOf(a);return s==-1?n:n.substring(s+a.length)}exports.lastRightPart=lastRightPart;function chop(n,a){return a===void 0&&(a=1),a=Math.abs(a),n&&(a<n.length?n.substring(0,n.length-a):"")}exports.chop=chop;function onlyProps(n,a){var s={};return a.forEach(function(t){return s[t]=n[t]}),s}exports.onlyProps=onlyProps;function splitCase(n){return typeof n!="string"?n:n.replace(/([A-Z]|[0-9]+)/g," $1").replace(/_/g," ").trim()}function humanize(n){return!n||n.indexOf(" ")>=0?n:splitCase(n)}exports.humanize=humanize;function queryString(n){if(!n||n.indexOf("?")===-1)return{};for(var a=splitOnFirst(n,"?")[1].split("&"),s={},t=0;t<a.length;++t){var e=a[t].split("=");s[e[0]]=e.length>1?decodeURIComponent(e[1].replace(/\+/g," ")):null}return s}exports.queryString=queryString;function combinePaths(){for(var n=[],a=0;a<arguments.length;a++)n[a]=arguments[a];var s=[],t,e;for(t=0,e=n.length;t<e;t++){var o=n[t];s=o.indexOf("://")===-1?s.concat(o.split("/")):s.concat(o.lastIndexOf("/")===o.length-1?o.substring(0,o.length-1):o)}var c=[];for(t=0,e=s.length;t<e;t++){var l=s[t];!l||l==="."||(l===".."?c.pop():c.push(l))}return s[0]===""&&c.unshift(""),c.join("/")||(c.length?"/":".")}exports.combinePaths=combinePaths;function createPath(n,a){var s={};for(var t in a)s[t.toLowerCase()]=t;for(var e=n.split("/"),o="",c=0;c<e.length;c++){var l=e[c];if(l==null&&(l=""),l[0]==="{"&&l[l.length-1]==="}"){var u=s[l.substring(1,l.length-1).toLowerCase()];u&&(l=a[u],delete a[u])}o.length>0&&(o+="/"),o+=l}return o}exports.createPath=createPath;function createUrl(n,a){var s=createPath(n,a);return appendQueryString(s,a)}exports.createUrl=createUrl;function appendQueryString(n,a){for(var s in a)a.hasOwnProperty(s)&&(n+=n.indexOf("?")>=0?"&":"?",n+=s+"="+qsValue(a[s]));return n}exports.appendQueryString=appendQueryString;function qsValue(n){return n==null?"":typeof Uint8Array!="undefined"&&n instanceof Uint8Array?bytesToBase64(n):encodeURIComponent(n)||""}function bytesToBase64(n){for(var a=(3-n.length%3)%3,s="",t=void 0,e=n.length,o=0,c=0;c<e;c++)t=c%3,o|=n[c]<<(16>>>t&24),(t===2||n.length-c==1)&&(s+=String.fromCharCode(uint6ToB64(o>>>18&63),uint6ToB64(o>>>12&63),uint6ToB64(o>>>6&63),uint6ToB64(o&63)),o=0);return a===0?s:s.substring(0,s.length-a)+(a===1?"=":"==")}exports.bytesToBase64=bytesToBase64;function uint6ToB64(n){return n<26?n+65:n<52?n+71:n<62?n-4:n===62?43:n===63?47:65}function _btoa(n){return typeof btoa=="function"?btoa(n):Buffer.from(n).toString("base64")}function _atob(n){return typeof atob=="function"?atob(n):Buffer.from(n,"base64").toString()}JsonServiceClient.toBase64=function(n){return _btoa(encodeURIComponent(n).replace(/%([0-9A-F]{2})/g,function(a,s){return String.fromCharCode(new Number("0x"+s).valueOf())}))};function stripQuotes(n){return n&&n[0]=='"'&&n[n.length]=='"'?n.slice(1,-1):n}exports.stripQuotes=stripQuotes;function tryDecode(n){try{return decodeURIComponent(n)}catch{return n}}exports.tryDecode=tryDecode;function parseCookie(n){if(!n)return null;for(var a=null,s=n.split(/; */),t=0;t<s.length;t++){var e=s[t],o=splitOnFirst(e,"="),c=o[0].trim(),l=o.length>1?tryDecode(stripQuotes(o[1].trim())):null;if(t==0)a={name:c,value:l,path:"/"};else{var u=c.toLowerCase();u=="httponly"?a.httpOnly=!0:u=="secure"?a.secure=!0:u=="expires"?(a.expires=new Date(l),a.expires.toString()==="Invalid Date"&&(a.expires=new Date(l.replace(/-/g," ")))):a[c]=l}}return a}exports.parseCookie=parseCookie;function normalizeKey(n){return n.toLowerCase().replace(/_/g,"")}exports.normalizeKey=normalizeKey;function isArray(n){return Object.prototype.toString.call(n)==="[object Array]"}function normalize(n,a){if(isArray(n)){if(!a)return n;for(var s=[],t=0;t<n.length;t++)s[t]=normalize(n[t],a);return s}if(typeof n!="object")return n;var e={};for(var o in n)e[normalizeKey(o)]=a?normalize(n[o],a):n[o];return e}exports.normalize=normalize;function getField(n,a){return n==null||a==null?null:n[a]||n[Object.keys(n).filter(function(s){return normalizeKey(s)===normalizeKey(a)})[0]||""]}exports.getField=getField;function parseResponseStatus(n,a){a===void 0&&(a=null);try{var s=JSON.parse(n);return sanitize(s.ResponseStatus||s.responseStatus)}catch(t){return{message:a||t.message||t,__error:{error:t,json:n}}}}exports.parseResponseStatus=parseResponseStatus;function toFormData(n){if(typeof window!="undefined"){var a=new FormData;for(var s in n)a.append(s,n[s]);return a}}exports.toFormData=toFormData;function toObject(n){var a=this,s={};if(!n)return s;if(typeof n!="object")throw new Error("keys must be an Array of object keys");var t=Array.prototype.slice.call(n);return t.forEach(function(e){a[e]&&(s[e]=a[e])}),s}exports.toObject=toObject;function errorResponseSummary(){var n=this.responseStatus||this.ResponseStatus;if(n!=null){var a=n.ErrorCode?sanitize(n):n;return!a.errors||a.errors.length==0?a.message||a.errorCode:void 0}}exports.errorResponseSummary=errorResponseSummary;function errorResponseExcept(n){var a=this.responseStatus||this.ResponseStatus;if(a!=null){var s=a.ErrorCode?sanitize(a):a,t=toVarNames(n);if(t&&!(s.errors==null||s.errors.length==0)){for(var e=t.map(function(k){return(k||"").toLowerCase()}),o=0,c=s.errors;o<c.length;o++){var l=c[o];if(e.indexOf((l.fieldName||"").toLowerCase())!==-1)return}for(var u=0,i=s.errors;u<i.length;u++){var l=i[u];if(e.indexOf((l.fieldName||"").toLowerCase())===-1)return l.message||l.errorCode}}return s.message||s.errorCode||void 0}}exports.errorResponseExcept=errorResponseExcept;function errorResponse(n){if(n==null)return errorResponseSummary.call(this);var a=this.responseStatus||this.ResponseStatus;if(a!=null){var s=a.ErrorCode?sanitize(a):a;if(!(s.errors==null||s.errors.length==0)){var t=s.errors.find(function(e){return(e.fieldName||"").toLowerCase()==n.toLowerCase()});return t?t.message||t.errorCode:void 0}}}exports.errorResponse=errorResponse;function toDate(n){return n?typeof n.getMonth=="function"?n:n[0]=="/"?new Date(parseFloat(/Date\(([^)]+)\)/.exec(n)[1])):new Date(n):null}exports.toDate=toDate;function toDateFmt(n){return dateFmt(toDate(n))}exports.toDateFmt=toDateFmt;function padInt(n){return n<10?"0"+n:n}exports.padInt=padInt;function dateFmt(n){return n===void 0&&(n=new Date),n.getFullYear()+"/"+padInt(n.getMonth()+1)+"/"+padInt(n.getDate())}exports.dateFmt=dateFmt;function dateFmtHM(n){return n===void 0&&(n=new Date),n.getFullYear()+"/"+padInt(n.getMonth()+1)+"/"+padInt(n.getDate())+" "+padInt(n.getHours())+":"+padInt(n.getMinutes())}exports.dateFmtHM=dateFmtHM;function timeFmt12(n){return n===void 0&&(n=new Date),padInt((n.getHours()+24)%12||12)+":"+padInt(n.getMinutes())+":"+padInt(n.getSeconds())+" "+(n.getHours()>12?"PM":"AM")}exports.timeFmt12=timeFmt12;function toLocalISOString(n){return n===void 0&&(n=new Date),n.getFullYear()+"-"+padInt(n.getMonth()+1)+"-"+padInt(n.getDate())+"T"+padInt(n.getHours())+":"+padInt(n.getMinutes())+":"+padInt(n.getSeconds())}exports.toLocalISOString=toLocalISOString;function bsAlert(n){return'<div class="alert alert-danger">'+n+"</div>"}function attr(n,a){return n.getAttribute(a)}function sattr(n,a,s){return n.setAttribute(a,s)}function rattr(n,a){return n.removeAttribute(a)}function createElement(n,a,s){var t={className:"class",htmlFor:"for"},e=document.createElement(n);if(s)for(var o in s)sattr(e,t[o]||o,s[o]);return a&&a.insertAfter&&a.insertAfter.parentNode.insertBefore(e,a.insertAfter.nextSibling),e}exports.createElement=createElement;function showInvalidInputs(){var n=attr(this,"data-invalid");if(n){var a=this.type==="checkbox"||this.type==="radio"||hasClass(this,"form-check"),s=a?parent(this,"form-check"):null;a?addClass(s||this.parentElement,"is-invalid form-control"):addClass(this,"is-invalid");var t=this.nextElementSibling,e=t&&(attr(t,"for")===this.id||t.tagName==="SMALL")?a?s||t.parentElement:t:this,o=e!=null&&e.nextElementSibling&&hasClass(e.nextElementSibling,"invalid-feedback")?e.nextElementSibling:createElement("div",{insertAfter:e},{className:"invalid-feedback"});o.innerHTML=n}}function parent(n,a){for(;n!=null&&!hasClass(n,a);)n=n.parentElement;return n}function hasClass(n,a){return n?n.classList?n.classList.contains(a):(" "+n.className+" ").replace(/[\n\t\r]/g," ").indexOf(" "+a+" ")>-1:!1}function addClass(n,a){var s;return n?n.classList?(s=n.classList).add.apply(s,a.split(" ")):hasClass(n,a)?null:n.className=(n.className+" "+a).trim():null}function remClass(n,a){return n?n.classList?n.classList.remove(a):hasClass(n,a)?n.className=n.className.replace(/(\s|^)someclass(\s|$)/," "):null:null}function bootstrap(n){for(var a=(n||document).querySelectorAll("[data-invalid]"),s=0;s<a.length;s++)showInvalidInputs.call(a[s])}exports.bootstrap=bootstrap,typeof window!="undefined"&&window.Element!==void 0&&(Element.prototype.matches||(Element.prototype.matches=Element.prototype.msMatchesSelector||Element.prototype.webkitMatchesSelector),Element.prototype.closest||(Element.prototype.closest=function(n){var a=this;do{if(a.matches(n))return a;a=a.parentElement||a.parentNode}while(a!==null&&a.nodeType===1);return null}));function handleEvent(n,a,s){a===void 0&&(a=document),a.addEventListener(s,function(t){var e="data-"+s,o=t.target,c=attr(o,e);if(!c){var l=o.closest("["+e+"]");l&&(c=attr(l,e),o=l)}if(!!c){var u=c.indexOf(":");if(u>=0){var i=c.substring(0,u),k=c.substring(u+1),d=n[i];d&&d.apply(o,k.split(","))}else{var d=n[c];d&&d.apply(o,[].slice.call(arguments))}}})}function bindHandlers(n,a,s){a===void 0&&(a=document),s===void 0&&(s=null),s&&s.events?s.events.forEach(function(t){return handleEvent(n,a,t)}):["click","dblclick","change","focus","blur","focusin","focusout","select","keydown","keypress","keyup","hover","toggle","input"].forEach(function(t){a.querySelector("[data-"+t+"]")&&handleEvent(n,a,t)})}exports.bindHandlers=bindHandlers;function bootstrapForm(n,a){!n||(a.model&&populateForm(n,a.model),n.onsubmit=function(s){return s.preventDefault(),a.type="bootstrap-v4",ajaxSubmit(n,a)})}exports.bootstrapForm=bootstrapForm;function applyErrors(n,a,s){var t={overrideMessages:!1,messages:{NotEmpty:"Required",NotNull:"Required",Email:"Invalid email",AlreadyExists:"Already exists"},errorFilter:function(q,F,L){return this.overrideMessages?this.messages[F]||q||splitCase(F):q||splitCase(F)}};if(clearErrors(n),!!a){a=sanitize(a),addClass(n,"has-errors");var e=s&&s.type==="bootstrap-v4",o=__assign(__assign({},t),s);s.messages&&(o.overrideMessages=!0);var c=o.errorFilter.bind(o),l=a.errors,u=n.querySelectorAll.bind(n);if(l&&l.length){var i={},k={};u("input,textarea,select,button").forEach(function(q){var F=q,L=F.previousElementSibling,D=F.nextElementSibling,Y=F.type==="radio"||F.type==="checkbox",J=(Y?null:F.id)||attr(F,"name");if(!!J){var z=J.toLowerCase();i[z]=F,e||(hasClass(L,"help-inline")||hasClass(L,"help-block")?k[z]=L:(hasClass(D,"help-inline")||hasClass(D,"help-block"))&&(k[z]=D))}}),u(".help-inline[data-for],.help-block[data-for]").forEach(function(q){var F=attr(q,"data-for").toLowerCase();k[F]=q});for(var d=0,m=l;d<m.length;d++){var b=m[d],C=(b.fieldName||"").toLowerCase(),O=i[C];if(O)if(!e)addClass(O,"error"),addClass(O.parentElement,"has-error");else{var f=attr(O,"type"),y=f==="radio"||f==="checkbox";y||addClass(O,"is-invalid"),sattr(O,"data-invalid",c(b.message,b.errorCode,"field"))}var S=k[C];!S||(addClass(S,"error"),S.innerHTML=c(b.message,b.errorCode,"field"),S.style.display="block")}u("[data-validation-summary]").forEach(function(q){var F=attr(q,"data-validation-summary").split(","),L=errorResponseExcept.call(a,F);L&&(q.innerHTML=bsAlert(L))})}else{var N=c(a.message||splitCase(a.errorCode),a.errorCode,"summary");e?u("[data-validation-summary]").forEach(function(q){return q.innerHTML=N[0]==="<"?N:bsAlert(N)}):u(".error-summary").forEach(function(q){q.innerHTML=N,q.style.display="block"})}return n}}function clearErrors(n){remClass(n,"has-errors");var a=n.querySelectorAll.bind(n);a(".error-summary").forEach(function(s){s.innerHTML="",s.style.display="none"}),a("[data-validation-summary]").forEach(function(s){s.innerHTML=""}),a(".error").forEach(function(s){return remClass(s,"error")}),a(".form-check.is-invalid [data-invalid]").forEach(function(s){rattr(s,"data-invalid")}),a(".form-check.is-invalid").forEach(function(s){return remClass(s,"form-control")}),a(".is-invalid").forEach(function(s){remClass(s,"is-invalid"),rattr(s,"data-invalid")}),a(".is-valid").forEach(function(s){return remClass(s,"is-valid")})}var Types;(function(n){n.MultiPart="multipart/form-data",n.UrlEncoded="application/x-www-form-urlencoded",n.Json="application/json"})(Types||(Types={}));function toVarNames(n){return n?isArray(n)?n:n.split(",").map(function(a){return a.trim()}):[]}exports.toVarNames=toVarNames;function formSubmit(n){n===void 0&&(n={});var a=this,s=attr(a,"enctype")||Types.UrlEncoded;if(s==Types.MultiPart&&window.FormData===void 0)throw new Error("FormData Type is needed to send '"+Types.MultiPart+"' Content Types");var t;try{t=serializeForm(a,s)}catch(c){throw new Error(""+(c.message||c))}var e=new Headers;e.set("Accept",Types.Json),e.set("Content-Type",s);var o={method:attr(a,"method")||"POST",credentials:"include",mode:"cors",headers:e,body:t};return n.requestFilter&&n.requestFilter(o),fetch(new Request(n.url||attr(a,"action"),o)).catch(function(c){throw new Error("Network is unreachable ("+(c.message||c)+")")}).then(function(c){return n.responseFilter&&n.responseFilter(c),c.ok?(handleHeaderBehaviors(a,c),fromResponse(c)):c.json().catch(function(l){throw new Error("The request failed with "+(c.statusText||c.status))}).then(function(l){throw Object.assign(new ErrorResponse,sanitize(l))})})}exports.formSubmit=formSubmit;function handleHeaderBehaviors(n,a){var s=a.headers.get("X-Location");s&&(location.href=s);var t=a.headers.get("X-Trigger");if(t){var e=t.indexOf(":"),o=e>=0?t.substring(0,e):t,c=e>=0?t.substring(e+1):null;triggerEvent(n,o,c?[c]:[])}}function ajaxSubmit(n,a){a===void 0&&(a={});var s=a.type,t=s==="bootstrap-v4";clearErrors(n);try{if(a.validate&&a.validate.call(n)===!1)return!1}catch{return!1}var e=n.querySelectorAll.bind(n);addClass(n,"loading");var o=a.onSubmitDisable==null?"[type=submit]":a.onSubmitDisable,c=o!=null&&o!="";c&&e(o).forEach(function(i){sattr(i,"disabled","disabled")});function l(i,k){if(k===void 0&&(k=null),k)applyErrors(n,k.ResponseStatus||k.responseStatus,__assign({},a));else if(i){addClass(n,"has-errors");var d=e(".error-summary")[0];if(d&&(d.innerHTML=i),t){var m=e("[data-validation-summary]")[0];m&&(m.innerHTML=bsAlert(i))}}a.error&&a.error.call(n,k),t&&e("[data-invalid]").forEach(function(b){return showInvalidInputs.call(b)})}var u=a.submit||formSubmit;return u.call(n,a).then(function(i){return a.success&&a.success.call(n,i),!1}).catch(function(i){i.responseStatus?l(null,i):l(""+(i.message||i),null)}).finally(function(){remClass(n,"loading"),c&&e(o).forEach(function(i){rattr(i,"disabled")}),a.complete&&a.complete.call(n)})}exports.ajaxSubmit=ajaxSubmit;function fromResponse(n){var a=n.headers.get("content-type"),s=a&&a.indexOf(Types.Json)!==-1;if(s)return n.json();var t=n.headers.get("content-length");return t==="0"||t==null&&!s?null:n.json()}function serializeForm(n,a){return a===void 0&&(a=null),a===Types.MultiPart?new FormData(n):a==Types.Json?JSON.stringify(serializeToObject(n)):serializeToUrlEncoded(n)}exports.serializeForm=serializeForm;function formEntries(n,a,s){for(var t,e=n,o=e.elements.length,c=0;c<o;c++)if(t=e.elements[c],t.name&&!t.disabled&&t.type!="file"&&t.type!="reset"&&t.type!="submit"&&t.type!="button")if(t.type=="select-multiple")for(var l=e.elements[c].options.length-1;l>=0;l--)t.options[l].selected&&s(a,t.name,t.options[l].value);else(t.type!="checkbox"&&t.type!="radio"||t.checked)&&s(a,t.name,t.value);return a}function serializeToObject(n){return formEntries(n,{},function(a,s,t){return a[s]=t})}exports.serializeToObject=serializeToObject;function serializeToUrlEncoded(n){var a=formEntries(n,[],function(s,t,e){return typeof e=="string"?s.push(encodeURIComponent(t)+"="+encodeURIComponent(e)):null});return a.join("&").replace(/%20/g,"+")}exports.serializeToUrlEncoded=serializeToUrlEncoded;function serializeToFormData(n){return formEntries(n,new FormData,function(a,s,t){return a.append(s,t)})}exports.serializeToFormData=serializeToFormData;function triggerEvent(n,a,s){if(s===void 0&&(s=null),document.createEvent){var t=document.createEvent(a=="click"||a.startsWith("mouse")?"MouseEvents":"HTMLEvents");t.initEvent(a,!0,!0),t.data=s,n.dispatchEvent(t)}else{var t=document.createEventObject();n.fireEvent("on"+a,t)}}exports.triggerEvent=triggerEvent;function populateForm(n,a){if(!!a){var s=function(b){return b&&(b[0]===b[0].toUpperCase()?toCamelCase(b):b[0]===b[0].toLowerCase()?toPascalCase(b):b)};for(var t in a){var e=a[t];(typeof e=="undefined"||e===null)&&(e="");var o=n.elements.namedItem(t)||n.elements.namedItem(s(t)),c=o;if(!!o){var l=c.type||o[0].type;switch(l){case"radio":case"checkbox":for(var u=o.length,i=0;i<u;i++)o[i].checked=e.indexOf(o[i].value)>-1;break;case"select-multiple":for(var k=isArray(e)?e:[e],d=o,i=0;i<d.options.length;i++)d.options[i].selected=k.indexOf(d.options[i].value)>-1;break;case"select":case"select-one":c.value=e.toString()||e;break;case"date":var m=toDate(e);m&&(c.value=m.toISOString().split("T")[0]);break;default:c.value=e;break}}}}}exports.populateForm=populateForm;function trimEnd(n,a){for(var s=n.length;s>0&&n[s-1]===a;)--s;return s<n.length?n.substring(0,s):n}exports.trimEnd=trimEnd;function safeVarName(n){return n.replace(/[\W]+/g,"")}exports.safeVarName=safeVarName;function pick(n,a){var s={};for(var t in n)n.hasOwnProperty(t)&&a.indexOf(t)>=0&&(s[t]=n[t]);return s}exports.pick=pick;function omit(n,a){var s={};for(var t in n)n.hasOwnProperty(t)&&a.indexOf(t)<0&&(s[t]=n[t]);return s}exports.omit=omit;function activeClassNav(n,a){return n.href!=null&&(n.exact||a.length<=1?trimEnd(a,"/").toLowerCase()===trimEnd(n.href,"/").toLowerCase():trimEnd(a,"/").toLowerCase().startsWith(trimEnd(n.href,"/").toLowerCase()))?"active":null}exports.activeClassNav=activeClassNav;function activeClass(n,a,s){return n!=null&&(s||a.length<=1?trimEnd(a,"/").toLowerCase()===trimEnd(n,"/").toLowerCase():trimEnd(a,"/").toLowerCase().startsWith(trimEnd(n,"/").toLowerCase()))?"active":null}exports.activeClass=activeClass;function bootstrapColors(){return["primary","secondary","success","info","warning","danger","light","dark"]}exports.BootstrapColors=bootstrapColors();function btnColorClass(n){for(var a=0,s=bootstrapColors();a<s.length;a++){var t=s[a];if(n[t])return"btn-"+t;if(n["outline-"+t])return"btn-outline-"+t}return null}exports.btnColorClass=btnColorClass;function bootstrapSizes(){return["xs","sm","md","lg"]}exports.BootstrapSizes=bootstrapSizes();function btnSizeClass(n){for(var a=0,s=bootstrapSizes();a<s.length;a++){var t=s[a];if(n[t])return"btn-"+t}return null}exports.btnSizeClass=btnSizeClass;function btnClasses(n){var a=[],s=btnColorClass(n);s&&a.push(s);var t=btnSizeClass(n);return t&&a.push(t),n.block&&a.push("btn-block"),a}exports.btnClasses=btnClasses;var NavDefaults=function(){function n(){}return n.create=function(){return new NavOptions},n.forNav=function(a){return a||n.create()},n.overrideDefaults=function(a,s){return a==null?s:(a=Object.assign({},a),a.navClass===n.navClass&&s.navClass!=null&&(a.navClass=s.navClass),a.navItemClass===n.navItemClass&&s.navItemClass!=null&&(a.navItemClass=s.navItemClass),a.navLinkClass===n.navLinkClass&&s.navLinkClass!=null&&(a.navLinkClass=s.navLinkClass),a.childNavItemClass===n.childNavItemClass&&s.childNavItemClass!=null&&(a.childNavItemClass=s.childNavItemClass),a.childNavLinkClass===n.childNavLinkClass&&s.childNavLinkClass!=null&&(a.childNavLinkClass=s.childNavLinkClass),a.childNavMenuClass===n.childNavMenuClass&&s.childNavMenuClass!=null&&(a.childNavMenuClass=s.childNavMenuClass),a.childNavMenuItemClass===n.childNavMenuItemClass&&s.childNavMenuItemClass!=null&&(a.childNavMenuItemClass=s.childNavMenuItemClass),a)},n.showNav=function(a,s){return s==null||s.length===0?a.show==null:!(a.show!=null&&s.indexOf(a.show)<0||a.hide!=null&&s.indexOf(a.hide)>=0)},n.navClass="nav",n.navItemClass="nav-item",n.navLinkClass="nav-link",n.childNavItemClass="nav-item dropdown",n.childNavLinkClass="nav-link dropdown-toggle",n.childNavMenuClass="dropdown-menu",n.childNavMenuItemClass="dropdown-item",n}();exports.NavDefaults=NavDefaults;var NavLinkDefaults=function(){function n(){}return n.forNavLink=function(a){return a||NavDefaults.create()},n}();exports.NavLinkDefaults=NavLinkDefaults;var NavbarDefaults=function(){function n(){}return n.create=function(){return new NavOptions({navClass:n.navClass})},n.forNavbar=function(a){return NavDefaults.overrideDefaults(a,n.create())},n.navClass="navbar-nav",n}();exports.NavbarDefaults=NavbarDefaults;var NavButtonGroupDefaults=function(){function n(){}return n.create=function(){return new NavOptions({navClass:n.navClass,navItemClass:n.navItemClass})},n.forNavButtonGroup=function(a){return NavDefaults.overrideDefaults(a,n.create())},n.navClass="btn-group",n.navItemClass="btn btn-primary",n}();exports.NavButtonGroupDefaults=NavButtonGroupDefaults;var LinkButtonDefaults=function(){function n(){}return n.create=function(){return new NavOptions({navItemClass:n.navItemClass})},n.forLinkButton=function(a){return NavDefaults.overrideDefaults(a||null,n.create())},n.navItemClass="btn",n}();exports.LinkButtonDefaults=LinkButtonDefaults;var UserAttributes=function(){function n(){}return n.fromSession=function(a){var s=[];return a!=null&&(s.push("auth"),a.roles&&s.push.apply(s,a.roles.map(function(t){return"role:"+t})),a.permissions&&s.push.apply(s,a.permissions.map(function(t){return"perm:"+t}))),s},n}();exports.UserAttributes=UserAttributes;var NavOptions=function(){function n(a){this.attributes=[],this.navClass=NavDefaults.navClass,this.navItemClass=NavDefaults.navItemClass,this.navLinkClass=NavDefaults.navLinkClass,this.childNavItemClass=NavDefaults.childNavItemClass,this.childNavLinkClass=NavDefaults.childNavLinkClass,this.childNavMenuClass=NavDefaults.childNavMenuClass,this.childNavMenuItemClass=NavDefaults.childNavMenuItemClass,Object.assign(this,a)}return n.fromSession=function(a,s){return s=s||new n,s.attributes=UserAttributes.fromSession(a),s},n}();exports.NavOptions=NavOptions;function classNames(){for(var n=[],a=0;a<arguments.length;a++)n[a]=arguments[a];for(var s=[],t=0;t<n.length;t++){var e=n[t];if(!!e){var o=typeof e;if(o==="string"||o==="number")s.push(e);else if(Array.isArray(e)&&e.length){var c=classNames.apply(null,e);c&&s.push(c)}else if(o==="object")for(var l=0,u=Object.keys(e);l<u.length;l++){var i=u[l];e[i]&&s.push(i)}}}return s.join(" ")}exports.classNames=classNames;function fromXsdDuration(n){var a=0,s=0,t=0,e=0,o=0,c=splitOnFirst(n.substring(1),"T"),l=c.length==2,u=splitOnFirst(c[0],"D");if(u.length==2&&(a=parseInt(u[0],10)||0),l){var i=splitOnFirst(c[1],"H");i.length==2&&(s=parseInt(i[0],10)||0);var k=splitOnFirst(i[i.length-1],"M");k.length==2&&(t=parseInt(k[0],10)||0);var d=splitOnFirst(k[k.length-1],"S");d.length==2&&(o=parseFloat(d[0])),e=o|0,o-=e}var m=a*24*60*60+s*60*60+t*60+e;return m+o}exports.fromXsdDuration=fromXsdDuration;function timeFmt(n,a){var s=n,t=n|0,e=t,o=e>=60?e%60:e;e=e/60;var c=e>=60?e%60:e;e=e/60;var l=e>=24?e%24:e,u=e/24,i=o+(s-t),k=a?"P":"";if(a){if((u|0)>0&&(k+=(u|0)+"D"),u==0||l+c+o+i>0)if(k+="T",(l|0)>0&&(k+=(l|0)+"H"),(c|0)>0&&(k+=(c|0)+"M"),i>0){var d=i.toFixed(7);d=trimEnd(trimEnd(d,"0"),"."),k+=d+"S"}else k.length==2&&(k+="0S")}else if((u|0)>0&&(k+=(u|0)+":"),k+=padInt(l|0)+":"+padInt(c|0)+":",i>0){var d=i.toFixed(7);d=trimEnd(trimEnd(d,"0"),"."),k+=i>=10?""+d:"0"+d}else k+="00";return k}function toXsdDuration(n){return timeFmt(n,!0)}exports.toXsdDuration=toXsdDuration;function toTimeSpanFmt(n){return timeFmt(n,!1)}exports.toTimeSpanFmt=toTimeSpanFmt;function flatMap(n,a){return a.reduce(function(s,t){return s.concat(n(t))},[])}exports.flatMap=flatMap;function uniq(n){return Array.from(new Set(n)).sort(function(a,s){return a>s?1:-1})}exports.uniq=uniq;function enc(n){return n==null?null:typeof n=="string"?n.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/'/g,"&#39;").replace(/"/g,"&#34;"):""+n}exports.enc=enc;function htmlAttrs(n){var a=[];return Object.keys(n).forEach(function(s){a.length>0&&a.push(" "),a.push(s),a.push('="'),a.push(enc(n[s])),a.push('"')}),a.join("")}exports.htmlAttrs=htmlAttrs;function indexOfAny(n,a){for(var s=0,t=a.length;s<t;s++){var e=n.indexOf(a[s]);if(e>=0)return e}return-1}exports.indexOfAny=indexOfAny;function isNullOrEmpty(n){return n==null||n===""}exports.isNullOrEmpty=isNullOrEmpty;function fromDateTime(n){return toDate(n)}exports.fromDateTime=fromDateTime;function toDateTime(n){return"/Date("+n.getTime()+")/"}exports.toDateTime=toDateTime;function fromTimeSpan(n){return n}exports.fromTimeSpan=fromTimeSpan;function toTimeSpan(n){return n}exports.toTimeSpan=toTimeSpan;function fromGuid(n){return n}exports.fromGuid=fromGuid;function toGuid(n){return n}exports.toGuid=toGuid;function fromByteArray(n){for(var a=_atob(n),s=a.length,t=new Uint8Array(s),e=0;e<s;e++)t[e]=a.charCodeAt(e);return t}exports.fromByteArray=fromByteArray;function toByteArray(n){var a=String.fromCharCode.apply(null,n);return _btoa(a)}exports.toByteArray=toByteArray;function toBase64String(n){return JsonServiceClient.toBase64(n)}exports.toBase64String=toBase64String;var StringBuffer=function(){function n(a){for(var s=[],t=1;t<arguments.length;t++)s[t-1]=arguments[t];this.buffer_="",a!=null&&this.append.apply(this,arguments)}return n.prototype.set=function(a){this.buffer_=""+a},n.prototype.append=function(a,s){for(var t=[],e=2;e<arguments.length;e++)t[e-2]=arguments[e];if(this.buffer_+=String(a),s!=null)for(var o=1;o<arguments.length;o++)this.buffer_+=arguments[o];return this},n.prototype.clear=function(){this.buffer_=""},n.prototype.getLength=function(){return this.buffer_.length},n.prototype.toString=function(){return this.buffer_},n}();exports.StringBuffer=StringBuffer;var JSV=function(){function n(){}return n.encodeString=function(a){return a==null?null:a===""?'""':(a.indexOf('"')&&(a=a.replace(/"/g,'""')),indexOfAny(a,n.ESCAPE_CHARS)>=0?'"'+a+'"':a)},n.encodeArray=function(a){for(var s,t=new StringBuffer,e=0,o=a.length;e<o;e++)s=a[e],!(isNullOrEmpty(s)||typeof s=="function")&&(t.getLength()>0&&t.append(","),t.append(n.stringify(s)));return"["+t.toString()+"]"},n.encodeObject=function(a){var s,t=new StringBuffer;for(var e in a)s=a[e],!(!a.hasOwnProperty(e)||isNullOrEmpty(s)||typeof s=="function")&&(t.getLength()>0&&t.append(","),t.append(n.encodeString(e)),t.append(":"),t.append(n.stringify(s)));return"{"+t.toString()+"}"},n.stringify=function(a){if(a==null)return null;var s=typeof a;if(s==="function"||s==="symbol")return null;if(s==="object"){var t=a.constructor.toString().toLowerCase();return t.indexOf("string")>=0?n.encodeString(a):t.indexOf("boolean")>=0?a?"true":"false":t.indexOf("number")>=0?a:t.indexOf("date")>=0?n.encodeString(toLocalISOString(a)):t.indexOf("array")>=0?n.encodeArray(a):n.encodeObject(a)}switch(s){case"string":return n.encodeString(a);case"boolean":return a?"true":"false";case"number":default:return a}},n.ESCAPE_CHARS=['"',":",",","{","}","[","]","\r",`
`],n}();exports.JSV=JSV;function uniqueKeys(n){var a=[];return n.forEach(function(s){return Object.keys(s).forEach(function(t){a.indexOf(t)===-1&&a.push(t)})}),a}exports.uniqueKeys=uniqueKeys;function alignLeft(n,a,s){if(s===void 0&&(s=" "),a<0)return"";var t=a+1-n.length;return t<=0?n:s+n+s.repeat(a+1-n.length)}exports.alignLeft=alignLeft;function alignCenter(n,a,s){if(s===void 0&&(s=" "),a<0)return"";n||(n="");var t=n.length,e=Math.floor(a/2-t/2),o=Math.abs(t%2-a%2);return s.repeat(e+1)+n+s.repeat(e+1+o)}exports.alignCenter=alignCenter;function alignRight(n,a,s){if(s===void 0&&(s=" "),a<0)return"";var t=a+1-n.length;return t<=0?n:s.repeat(a+1-n.length)+n+s}exports.alignRight=alignRight;function alignAuto(n,a,s){s===void 0&&(s=" ");var t=""+n;return t.length<=a?typeof n=="number"?alignRight(t,a,s):alignLeft(t,a,s):t}exports.alignAuto=alignAuto;var Inspect=function(){function n(){}return n.vars=function(a){var s=nodeRequire()},n.dump=function(a){var s=JSON.stringify(a,null,4);return s.replace(/"/g,"")},n.printDump=function(a){console.log(n.dump(a))},n.dumpTable=function(a){var s=a,t=uniqueKeys(s),e={};t.forEach(function(i){var k=i.length;s.forEach(function(d){var m=d[i];if(m!=null){var b=(""+m).length;b>k&&(k=b)}}),e[i]=k});var o=Object.keys(e).length,c=Object.keys(e).map(function(i){return e[i]}).reduce(function(i,k){return i+k},0)+o*2+(o+1),l=[];l.push("+"+"-".repeat(c-2)+"+");var u="|";return t.forEach(function(i){return u+=alignCenter(i,e[i])+"|"}),l.push(u),l.push("|"+"-".repeat(c-2)+"|"),s.forEach(function(i){var k="|";t.forEach(function(d){return k+=""+alignAuto(i[d],e[d])+"|"}),l.push(k)}),l.push("+"+"-".repeat(c-2)+"+"),l.join(`
`)},n.printDumpTable=function(a){console.log(n.dumpTable(a))},n}();exports.Inspect=Inspect})(dist$1);let url="https://docs-vitepress.netcore.io",client=new dist$1.JsonServiceClient(url);const _sfc_main$3={name:"HelloApi",setup(){const n=ref(""),a=ref(""),s=async t=>{if(!t){n.value="";return}let e=new Hello;e.name=t,n.value=(await client.get(e)).result};return watch(a,async t=>{await s(t)}),{txtName:a,result:n}}},_hoisted_1$3={class:"form-group"},_hoisted_2$2={class:"result pt-2"};function _sfc_render$2(n,a,s,t,e,o){return openBlock(),createElementBlock("div",_hoisted_1$3,[withDirectives(createBaseVNode("input",{type:"text",placeholder:"Your name","onUpdate:modelValue":a[0]||(a[0]=c=>t.txtName=c)},null,512),[[vModelText,t.txtName]]),createBaseVNode("h3",_hoisted_2$2,toDisplayString(t.result),1)])}var HelloApi=_export_sfc(_sfc_main$3,[["render",_sfc_render$2]]),ytEmbed_vue_vue_type_style_index_0_scoped_true_lang="";const _sfc_main$2={name:"yt-embed",setup(n){return{videoId:n.video,videoUrl:"https://www.youtube.com/embed/"+n.video}},props:{video:{type:String,required:!0,default:()=>""}}},_hoisted_1$2={key:0,class:"video-container"},_hoisted_2$1=["src"];function _sfc_render$1(n,a,s,t,e,o){return t.videoUrl!=""?(openBlock(),createElementBlock("div",_hoisted_1$2,[createBaseVNode("iframe",{width:"896",height:"525",src:t.videoUrl,frameborder:"0",allow:"autoplay; encrypted-media",allowfullscreen:""},null,8,_hoisted_2$1)])):createCommentVNode("v-if",!0)}var ytEmbed=_export_sfc(_sfc_main$2,[["render",_sfc_render$1],["__scopeId","data-v-f5bbd22a"]]),dist={},clipboard={exports:{}};/*!
 * clipboard.js v2.0.8
 * https://clipboardjs.com/
 *
 * Licensed MIT © Zeno Rocha
 */(function(n,a){(function(t,e){n.exports=e()})(commonjsGlobal,function(){return function(){var s={134:function(o,c,l){l.d(c,{default:function(){return X}});var u=l(279),i=l.n(u),k=l(370),d=l.n(k),m=l(817),b=l.n(m);function C($){return typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?C=function(I){return typeof I}:C=function(I){return I&&typeof Symbol=="function"&&I.constructor===Symbol&&I!==Symbol.prototype?"symbol":typeof I},C($)}function O($,B){if(!($ instanceof B))throw new TypeError("Cannot call a class as a function")}function f($,B){for(var I=0;I<B.length;I++){var U=B[I];U.enumerable=U.enumerable||!1,U.configurable=!0,"value"in U&&(U.writable=!0),Object.defineProperty($,U.key,U)}}function y($,B,I){return B&&f($.prototype,B),I&&f($,I),$}var S=function(){function $(B){O(this,$),this.resolveOptions(B),this.initSelection()}return y($,[{key:"resolveOptions",value:function(){var I=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};this.action=I.action,this.container=I.container,this.emitter=I.emitter,this.target=I.target,this.text=I.text,this.trigger=I.trigger,this.selectedText=""}},{key:"initSelection",value:function(){this.text?this.selectFake():this.target&&this.selectTarget()}},{key:"createFakeElement",value:function(){var I=document.documentElement.getAttribute("dir")==="rtl";this.fakeElem=document.createElement("textarea"),this.fakeElem.style.fontSize="12pt",this.fakeElem.style.border="0",this.fakeElem.style.padding="0",this.fakeElem.style.margin="0",this.fakeElem.style.position="absolute",this.fakeElem.style[I?"right":"left"]="-9999px";var U=window.pageYOffset||document.documentElement.scrollTop;return this.fakeElem.style.top="".concat(U,"px"),this.fakeElem.setAttribute("readonly",""),this.fakeElem.value=this.text,this.fakeElem}},{key:"selectFake",value:function(){var I=this,U=this.createFakeElement();this.fakeHandlerCallback=function(){return I.removeFake()},this.fakeHandler=this.container.addEventListener("click",this.fakeHandlerCallback)||!0,this.container.appendChild(U),this.selectedText=b()(U),this.copyText(),this.removeFake()}},{key:"removeFake",value:function(){this.fakeHandler&&(this.container.removeEventListener("click",this.fakeHandlerCallback),this.fakeHandler=null,this.fakeHandlerCallback=null),this.fakeElem&&(this.container.removeChild(this.fakeElem),this.fakeElem=null)}},{key:"selectTarget",value:function(){this.selectedText=b()(this.target),this.copyText()}},{key:"copyText",value:function(){var I;try{I=document.execCommand(this.action)}catch{I=!1}this.handleResult(I)}},{key:"handleResult",value:function(I){this.emitter.emit(I?"success":"error",{action:this.action,text:this.selectedText,trigger:this.trigger,clearSelection:this.clearSelection.bind(this)})}},{key:"clearSelection",value:function(){this.trigger&&this.trigger.focus(),document.activeElement.blur(),window.getSelection().removeAllRanges()}},{key:"destroy",value:function(){this.removeFake()}},{key:"action",set:function(){var I=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"copy";if(this._action=I,this._action!=="copy"&&this._action!=="cut")throw new Error('Invalid "action" value, use either "copy" or "cut"')},get:function(){return this._action}},{key:"target",set:function(I){if(I!==void 0)if(I&&C(I)==="object"&&I.nodeType===1){if(this.action==="copy"&&I.hasAttribute("disabled"))throw new Error('Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute');if(this.action==="cut"&&(I.hasAttribute("readonly")||I.hasAttribute("disabled")))throw new Error(`Invalid "target" attribute. You can't cut text from elements with "readonly" or "disabled" attributes`);this._target=I}else throw new Error('Invalid "target" value, use a valid Element')},get:function(){return this._target}}]),$}(),N=S;function q($){return typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?q=function(I){return typeof I}:q=function(I){return I&&typeof Symbol=="function"&&I.constructor===Symbol&&I!==Symbol.prototype?"symbol":typeof I},q($)}function F($,B){if(!($ instanceof B))throw new TypeError("Cannot call a class as a function")}function L($,B){for(var I=0;I<B.length;I++){var U=B[I];U.enumerable=U.enumerable||!1,U.configurable=!0,"value"in U&&(U.writable=!0),Object.defineProperty($,U.key,U)}}function D($,B,I){return B&&L($.prototype,B),I&&L($,I),$}function Y($,B){if(typeof B!="function"&&B!==null)throw new TypeError("Super expression must either be null or a function");$.prototype=Object.create(B&&B.prototype,{constructor:{value:$,writable:!0,configurable:!0}}),B&&J($,B)}function J($,B){return J=Object.setPrototypeOf||function(U,K){return U.__proto__=K,U},J($,B)}function z($){var B=W();return function(){var U=en($),K;if(B){var nn=en(this).constructor;K=Reflect.construct(U,arguments,nn)}else K=U.apply(this,arguments);return Z(this,K)}}function Z($,B){return B&&(q(B)==="object"||typeof B=="function")?B:G($)}function G($){if($===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return $}function W(){if(typeof Reflect=="undefined"||!Reflect.construct||Reflect.construct.sham)return!1;if(typeof Proxy=="function")return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch{return!1}}function en($){return en=Object.setPrototypeOf?Object.getPrototypeOf:function(I){return I.__proto__||Object.getPrototypeOf(I)},en($)}function un($,B){var I="data-clipboard-".concat($);if(!!B.hasAttribute(I))return B.getAttribute(I)}var pn=function($){Y(I,$);var B=z(I);function I(U,K){var nn;return F(this,I),nn=B.call(this),nn.resolveOptions(K),nn.listenClick(U),nn}return D(I,[{key:"resolveOptions",value:function(){var K=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};this.action=typeof K.action=="function"?K.action:this.defaultAction,this.target=typeof K.target=="function"?K.target:this.defaultTarget,this.text=typeof K.text=="function"?K.text:this.defaultText,this.container=q(K.container)==="object"?K.container:document.body}},{key:"listenClick",value:function(K){var nn=this;this.listener=d()(K,"click",function(kn){return nn.onClick(kn)})}},{key:"onClick",value:function(K){var nn=K.delegateTarget||K.currentTarget;this.clipboardAction&&(this.clipboardAction=null),this.clipboardAction=new N({action:this.action(nn),target:this.target(nn),text:this.text(nn),container:this.container,trigger:nn,emitter:this})}},{key:"defaultAction",value:function(K){return un("action",K)}},{key:"defaultTarget",value:function(K){var nn=un("target",K);if(nn)return document.querySelector(nn)}},{key:"defaultText",value:function(K){return un("text",K)}},{key:"destroy",value:function(){this.listener.destroy(),this.clipboardAction&&(this.clipboardAction.destroy(),this.clipboardAction=null)}}],[{key:"isSupported",value:function(){var K=arguments.length>0&&arguments[0]!==void 0?arguments[0]:["copy","cut"],nn=typeof K=="string"?[K]:K,kn=!!document.queryCommandSupported;return nn.forEach(function(hn){kn=kn&&!!document.queryCommandSupported(hn)}),kn}}]),I}(i()),X=pn},828:function(o){var c=9;if(typeof Element!="undefined"&&!Element.prototype.matches){var l=Element.prototype;l.matches=l.matchesSelector||l.mozMatchesSelector||l.msMatchesSelector||l.oMatchesSelector||l.webkitMatchesSelector}function u(i,k){for(;i&&i.nodeType!==c;){if(typeof i.matches=="function"&&i.matches(k))return i;i=i.parentNode}}o.exports=u},438:function(o,c,l){var u=l(828);function i(m,b,C,O,f){var y=d.apply(this,arguments);return m.addEventListener(C,y,f),{destroy:function(){m.removeEventListener(C,y,f)}}}function k(m,b,C,O,f){return typeof m.addEventListener=="function"?i.apply(null,arguments):typeof C=="function"?i.bind(null,document).apply(null,arguments):(typeof m=="string"&&(m=document.querySelectorAll(m)),Array.prototype.map.call(m,function(y){return i(y,b,C,O,f)}))}function d(m,b,C,O){return function(f){f.delegateTarget=u(f.target,b),f.delegateTarget&&O.call(m,f)}}o.exports=k},879:function(o,c){c.node=function(l){return l!==void 0&&l instanceof HTMLElement&&l.nodeType===1},c.nodeList=function(l){var u=Object.prototype.toString.call(l);return l!==void 0&&(u==="[object NodeList]"||u==="[object HTMLCollection]")&&"length"in l&&(l.length===0||c.node(l[0]))},c.string=function(l){return typeof l=="string"||l instanceof String},c.fn=function(l){var u=Object.prototype.toString.call(l);return u==="[object Function]"}},370:function(o,c,l){var u=l(879),i=l(438);function k(C,O,f){if(!C&&!O&&!f)throw new Error("Missing required arguments");if(!u.string(O))throw new TypeError("Second argument must be a String");if(!u.fn(f))throw new TypeError("Third argument must be a Function");if(u.node(C))return d(C,O,f);if(u.nodeList(C))return m(C,O,f);if(u.string(C))return b(C,O,f);throw new TypeError("First argument must be a String, HTMLElement, HTMLCollection, or NodeList")}function d(C,O,f){return C.addEventListener(O,f),{destroy:function(){C.removeEventListener(O,f)}}}function m(C,O,f){return Array.prototype.forEach.call(C,function(y){y.addEventListener(O,f)}),{destroy:function(){Array.prototype.forEach.call(C,function(y){y.removeEventListener(O,f)})}}}function b(C,O,f){return i(document.body,C,O,f)}o.exports=k},817:function(o){function c(l){var u;if(l.nodeName==="SELECT")l.focus(),u=l.value;else if(l.nodeName==="INPUT"||l.nodeName==="TEXTAREA"){var i=l.hasAttribute("readonly");i||l.setAttribute("readonly",""),l.select(),l.setSelectionRange(0,l.value.length),i||l.removeAttribute("readonly"),u=l.value}else{l.hasAttribute("contenteditable")&&l.focus();var k=window.getSelection(),d=document.createRange();d.selectNodeContents(l),k.removeAllRanges(),k.addRange(d),u=k.toString()}return u}o.exports=c},279:function(o){function c(){}c.prototype={on:function(l,u,i){var k=this.e||(this.e={});return(k[l]||(k[l]=[])).push({fn:u,ctx:i}),this},once:function(l,u,i){var k=this;function d(){k.off(l,d),u.apply(i,arguments)}return d._=u,this.on(l,d,i)},emit:function(l){var u=[].slice.call(arguments,1),i=((this.e||(this.e={}))[l]||[]).slice(),k=0,d=i.length;for(k;k<d;k++)i[k].fn.apply(i[k].ctx,u);return this},off:function(l,u){var i=this.e||(this.e={}),k=i[l],d=[];if(k&&u)for(var m=0,b=k.length;m<b;m++)k[m].fn!==u&&k[m].fn._!==u&&d.push(k[m]);return d.length?i[l]=d:delete i[l],this}},o.exports=c,o.exports.TinyEmitter=c}},t={};function e(o){if(t[o])return t[o].exports;var c=t[o]={exports:{}};return s[o](c,c.exports,e),c.exports}return function(){e.n=function(o){var c=o&&o.__esModule?function(){return o.default}:function(){return o};return e.d(c,{a:c}),c}}(),function(){e.d=function(o,c){for(var l in c)e.o(c,l)&&!e.o(o,l)&&Object.defineProperty(o,l,{enumerable:!0,get:c[l]})}}(),function(){e.o=function(o,c){return Object.prototype.hasOwnProperty.call(o,c)}}(),e(134)}().default})})(clipboard);var __importDefault=commonjsGlobal&&commonjsGlobal.__importDefault||function(n){return n&&n.__esModule?n:{default:n}};Object.defineProperty(dist,"__esModule",{value:!0});var clipboard_1=__importDefault(clipboard.exports),_default=dist.default=function(n){var a=(n==null?void 0:n.appendToBody)===void 0?!0:n.appendToBody;return{toClipboard:function(s,t){return new Promise(function(e,o){var c=document.createElement("button"),l=new clipboard_1.default(c,{text:function(){return s},action:function(){return"copy"},container:t!==void 0?t:document.body});l.on("success",function(u){l.destroy(),e(u)}),l.on("error",function(u){l.destroy(),o(u)}),a&&document.body.appendChild(c),c.click(),a&&document.body.removeChild(c)})}}},nugetRef_vue_vue_type_style_index_0_scoped_true_lang="";const _sfc_main$1=defineComponent({setup(n){const{toClipboard:a}=_default(),s=ref(!1);return{copy:async()=>{try{await a('<PackageReference Include="'+n.packageName+'" Version="'+n.packageVersion+'" />'),console.log("Copied to clipboard"),s.value=!0,setTimeout(()=>{s.value=!1},3e3)}catch(e){console.error(e)}},copyShow:s}},name:"nuget-ref",props:{packageName:String,packageVersion:String}}),_withScopeId=n=>(pushScopeId("data-v-fefb0728"),n=n(),popScopeId(),n),_hoisted_1$1={class:"package-reference-box"},_hoisted_2={class:"flex"},_hoisted_3={class:"flex-grow pre-container",style:{background:"#002440"}},_hoisted_4={class:"sh copy p-0 pl-2 align-middle",style:{background:"#002440"}},_hoisted_5={class:"block font-normal text-xs sm:text-sm"},_hoisted_6={class:"flex-shrink"},_hoisted_7=_withScopeId(()=>createBaseVNode("b",null,null,-1)),_hoisted_8={class:"copy-text w-full text-right h-6"};function _sfc_render(n,a,s,t,e,o){return openBlock(),createElementBlock("div",_hoisted_1$1,[createBaseVNode("div",_hoisted_2,[createBaseVNode("div",_hoisted_3,[createBaseVNode("pre",_hoisted_4,[createBaseVNode("label",_hoisted_5,'<PackageReference Include="'+toDisplayString(n.packageName)+'" Version="'+toDisplayString(n.packageVersion)+'" />',1)])]),createBaseVNode("div",_hoisted_6,[createBaseVNode("i",{class:"svg-copy inline-block w-8 h-full",title:"copy",onClick:a[0]||(a[0]=(...c)=>n.copy&&n.copy(...c))}),_hoisted_7])]),createBaseVNode("div",_hoisted_8,[withDirectives(createBaseVNode("label",null,"copied!",512),[[vShow,n.copyShow]])])])}var nugetPackage=_export_sfc(_sfc_main$1,[["render",_sfc_render],["__scopeId","data-v-fefb0728"]]),custom="";const _hoisted_1={key:0},_sfc_main={setup(n){const{Layout:a}=theme,{page:s}=useData();return(t,e)=>(openBlock(),createBlock(unref(a),null,{"page-top":withCtx(()=>[unref(s).title?(openBlock(),createElementBlock("h1",_hoisted_1,toDisplayString(unref(s).title),1)):createCommentVNode("v-if",!0)]),_:1}))}};var Theme=En(Sn({},theme),{Layout:_sfc_main,enhanceApp:({app:n})=>{n.component("cleanUrlsMd",cleanUrls),n.component("webNewCorefxMd",corefxtable),n.component("webTroubleMd",webTrouble),n.component("clientLoginUis",clientuis),n.component("clientContactUis",clientContactsUis),n.component("serverLoginUis",serveruis),n.component("serverContactUis",serverContactsUis),n.component("HelloApi",HelloApi),n.component("ytEmbed",ytEmbed),n.component("nugetPackage",nugetPackage)}});const hasFetched=new Set,createLink=()=>document.createElement("link"),viaDOM=n=>{const a=createLink();a.rel="prefetch",a.href=n,document.head.appendChild(a)},viaXHR=n=>{const a=new XMLHttpRequest;a.open("GET",n,a.withCredentials=!0),a.send()};let link;const doFetch=inBrowser&&(link=createLink())&&link.relList&&link.relList.supports&&link.relList.supports("prefetch")?viaDOM:viaXHR;function usePrefetch(){if(!inBrowser||!window.IntersectionObserver)return;let n;if((n=navigator.connection)&&(n.saveData||/2g/.test(n.effectiveType)))return;const a=window.requestIdleCallback||setTimeout;let s=null;const t=()=>{s&&s.disconnect(),s=new IntersectionObserver(o=>{o.forEach(c=>{if(c.isIntersecting){const l=c.target;s.unobserve(l);const{pathname:u}=l;if(!hasFetched.has(u)){hasFetched.add(u);const i=pathToFile(u);doFetch(i)}}})}),a(()=>{document.querySelectorAll("#app a").forEach(o=>{const{target:c,hostname:l,pathname:u}=o,i=u.match(/\.\w+$/);i&&i[0]!==".html"||c!=="_blank"&&l===location.hostname&&(u!==location.pathname?s.observe(o):hasFetched.add(u))})})};onMounted(t);const e=useRoute();watch(()=>e.path,t),onUnmounted(()=>{s&&s.disconnect()})}const ClientOnly=defineComponent({setup(n,{slots:a}){const s=ref(!1);return onMounted(()=>{s.value=!0}),()=>s.value&&a.default?a.default():null}}),NotFound=Theme.NotFound||(()=>"404 Not Found"),VitePressApp={name:"VitePressApp",setup(){const{site:n}=useData();return onMounted(()=>{watch(()=>n.value.lang,a=>{document.documentElement.lang=a},{immediate:!0})}),usePrefetch(),()=>h(Theme.Layout)}};function createApp(){const n=newRouter(),a=newApp();a.provide(RouterSymbol,n);const s=initData(n.route);return a.provide(dataSymbol,s),inBrowser&&useUpdateHead(n.route,s.site),a.component("Content",Content),a.component("ClientOnly",ClientOnly),a.component("Debug",()=>null),Object.defineProperty(a.config.globalProperties,"$frontmatter",{get(){return s.frontmatter.value}}),Theme.enhanceApp&&Theme.enhanceApp({app:a,router:n,siteData:siteDataRef}),{app:a,router:n}}function newApp(){return createSSRApp(VitePressApp)}function newRouter(){let n=inBrowser,a;return createRouter(s=>{let t=pathToFile(s);return n&&(a=t),(n||a===t)&&(t=t.replace(/\.js$/,".lean.js")),inBrowser?(n=!1,import(t)):require(t)},NotFound)}if(inBrowser){const{app:n,router:a}=createApp();a.go().then(()=>{n.mount("#app")})}export{Fragment as F,NavLink as N,_export_sfc as _,createStaticVNode as a,createBaseVNode as b,createElementBlock as c,createApp,createVNode as d,createTextVNode as e,corefxtable as f,clientuis as g,serverContactsUis as h,clientContactsUis as i,cleanUrls as j,createCommentVNode as k,defineComponent as l,useData as m,computed as n,openBlock as o,withBase as p,createBlock as q,resolveComponent as r,serveruis as s,toDisplayString as t,unref as u,renderList as v,webTrouble as w,renderSlot as x};
