import{_ as e,c as t,o,a as s,b as n,e as a}from"./app.14440598.js";const cn='{"title":".NET Core Windows Desktop Apps","description":"","frontmatter":{"slug":"netcore-windows-desktop","title":".NET Core Windows Desktop Apps"},"headers":[{"level":3,"title":"Launch .NET Core App inside a Windows Chromium Desktop App","slug":"launch-net-core-app-inside-a-windows-chromium-desktop-app"},{"level":3,"title":"Create Windows Desktop Shortcuts","slug":"create-windows-desktop-shortcuts"},{"level":3,"title":"Create new Project Templates","slug":"create-new-project-templates"},{"level":3,"title":"Mix Features into existing ASP.NET Core Apps","slug":"mix-features-into-existing-asp-net-core-apps"},{"level":3,"title":"Installing Sharp Apps","slug":"installing-sharp-apps"},{"level":2,"title":"Custom .NET Core Desktop Apps","slug":"custom-net-core-desktop-apps"},{"level":3,"title":"Upgrading","slug":"upgrading"},{"level":2,"title":"Chromium Desktop Apps","slug":"chromium-desktop-apps"},{"level":2,"title":"Desktop Sharp Apps","slug":"desktop-sharp-apps"},{"level":3,"title":"Installing Sharp Apps","slug":"installing-sharp-apps-1"},{"level":3,"title":"Include your Sharp App in the Gallery","slug":"include-your-sharp-app-in-the-gallery"},{"level":3,"title":"Installing blog","slug":"installing-blog"},{"level":3,"title":"Installing redis","slug":"installing-redis"},{"level":3,"title":"Simple Updates","slug":"simple-updates"},{"level":2,"title":"Creating Desktop Sharp Apps","slug":"creating-desktop-sharp-apps"},{"level":3,"title":"Live Previews","slug":"live-previews"},{"level":3,"title":"Multiplying","slug":"multiplying"},{"level":3,"title":"Animating","slug":"animating"},{"level":3,"title":"Navigating","slug":"navigating"},{"level":2,"title":"Publishing your App","slug":"publishing-your-app"},{"level":3,"title":"Publishing Gist Apps","slug":"publishing-gist-apps"},{"level":3,"title":"Vue Desktop Template","slug":"vue-desktop-template"},{"level":3,"title":"Publishing Gist Apps","slug":"publishing-gist-apps-1"},{"level":3,"title":"Publishing to a GitHub Repo","slug":"publishing-to-a-github-repo"},{"level":3,"title":"Publish to .zip","slug":"publish-to-zip"},{"level":3,"title":"Publishing self-encapsulated .zip","slug":"publishing-self-encapsulated-zip"}],"relativePath":"netcore-windows-desktop.md","lastUpdated":1634495308426}',p={},c=s(`<p><img src="https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/app/netcore-chromium-splash.png" alt=""></p><p>The <a href="https://www.nuget.org/packages/app" target="_blank" rel="noopener noreferrer">app</a> dotnet build tool contains features for &quot;Chromitizing&quot; any .NET Core Web App into a <strong>.NET Core Windows Desktop App</strong> by just installing the <code>app</code> dotnet tool:</p><div class="language-bash"><pre><code>$ dotnet tool <span class="token function">install</span> -g app
</code></pre></div><p>If you already have <code>app</code> tool installed make sure you&#39;re running the latest version with:</p><div class="language-bash"><pre><code>$ dotnet tool update -g app
</code></pre></div><h3 id="launch-net-core-app-inside-a-windows-chromium-desktop-app" tabindex="-1">Launch .NET Core App inside a Windows Chromium Desktop App <a class="header-anchor" href="#launch-net-core-app-inside-a-windows-chromium-desktop-app" aria-hidden="true">#</a></h3><p>Then run your .NET Core Web App with:</p><div class="language-bash"><pre><code>$ app MyApp.dll
</code></pre></div><p>Where it will run your .NET Core App and host it inside an Chromium Embedded Framework (CEF) browser.</p><p>This provides instant utility for being able to deploy .NET Core Apps end users can run locally using Chrome&#39;s leading and consistent rendering engine within a Windows Desktop Application.</p><p><code>app</code> includes a number of features and deep integration with GitHub that makes running .NET Core Chromium Desktop Apps a seamless experience.</p><p>To illustrate this we can install any .NET Core project from GitHub by specifying the project&#39;s name along with the name of the GitHub <strong>User</strong> or <strong>Organization</strong> via the <code>--source</code> argument. If you don&#39;t have a .NET Core Application on-hand to try it on, you can use any of <a href="https://github.com/NetCoreTemplates" target="_blank" rel="noopener noreferrer">ServiceStack&#39;s .NET Core Templates</a> which are all functioning .NET Core projects in their own right.</p><p>Where we can create a new <a href="https://github.com/NetCoreTemplates/mvc" target="_blank" rel="noopener noreferrer">NetCoreTemplates/mvc</a> project with:</p><div class="language-bash"><pre><code>$ app new mvc Acme --source NetCoreTemplates
</code></pre></div><p>Which will download and unzip either the Project&#39;s <strong>latest release</strong>, or an archive of <strong>master</strong> if none exists.</p><p>Then publish the .NET Core App as normal by going into the Host project folder using the <strong>project name</strong> you specified above, eg:</p><div class="language-bash"><pre><code>$ <span class="token builtin class-name">cd</span> Acme<span class="token punctuation">\\</span>Acme
</code></pre></div><p>Create a published version of the App:</p><div class="language-bash"><pre><code>$ dotnet publish -c Release
</code></pre></div><p>Then in the <code>/publish</code> folder:</p><div class="language-bash"><pre><code>$ <span class="token builtin class-name">cd</span> bin<span class="token punctuation">\\</span>Release<span class="token punctuation">\\</span>netcoreapp3.1<span class="token punctuation">\\</span>publish
</code></pre></div><p>You can use <code>app</code> to run the .NET Core binary:</p><div class="language-bash"><pre><code>$ app Acme.dll
</code></pre></div><p>Where it will run the .NET Core App and launch it within a CEF Windows Application:</p><p><a href="http://mvc.web-templates.io/" target="_blank" rel="noopener noreferrer"><img src="https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/app/screenshot-mvc.png" alt=""></a></p><h3 id="create-windows-desktop-shortcuts" tabindex="-1">Create Windows Desktop Shortcuts <a class="header-anchor" href="#create-windows-desktop-shortcuts" aria-hidden="true">#</a></h3><p>To make the experience of running .NET Core Desktop Apps even nicer you can use the <code>shortcut</code> command to create a Windows Shortcut for your App:</p><div class="language-bash"><pre><code>$ app shortcut Acme.dll
</code></pre></div><p>Which you can either double-click to run or copy to a more accessible location like the Users Desktop:</p><p><img src="https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/app/app-shortcut.png" alt=""></p><p>If you wanted to use your own icon instead, copy it as <code>favicon.ico</code> in your <code>/publish</code> folder and rerun the command:</p><div class="language-bash"><pre><code>$ app shortcut Acme.dll
</code></pre></div><p>Where it will be used in both Shortcut Icon and Windows Desktop icon:</p><p><img src="https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/app/app-shortcut-icon.png" alt=""></p><h3 id="create-new-project-templates" tabindex="-1">Create new Project Templates <a class="header-anchor" href="#create-new-project-templates" aria-hidden="true">#</a></h3><p>See <a href="/web-new.html">x new</a> for available Project Templates you can create with:</p><div class="language-bash"><pre><code>$ app new
</code></pre></div><h3 id="mix-features-into-existing-asp-net-core-apps" tabindex="-1">Mix Features into existing <a href="http://ASP.NET" target="_blank" rel="noopener noreferrer">ASP.NET</a> Core Apps <a class="header-anchor" href="#mix-features-into-existing-asp-net-core-apps" aria-hidden="true">#</a></h3><p>The <code>app</code> dotnet tool is a <a href="/dotnet-tool.html">versatile utility belt packed with a number of features</a> to simplify discovering, installing, running and deploying .NET Core Apps. You can view the full list of supported commands by running <code>app ?</code>, e.g. another useful command is using <a href="/mix-tool.html"><code>app mix</code></a> for generating pre-set templates:</p><div class="language-"><pre><code>app mix                     Show available gists to mixin         (Alias &#39;+&#39;)
app mix &lt;name&gt;              Write gist files locally, e.g:        (Alias +init)
app mix init                Create empty .NET Core ServiceStack App
app mix [tag]               Search available gists
app gist &lt;gist-id&gt;          Write all Gist text files to current directory
</code></pre></div><p>View available gists with:</p><div class="language-bash"><pre><code>$ app mix
</code></pre></div><p>Where you can use <code>app mix nginx</code> to generate a common nginx template configuration for reverse proxying .NET Core Apps, making configuring <a href="/netcore-deploy-rsync.html">Linux deployment servers for your .NET Core Apps</a> less tedious.</p><p>In addition to the pre-set templates, you can create your own <a href="https://gist.github.com" target="_blank" rel="noopener noreferrer">public GitHub gist</a> with any number of different files customized for your Environment that anyone can write to their current directory with <strong>the gist id</strong> or <strong>gist URL</strong>:</p><div class="language-bash"><pre><code>$ app gist <span class="token operator">&lt;</span>gist-id<span class="token operator">&gt;</span>
</code></pre></div><h3 id="installing-sharp-apps" tabindex="-1">Installing Sharp Apps <a class="header-anchor" href="#installing-sharp-apps" aria-hidden="true">#</a></h3><p>The app tool also makes it easy to install .NET Core <a href="https://sharpscript.net/docs/sharp-apps" target="_blank" rel="noopener noreferrer">Sharp Apps</a> where you can <code>open</code> apps that are available to <strong>open</strong> or <strong>install</strong> with:</p><div class="language-bash"><pre><code>$ app <span class="token function">open</span>
</code></pre></div><p>By default this will list all <a href="https://sharpscript.net/docs/gist-desktop-apps" target="_blank" rel="noopener noreferrer">Gist Desktop Apps</a> and <a href="https://sharpscript.net/docs/gist-desktop-apps#github-sharp-apps" target="_blank" rel="noopener noreferrer">GitHub Sharp Apps</a> and available:</p><div class="language-"><pre><code>   1. redis       Simple, lightweight, versatile Redis Admin UI                                 by @ServiceStack  [redis]
   2. spirals     Explore and generate different Spirals with SVG                               by @ServiceStack  [svg]
   3. blog        Minimal, multi-user Twitter Auth blogging app                                 by @ServiceStack  [sqlite]
   4. rockwind    Example combining Rockstars website + data-driven Northwind Browser           by @ServiceStack  [example]
   5. redis-html  Redis Admin Viewer developed as server-generated HTML Website                 by @sharp-apps    [redis]
   6. plugins     Extend Apps with Plugins, ServiceStack Services and other C# extensions       by @sharp-apps    [example]
   7. chat        Extensible App with custom AppHost leveraging OAuth + SSE for real-time Chat  by @sharp-apps    [example]
   8. bare        Basic Sharp Content Website                                                   by @ServiceStack  [website]

Usage: app open &lt;name&gt;
</code></pre></div><h2 id="custom-net-core-desktop-apps" tabindex="-1">Custom .NET Core Desktop Apps <a class="header-anchor" href="#custom-net-core-desktop-apps" aria-hidden="true">#</a></h2><p>When running the .NET Core <code>MyApp.dll</code>, it effectively runs an external <code>dotnet MyApp.dll</code> process, pipes the output to the console and launches a CEF browser with the url in <code>ASPNETCORE_URLS</code>.</p><p>The <a href="https://github.com/ServiceStack/ServiceStack.CefGlue/tree/master/tests/ServiceStack.CefGlue.Win64.AspNetCore" target="_blank" rel="noopener noreferrer">ServiceStack.CefGlue.Win64.AspNetCore</a> project shows how to launch both the .NET Core App and a customized CEF browser in the same process by referencing the <a href="https://www.nuget.org/packages/ServiceStack.CefGlue.Win64" target="_blank" rel="noopener noreferrer">ServiceStack.CefGlue.Win64</a> NuGet package in your <strong>win-x64</strong> .NET Core project:</p><div class="language-xml"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Project</span> <span class="token attr-name">Sdk</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Microsoft.NET.Sdk<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PropertyGroup</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>OutputType</span><span class="token punctuation">&gt;</span></span>WinExe<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>OutputType</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TargetFramework</span><span class="token punctuation">&gt;</span></span>netcoreapp3.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TargetFramework</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RuntimeIdentifiers</span><span class="token punctuation">&gt;</span></span>win-x64<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>RuntimeIdentifiers</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Platforms</span><span class="token punctuation">&gt;</span></span>x64<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Platforms</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ApplicationIcon</span><span class="token punctuation">&gt;</span></span>favicon.ico<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ApplicationIcon</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AssemblyName</span><span class="token punctuation">&gt;</span></span>webapp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>AssemblyName</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TrimUnusedDependencies</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TrimUnusedDependencies</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TargetLatestRuntimePatch</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TargetLatestRuntimePatch</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RuntimeFrameworkVersion</span><span class="token punctuation">&gt;</span></span>2.1.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>RuntimeFrameworkVersion</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CopyLocalLockFileAssemblies</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CopyLocalLockFileAssemblies</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>PropertyGroup</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ItemGroup</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PackageReference</span> <span class="token attr-name">Include</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Microsoft.AspNetCore.Server.Kestrel<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Version</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2.*<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PackageReference</span> <span class="token attr-name">Include</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ServiceStack.CefGlue.Win64<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Version</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>5.*<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ItemGroup</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Project</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>Then in your .NET Core App after calling <code>StartAsync()</code> to run your .NET Core App:</p><div class="language-csharp"><pre><code><span class="token keyword">class</span> <span class="token class-name">Program</span>
<span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> args<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">var</span></span> startUrl <span class="token operator">=</span> Environment<span class="token punctuation">.</span><span class="token function">GetEnvironmentVariable</span><span class="token punctuation">(</span><span class="token string">&quot;ASPNETCORE_URLS&quot;</span><span class="token punctuation">)</span> <span class="token operator">??</span> <span class="token string">&quot;http://localhost:5000/&quot;</span><span class="token punctuation">;</span>

        <span class="token class-name"><span class="token keyword">var</span></span> host <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">WebHostBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">UseKestrel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">UseContentRoot</span><span class="token punctuation">(</span>Directory<span class="token punctuation">.</span><span class="token function">GetCurrentDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token generic-method"><span class="token function">UseStartup</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Startup<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">UseUrls</span><span class="token punctuation">(</span>startUrl<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        host<span class="token punctuation">.</span><span class="token function">StartAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token class-name"><span class="token keyword">var</span></span> config <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">CefConfig</span><span class="token punctuation">(</span><span class="token named-parameter punctuation">debug</span><span class="token punctuation">:</span><span class="token boolean">true</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            Args <span class="token operator">=</span> args<span class="token punctuation">,</span>
            StartUrl <span class="token operator">=</span> startUrl<span class="token punctuation">,</span>
            HideConsoleWindow <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        
        <span class="token keyword">return</span> CefPlatformWindows<span class="token punctuation">.</span><span class="token function">Start</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>Call <code>CefPlatformWindows.Start(config)</code> to launch the CEF browser with your preferred customizations in a Windows 64bit OS.</p><p><a href="https://github.com/ServiceStack/ServiceStack.CefGlue/blob/master/src/ServiceStack.CefGlue/CefConfig.cs" target="_blank" rel="noopener noreferrer">CefConfig.cs</a> supports high-level configuration where you can change the Window size and position, icon, title as well as the <code>CefSettings</code> and <code>CefBrowserSettings</code> the browser is launched with and whether to enable or disable the <code>ALT+LEFT/RIGHT</code> Navigation Keys, <code>F5</code> Refresh or <code>F11</code> Chrome Dev Tools.</p><blockquote><p>Eventually we intend to provide different packages using the same high-level <code>CefConfig</code> settings to simplify the effort required to run .NET Core Desktop Apps on different Operating Systems.</p></blockquote><h3 id="upgrading" tabindex="-1">Upgrading <a class="header-anchor" href="#upgrading" aria-hidden="true">#</a></h3><p>A nice benefit from delivering <code>app</code> as a dotnet tool is that updates are effortless as running:</p><div class="language-bash"><pre><code>$ dotnet tool update -g app
</code></pre></div><p>Which will upgrade to a newer CEF and <code>app</code> versions as they&#39;re released. <code>app</code> also lets you know if there&#39;s a newer version available after running the <code>list</code>, <code>gallery</code> and <code>-v</code> commands.</p><h2 id="chromium-desktop-apps" tabindex="-1">Chromium Desktop Apps <a class="header-anchor" href="#chromium-desktop-apps" aria-hidden="true">#</a></h2><p>Chrome Desktop Apps are <a href="https://www.theverge.com/circuitbreaker/2018/5/16/17361696/chrome-os-electron-desktop-applications-apple-microsoft-google" target="_blank" rel="noopener noreferrer">increasingly becoming the preferred approach</a> for developing Desktop Apps today, they benefit from the vast amount of resources Google invests in developing their most important Desktop Application in Chrome and its <a href="https://www.chromium.org" target="_blank" rel="noopener noreferrer">Chromium</a> project which provides the Chrome rendering engine in popular frameworks like <a href="https://bitbucket.org/chromiumembedded/cef" target="_blank" rel="noopener noreferrer">CEF</a> and <a href="https://electronjs.org" target="_blank" rel="noopener noreferrer">Electron</a> that&#39;s used to power many of the actively developed Desktop Apps today like VS Code, GitHub Desktop, <a href="http://Twitch.tv" target="_blank" rel="noopener noreferrer">Twitch.tv</a>, WhatsApp, Slack, Skype, Discord, Signal, Microsoft Teams, Microsoft SQL Operations Studio and <a href="https://electronjs.org/apps" target="_blank" rel="noopener noreferrer">hundreds more</a>. Whilst CEF is used to render Web content in popular native Desktop Apps like Spotify, Stream, Facebook Messenger, Adobe Acrobat, Adobe Creative Cloud, Amazon Music, <a href="http://Battle.net" target="_blank" rel="noopener noreferrer">Battle.net</a>, Evernote as well as game engines like Unity3D and Unreal Engine.</p><p>Ultimately what &quot;Web Desktop Apps&quot; provide most is value, with easy access to advanced Web technologies, rich layout and design techniques, live debugging inspector, navigation, deep-linking and offer <a href="https://dev.to/bitario/in-defense-of-electron" target="_blank" rel="noopener noreferrer">significantly greater ROI</a> when needing to support multiple Operating Systems or an online hosted version of your Software. Even without the code-reuse of targeting multiple platforms they offer a leap in productivity for many classes of Apps, e.g. the depth and velocity of <a href="https://code.visualstudio.com/updates/v1_27" target="_blank" rel="noopener noreferrer">VS Code&#39;s frequent releases</a> are rarely seen in Native Desktop Apps.</p><p>Of course if you can offer software hosted on the Internet that would typically be the preferred approach for increased accessibility, maintainability and reach to your Software. But there&#39;s a number of use-cases that would benefit from a Desktop App, e.g. any offline tasks, management of personal data, access to Native Desktop features, local computing and infrastructure resources or to avoid maintenance and management of a central hosted server.</p><p>Places where you&#39;re using Windows Services could be better served as a unified Packaged Desktop App where you can ensure consistent behavior by using the same tested Chrome rendering engine to run your App, mitigating any environment, versions and cross-browser issues.</p><h2 id="desktop-sharp-apps" tabindex="-1">Desktop Sharp Apps <a class="header-anchor" href="#desktop-sharp-apps" aria-hidden="true">#</a></h2><p>Whilst <code>app</code> is useful for running any Windows .NET Core Desktop App, it provides the greatest value for running .NET Core <a href="https://sharpscript.net/docs/sharp-apps" target="_blank" rel="noopener noreferrer">Sharp Apps</a> - a revolutionary new simplified development model for developing .NET Core Apps which eliminates much of the friction .NET developers have historically had to face. <a href="https://sharpscript.net/docs/sharp-apps" target="_blank" rel="noopener noreferrer">Sharp Apps</a> are built with <a href="https://sharpscript.net" target="_blank" rel="noopener noreferrer">#Script</a> and require no builds/compilation, wait times, complicated build tooling, configuration, incompatible dependencies, dev tools or IDE&#39;s.</p><p>The simplicity of being able to use the same executable for running all <a href="https://sharpscript.net/docs/sharp-apps" target="_blank" rel="noopener noreferrer">Sharp Apps</a> allows us more flexibility to provide even greater value-added functionality than what&#39;s otherwise possible. By contrast Sharp Apps can be developed with any text editor in an iterative, live-development environment that updates itself on save, whilst the App is running. It utilizes a familiar <a href="https://sharpscript.net/docs/syntax" target="_blank" rel="noopener noreferrer">JavaScript and Handlebars syntax</a> in a high-level dynamic language that late-binds to .NET APIs using Compiled Expressions for avoiding runtime reflection.</p><p><strong>Sharp Apps</strong> are highly customizable by nature as they&#39;re delivered and run in source code form, requires no external dependencies or dev tools as they can be edited by any text editor whilst the app is running. They&#39;re also significantly smaller than normal Web Apps since the <code>app</code> tool already contains the shared binaries that all Sharp Apps use - making them easier to deploy, install and update.</p><h3 id="installing-sharp-apps-1" tabindex="-1">Installing Sharp Apps <a class="header-anchor" href="#installing-sharp-apps-1" aria-hidden="true">#</a></h3><p>As <a href="https://github.com/sharp-apps" target="_blank" rel="noopener noreferrer">sharp-apps</a> is the default <code>APP_SOURCE</code>, running:</p><div class="language-bash"><pre><code>$ app list
</code></pre></div><p>Will return the list of publicly available Sharp Apps:</p><div class="language-"><pre><code>   1. bare            Basic Bootstrap + jQuery multi-page Content Website with dynamic Menu Navigation + API pages
   2. blog            Minimal, multi-user Twitter OAuth blogging platform that can create living, powerful pages
   3. chat            Highly extensible App with custom AppHost leveraging OAuth + SSE for real-time Chat
   4. plugins         Extend WebApps with Plugins, Filters, ServiceStack Services and other C# extensions
   5. redis           Redis Admin Viewer developed as Vue Client Single Page App
   6. redis-html      Redis Admin Viewer developed as server-generated HTML Website
   7. rockwind        Example Sharp App combining multi-layout Rockstars website + data-driven Northwind Browser
   8. rockwind-aws    Rockwind Cloud Sharp App on AWS
   9. rockwind-azure  Rockwind Cloud Sharp App on Azure
  10. spirals         Explore and generate different Spirals with SVG

Usage: app install &lt;name&gt;
</code></pre></div><h3 id="include-your-sharp-app-in-the-gallery" tabindex="-1">Include your Sharp App in the Gallery <a class="header-anchor" href="#include-your-sharp-app-in-the-gallery" aria-hidden="true">#</a></h3><p>We&#39;ve also made it easy to list your App in the App gallery, by running:</p><div class="language-bash"><pre><code>$ app gallery
</code></pre></div><p>Which opens the <a href="https://gist.github.com/gistlyn/f555677c98fb235dccadcf6d87b9d098" target="_blank" rel="noopener noreferrer">Sharp App Gallery Gist</a> where you can request for your Web App to be listed in the gallery by commenting on the gist with a link to your project. We&#39;ll review it and if it&#39;s acceptable we&#39;ll fork it in <a href="https://github.com/sharp-apps" target="_blank" rel="noopener noreferrer">sharp-apps</a> which creates a &quot;link&quot; to your project where it will be automatically listed.</p><p>All existing <code>app</code> installs will be immediately able to install your App, which either installs the latest published release or from <strong>master</strong> if it hasn&#39;t published any releases.</p><h3 id="installing-blog" tabindex="-1">Installing blog <a class="header-anchor" href="#installing-blog" aria-hidden="true">#</a></h3><p>Installing an App is then just selecting the <strong>name</strong> of the app to install:</p><div class="language-bash"><pre><code>$ app <span class="token function">install</span> blog
</code></pre></div><p>Where it will download the latest <code>.zip</code> release (<strong>36kb</strong>) and extracts it into a folder named after the project:</p><div class="language-"><pre><code>Installing blog...

Installation successful, run with:

\`\`\`bash
cd blog &amp;&amp; app
</code></pre></div><p>Shortcut: blog\\Blog Web App</p><div class="language-"><pre><code>
Which can either be run on the command-line with:

\`\`\`bash
$ cd blog &amp;&amp; app
</code></pre></div><p>Or by double-clicking the <strong>Blog Web App</strong> Desktop shortcut.</p><p>Running the <strong>blog</strong> App for the first time will create a new <code>blog.sqlite</code> database seeded with meta content describing itself:</p><p><a href="http://blog.web-app.io" target="_blank" rel="noopener noreferrer"><img src="https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/app/blog-screenshot.png" alt=""></a></p><p>Despite it&#39;s small <code>36kb</code> size it <a href="http://blog.web-app.io/#blog-app-features" target="_blank" rel="noopener noreferrer">packs a punch</a>:</p><ul><li>Multi User Blogging Platform - Authenticated with Twitter</li><li>Rich Dynamic Content - Each post can contain the same <a href="https://sharpscript.net" target="_blank" rel="noopener noreferrer">powerful language</a> used to build the app</li><li>Rich Markdown Editor</li><li>Auto saved drafts</li><li>Live Previews - showing rendered content as you type</li><li>Database dump of SQLite tables</li></ul><p>At the bottom of each individual post shows the content used to create it, e.g. the <a href="http://blog.web-app.io/posts/live-document-example" target="_blank" rel="noopener noreferrer">Live Document Example</a> shows an example of maintaining a live budget with a dynamic list of projected savings.</p><h3 id="installing-redis" tabindex="-1">Installing redis <a class="header-anchor" href="#installing-redis" aria-hidden="true">#</a></h3><p>From SQLite powered blog, lets install something entirely different - a Redis Admin UI!</p><div class="language-bash"><pre><code>$ app <span class="token function">install</span> redis
</code></pre></div><p>The <code>redis</code> app includes some additional customizations which controls how the App looks and behaves when run as a Desktop App in its <a href="https://github.com/sharp-apps/redis/blob/master/app.settings" target="_blank" rel="noopener noreferrer">app.settings</a>:</p><div class="language-"><pre><code>debug true
name Redis Web App
redis.connection localhost:6379
icon assets/img/redis.ico
CefConfig { Width:1200, Height:1200 }
</code></pre></div><p>Where <code>icon</code> is used to point to the App Icon and <code>CefConfig</code> is used to configure the CEF browser, allowing any <a href="https://github.com/ServiceStack/ServiceStack.CefGlue/blob/master/src/ServiceStack.CefGlue/CefConfig.cs" target="_blank" rel="noopener noreferrer">CefConfig.cs</a> to be configured using a JavaScript object literal. On install the specified icon and name is used to create the Desktop shortcut:</p><p><img src="https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/app/redis-install.png" alt=""></p><p>Where it will open a <a href="http://redis.web-app.io" target="_blank" rel="noopener noreferrer">Redis Admin UI</a> connected to your <code>localhost:6379</code> redis instance:</p><p><a href="http://redis.web-app.io" target="_blank" rel="noopener noreferrer"><img src="https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/app/redis-screenshot.png" alt=""></a></p><h4 id="customizing-cef-browser" tabindex="-1">Customizing CEF Browser <a class="header-anchor" href="#customizing-cef-browser" aria-hidden="true">#</a></h4><p>Likewise we can also configure any nested <code>CefConfig.CefSettings</code> using an object literal. We can use this to view verbose logging messages by telling <code>app</code> not to hide the Console Window and changing CEF&#39;s LogSeverity to Verbose:</p><div class="language-"><pre><code>CefConfig { Width:1200, Height:1200, HideConsoleWindow:false }
CefConfig.CefSettings { LogSeverity:&#39;Verbose&#39; }
</code></pre></div><p>Now when running the App we can see the CEF&#39;s verbose logging messages mixed in with request logs from .NET Core:</p><p><img src="https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/app/app-cef-verbose.png" alt=""></p><p>Which in this case shows messages written to Chrome&#39;s <code>console.log()</code> which is from Vue.js telling us we&#39;re running a development build of Vue.js. To run the production version of our app we can either set <code>debug false</code> in the <code>app.settings</code> or by running <code>app --release</code> which takes precedence:</p><div class="language-bash"><pre><code>$ app -r
</code></pre></div><p>This flag changes whether to use <code>vue.js</code> or <code>vue.min.js</code> in the <a href="https://github.com/sharp-apps/redis/blob/master/_layout.html" target="_blank" rel="noopener noreferrer">_layout.html</a> page:</p>`,112),i=n("div",null,[n("div",{class:"language-html"},[n("pre",{"v-pre":""},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("script")]),a(),n("span",{class:"token attr-name"},"src"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("../assets/js/vue{{ "),n("span",{class:"token punctuation"},"'"),a(".min"),n("span",{class:"token punctuation"},"'"),a(" | if(!debug) }}.js"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token script"}),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("script")]),n("span",{class:"token punctuation"},">")]),a(`
`)])])])],-1),l=s(`<blockquote><p>To instead force running the App in debug mode use <code>app --debug</code> or <code>app -d</code></p></blockquote><h4 id="compact-and-easy-to-customize" tabindex="-1">Compact and easy to Customize <a class="header-anchor" href="#compact-and-easy-to-customize" aria-hidden="true">#</a></h4><p>The <code>redis</code> App has all the features you&#39;d expect from a Redis Admin UI:</p><ul><li>Change connection to any Redis instance / database</li><li>Live Search of Redis Keyspace (updated as you type)</li><li>Management of all Redis&#39;s core String, List, Set, Sorted Set and Hash Key types</li><li>Execute any arbitrary Redis command</li><li>Display blobbed JSON value data in human-friendly UI</li><li>Redis Server Info List</li><li>Breadcrumbs</li><li>Deep Linking + Browser Navigation (ALT+LEFT Back, ALT+RIGHT Forward, F5 Refresh)</li></ul><p>What differs this from other Redis Admin UI&#39;s is its terse implementation where its entire custom UI is contained within a single <a href="https://github.com/sharp-apps/redis/blob/master/index.html" target="_blank" rel="noopener noreferrer">index.html</a> page thanks to the expressiveness of both Vue and <code>#Script</code>.</p><p>Its minimal size makes it easy for curious and advanced Users to customize and add features since they can make them locally and see their changes in real-time. Its simpler implementation makes contributions easier as they only have 1 page to edit and can paste their changes directly using <a href="https://github.com/sharp-apps/redis/edit/master/index.html" target="_blank" rel="noopener noreferrer">GitHub&#39;s Edit UI</a> to easily create a pull-request where it can be reviewed and merged.</p><h3 id="simple-updates" tabindex="-1">Simple Updates <a class="header-anchor" href="#simple-updates" aria-hidden="true">#</a></h3><p>Thanks to the easy distribution all users can update to the latest version of any installed App by re-running:</p><div class="language-bash"><pre><code>$ app <span class="token function">install</span> redis
</code></pre></div><p>Which will replace their existing version with the latest release.</p><h2 id="creating-desktop-sharp-apps" tabindex="-1">Creating Desktop Sharp Apps <a class="header-anchor" href="#creating-desktop-sharp-apps" aria-hidden="true">#</a></h2><p>Now that we&#39;ve seen how easy it is to Install and use existing <a href="https://sharpscript.net/docs/sharp-apps" target="_blank" rel="noopener noreferrer">Sharp Apps</a>, lets walk through how easy it to create one of our own.</p>`,12),r=n("iframe",{width:"896",height:"525",src:"https://www.youtube.com/embed/Cf-vstYXrmY",frameborder:"0",allow:"autoplay; encrypted-media",allowfullscreen:""},null,-1),u=s(`<p>For this example we&#39;ll create a small App that leverages one of the advanced Web technologies in SVG that would be cumbersome to create using a native GUI toolkit. To start let&#39;s create a folder for our app called <code>spirals</code> and initialize and empty Sharp App with <code>app init</code>:</p><div class="language-bash"><pre><code>$ <span class="token function">mkdir</span> spirals
$ <span class="token builtin class-name">cd</span> spirals <span class="token operator">&amp;&amp;</span> app init
</code></pre></div><p>We could have started from one of the <a href="https://sharpscript.net/docs/sharp-apps#getting-started" target="_blank" rel="noopener noreferrer">more complete Sharp App Templates</a> but this gives us a minimal App generated from <a href="https://gist.github.com/gistlyn/5c9ee9031e53cd8f85bd0e14881ddaa8" target="_blank" rel="noopener noreferrer">this gist</a>.</p><p>Now let&#39;s open the folder up for editing in our preferred text editor, VS Code:</p><div class="language-bash"><pre><code>$ code <span class="token builtin class-name">.</span>
</code></pre></div><p><img src="https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/app/app-init-code.png" alt=""></p><p>To start developing our App we just have to run <code>app</code> on the command-line which in VS Code we can open with <code>Terminal &gt; New Terminal</code> or the <strong>Ctrl+Shift+\`</strong> shortcut key. This will open our minimal App:</p><p><img src="https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/app/app-init-run.png" alt=""></p><p>The <a href="https://gist.github.com/gistlyn/5c9ee9031e53cd8f85bd0e14881ddaa8#file-_layout-html" target="_blank" rel="noopener noreferrer">_layout.html</a> shown above is currently where all the action is which we&#39;ll quickly walk through:</p>`,9),k=n("div",null,[n("div",{class:"language-html"},[n("pre",{"v-pre":""},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("i")]),a(),n("span",{class:"token attr-name"},"hidden"),n("span",{class:"token punctuation"},">")]),a("{{ '/js/hot-fileloader.js' | ifDebugIncludeScript }}"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("i")]),n("span",{class:"token punctuation"},">")]),a(`
`)])])])],-1),d=n("p",null,[a("This gives us a Live Development experience in "),n("code",null,"debug"),a(" mode where it injects a script that will detect file changes "),n("strong",null,"on Save"),a(" and automatically reload the page at the current scroll offset.")],-1),h=n("div",null,[n("div",{class:"language-html"},[n("pre",{"v-pre":""},[n("code",null,`{{ 'menu' | partial({ 
        '/':           'Home',
        '/metadata':   '/metadata',
    }) 
}}
`)])])],-1),g=n("p",null,[a("This evaluates the included "),n("a",{href:"https://gist.github.com/gistlyn/5c9ee9031e53cd8f85bd0e14881ddaa8#file-_menu-partial-html",target:"_blank",rel:"noopener noreferrer"},"_menu-partial.html"),a(" with the links to different routes we want in our Menu on top of the page.")],-1),b=n("div",null,[n("div",{class:"language-html"},[n("pre",{"v-pre":""},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("div")]),a(),n("span",{class:"token attr-name"},"id"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("body"),n("span",{class:"token punctuation"},'"')]),a(),n("span",{class:"token attr-name"},"class"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("container"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),a(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("h2")]),n("span",{class:"token punctuation"},">")]),a("{{title}}"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("h2")]),n("span",{class:"token punctuation"},">")]),a(`
    
    {{ page }}
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("div")]),n("span",{class:"token punctuation"},">")]),a(`
`)])])])],-1),m=n("p",null,"The body of our App is used to render the title and contents of each page.",-1),v=n("div",null,[n("div",{class:"language-html"},[n("pre",{"v-pre":""},[n("code",null,`{{ scripts | raw }}
`)])])],-1),f=s(`<p>If pages include any <code>scripts</code> they&#39;ll be rendered in the bottom of the page.</p><blockquote><p>The <code>raw</code> filter prevents the output from being HTML encoded.</p></blockquote><p>The other 2 files included is <a href="https://gist.github.com/gistlyn/5c9ee9031e53cd8f85bd0e14881ddaa8#file-app-settings" target="_blank" rel="noopener noreferrer">app.settings</a> containing the name of our App and <code>debug true</code> setting to run our App in Debug mode:</p><div class="language-bash"><pre><code>debug <span class="token boolean">true</span>
name My App
</code></pre></div><p>The template only has one page <a href="https://gist.github.com/gistlyn/5c9ee9031e53cd8f85bd0e14881ddaa8#file-index-html" target="_blank" rel="noopener noreferrer">index.html</a> containing the <code>title</code> of the page in a page argument which the <code>_layout.html</code> has access to without evaluating the page, anything after is the page contents:</p><div class="language-html"><pre><code><span class="token comment">&lt;!-- 
title: Home Page
--&gt;</span>

This is the home page.
</code></pre></div><p>We can now <strong>save</strong> changes to any of the pages and see our changes reflected instantly in the running App. But we also have access to an even better live-development experience than <strong>preview as you save</strong> with <strong>preview as you type</strong> \u{1F603}</p><h3 id="live-previews" tabindex="-1">Live Previews <a class="header-anchor" href="#live-previews" aria-hidden="true">#</a></h3><p>To take advantage of this we can exploit one of the features available in all ServiceStack Apps by clicking on <code>/metadata</code> Menu Item to view the <a href="/metadata-page.html">Metadata page</a> containing links to our Apps Services, links to Metadata Services and any registered plugins:</p><p><img src="https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/app/app-init-metadata.png" alt=""></p><p>Then click on <a href="/debugging.html#debug-inspector">Debug Inspector</a> to open a real-time REPL, which is normally used to get rich insights from a running App:</p><p><img src="https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/app/app-init-debug-inspector.png" alt=""></p><p>But can also be used for executing ad hoc Template Scripts. Here we can drop in any mix of HTML and templates to view results in real-time.</p><p>In this case we want to generate SVG spirals by drawing a <code>circle</code> at each point along a <a href="https://stackoverflow.com/a/6824451/85785" target="_blank" rel="noopener noreferrer">Archimedean spiral function</a> which was initially used as a base and with the help of the live REPL was quickly able to apply some constants to draw the <strong>tall &amp; narrow</strong> spirals we want:</p>`,14),w=n("div",null,[n("div",{class:"language-hbs"},[n("pre",{"v-pre":""},[n("code",null,[n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"svg"),a(),n("span",{class:"token variable"},"height"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"640"'),a(),n("span",{class:"token variable"},"width"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"240"'),n("span",{class:"token punctuation"},">"),a(`
`),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"#"),n("span",{class:"token variable"},"each"),a(),n("span",{class:"token variable"},"range"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"180"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token number"},"120"),a(),n("span",{class:"token punctuation"},"+"),a(),n("span",{class:"token number"},"100"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token variable"},"cos"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token variable"},"it"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token number"},"0.02827"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"|"),a(),n("span",{class:"token variable"},"assignTo"),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token variable"},"x"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token number"},"320"),a(),n("span",{class:"token punctuation"},"+"),a(),n("span",{class:"token number"},"300"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token variable"},"sin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token variable"},"it"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token number"},"0.02827"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"|"),a(),n("span",{class:"token variable"},"assignTo"),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token variable"},"y"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"circle"),a(),n("span",{class:"token variable"},"cx"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"{{x}}"'),a(),n("span",{class:"token variable"},"cy"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"{{y}}"'),a(),n("span",{class:"token variable"},"r"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"10"'),a(),n("span",{class:"token variable"},"fill"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"rgb(0,100,0)"'),a(),n("span",{class:"token variable"},"stroke"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"black"'),a(),n("span",{class:"token variable"},"stroke-width"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"1"'),n("span",{class:"token block keyword"},"/>"),a(`
`),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"each"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(` 
`),n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"svg"),n("span",{class:"token punctuation"},">"),a(`
`)])])])],-1),y=s('<p>We can further explore different spirals by modifying <code>x</code> and <code>y</code> cos/sin constants:</p><p><img src="https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/app/spirals/single.gif" alt=""></p><p>Out of the spirals we&#39;ve seen lets pick one of the interesting ones and add it to our <code>index.html</code>, let&#39;s also enhance them by modifying the <code>fill</code> and <code>radius</code> properties with different weightings and compare them side-by-side:</p>',3),_=n("div",null,[n("div",{class:"language-hbs"},[n("pre",{"v-pre":""},[n("code",null,[n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"svg"),a(),n("span",{class:"token variable"},"height"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"640"'),a(),n("span",{class:"token variable"},"width"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"240"'),n("span",{class:"token punctuation"},">"),a(`
`),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"#"),n("span",{class:"token variable"},"each"),a(),n("span",{class:"token variable"},"range"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"180"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token number"},"120"),a(),n("span",{class:"token punctuation"},"+"),a(),n("span",{class:"token number"},"100"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token variable"},"cos"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token variable"},"it"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token number"},"0.02827"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"|"),a(),n("span",{class:"token variable"},"assignTo"),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token variable"},"x"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token number"},"320"),a(),n("span",{class:"token punctuation"},"+"),a(),n("span",{class:"token number"},"300"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token variable"},"sin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token variable"},"it"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token number"},"0.02827"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"|"),a(),n("span",{class:"token variable"},"assignTo"),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token variable"},"y"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"circle"),a(),n("span",{class:"token variable"},"cx"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"{{x}}"'),a(),n("span",{class:"token variable"},"cy"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"{{y}}"'),a(),n("span",{class:"token variable"},"r"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"10"'),a(),n("span",{class:"token variable"},"fill"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"rgb(0,100,0)"'),a(),n("span",{class:"token variable"},"stroke"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"black"'),a(),n("span",{class:"token variable"},"stroke-width"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"1"'),n("span",{class:"token block keyword"},"/>"),a(`
`),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"each"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(` 
`),n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"svg"),n("span",{class:"token punctuation"},">"),a(`

`),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"svg"),a(),n("span",{class:"token variable"},"height"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"640"'),a(),n("span",{class:"token variable"},"width"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"240"'),n("span",{class:"token punctuation"},">"),a(`
`),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"#"),n("span",{class:"token variable"},"each"),a(),n("span",{class:"token variable"},"range"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"180"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token number"},"120"),a(),n("span",{class:"token punctuation"},"+"),a(),n("span",{class:"token number"},"100"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token variable"},"cos"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token variable"},"it"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token number"},"0.02827"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"|"),a(),n("span",{class:"token variable"},"assignTo"),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token variable"},"x"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token number"},"320"),a(),n("span",{class:"token punctuation"},"+"),a(),n("span",{class:"token number"},"300"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token variable"},"sin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token variable"},"it"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token number"},"0.02827"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"|"),a(),n("span",{class:"token variable"},"assignTo"),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token variable"},"y"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"circle"),a(),n("span",{class:"token variable"},"cx"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"{{x}}"'),a(),n("span",{class:"token variable"},"cy"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"{{y}}"'),a(),n("span",{class:"token variable"},"r"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"10"'),a(),n("span",{class:"token variable"},"fill"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"rgb(0,{{it*1.4}},0)"'),a(),n("span",{class:"token variable"},"stroke"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"black"'),a(),n("span",{class:"token variable"},"stroke-width"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"1"'),n("span",{class:"token block keyword"},"/>"),a(`
`),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"each"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(` 
`),n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"svg"),n("span",{class:"token punctuation"},">"),a(`

`),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"svg"),a(),n("span",{class:"token variable"},"height"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"640"'),a(),n("span",{class:"token variable"},"width"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"240"'),n("span",{class:"token punctuation"},">"),a(`
`),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"#"),n("span",{class:"token variable"},"each"),a(),n("span",{class:"token variable"},"range"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"180"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token number"},"120"),a(),n("span",{class:"token punctuation"},"+"),a(),n("span",{class:"token number"},"100"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token variable"},"cos"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token variable"},"it"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token number"},"0.02827"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"|"),a(),n("span",{class:"token variable"},"assignTo"),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token variable"},"x"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token number"},"320"),a(),n("span",{class:"token punctuation"},"+"),a(),n("span",{class:"token number"},"300"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token variable"},"sin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token variable"},"it"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token number"},"0.02827"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"|"),a(),n("span",{class:"token variable"},"assignTo"),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token variable"},"y"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"circle"),a(),n("span",{class:"token variable"},"cx"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"{{x}}"'),a(),n("span",{class:"token variable"},"cy"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"{{y}}"'),a(),n("span",{class:"token variable"},"r"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"{{it*0.1}}"'),a(),n("span",{class:"token variable"},"fill"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"rgb(0,{{it*1.4}},0)"'),a(),n("span",{class:"token variable"},"stroke"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"black"'),a(),n("span",{class:"token variable"},"stroke-width"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"1"'),n("span",{class:"token block keyword"},"/>"),a(`
`),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"each"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(` 
`),n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"svg"),n("span",{class:"token punctuation"},">"),a(`
`)])])])],-1),A=s('<blockquote><p>You can use <code>ALT+LEFT</code> + <code>ALT+RIGHT</code> shortcut keys to navigate back and forward to the home page.</p></blockquote><p>Great, hitting <code>save</code> again will show us the effects of each change side-by-size:</p><p><a href="http://spirals.web-app.io" target="_blank" rel="noopener noreferrer"><img src="https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/app/spirals/single-fill-radius.png" alt=""></a></p><h3 id="multiplying" tabindex="-1">Multiplying <a class="header-anchor" href="#multiplying" aria-hidden="true">#</a></h3><p>Now that we have the effect that we want, let&#39;s go back to the debug inspector and see what a number of different spirals look side-by-side by wrapping our last svg snippet in another each block:</p>',5),S=n("div",null,[n("div",{class:"language-hbs"},[n("pre",{"v-pre":""},[n("code",null,[n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"table"),n("span",{class:"token punctuation"},">"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"#"),n("span",{class:"token variable"},"each"),a(),n("span",{class:"token variable"},"i"),a(),n("span",{class:"token variable"},"in"),a(),n("span",{class:"token variable"},"range"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"svg"),a(),n("span",{class:"token variable"},"height"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"640"'),a(),n("span",{class:"token variable"},"width"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"240"'),n("span",{class:"token punctuation"},">"),a(`
`),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"#"),n("span",{class:"token variable"},"each"),a(),n("span",{class:"token variable"},"range"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"180"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token number"},"120"),a(),n("span",{class:"token punctuation"},"+"),a(),n("span",{class:"token number"},"100"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token variable"},"cos"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),a("   "),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token variable"},"it"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token number"},"0.02827"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"|"),a(),n("span",{class:"token variable"},"assignTo"),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token variable"},"x"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token number"},"320"),a(),n("span",{class:"token punctuation"},"+"),a(),n("span",{class:"token number"},"300"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token variable"},"sin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"+"),n("span",{class:"token variable"},"i"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token variable"},"it"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token number"},"0.02827"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"|"),a(),n("span",{class:"token variable"},"assignTo"),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token variable"},"y"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"circle"),a(),n("span",{class:"token variable"},"cx"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"{{x}}"'),a(),n("span",{class:"token variable"},"cy"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"{{y}}"'),a(),n("span",{class:"token variable"},"r"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"{{it*0.1}}"'),a(),n("span",{class:"token variable"},"fill"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"rgb(0,{{it*1.4}},0)"'),a(),n("span",{class:"token variable"},"stroke"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"black"'),a(),n("span",{class:"token variable"},"stroke-width"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"1"'),n("span",{class:"token block keyword"},"/>"),a(`
`),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"each"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(` 
`),n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"svg"),n("span",{class:"token punctuation"},">"),a(`
`),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"each"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
`)])])])],-1),T=n("p",null,[a("We can prefix our snippet with "),n("code",null,"<table>"),a(" as a temp workaround to force them to display side-by-side in Debug Inspector. In order to for spirals to distort we'll only change 1 of the axis, as they're tall & narrow lets explore along the y-axis:")],-1),x=n("p",null,[n("img",{src:"https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/app/spirals/multi-01.png",alt:""})],-1),C=n("p",null,[a("We're all setup to begin our pattern explorer expedition where we can navigate across the "),n("code",null,"range()"),a(" index both incrementally and logarithmically across to quickly discover new aesthetically pleasing patterns \u{1F603}")],-1),E=n("p",null,[n("img",{src:"https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/app/spirals/multi.gif",alt:""})],-1),N=n("p",null,[a("Let's go back to our App and embody our multi spiral viewer in a new "),n("code",null,"multi.html"),a(" page containing:")],-1),W=n("div",null,[n("div",{class:"language-hbs"},[n("pre",{"v-pre":""},[n("code",null,[n("span",{class:"token delimiter punctuation"},"{{"),n("span",{class:"token block keyword"},"#each"),a(),n("span",{class:"token variable"},"i"),a(),n("span",{class:"token variable"},"in"),a(),n("span",{class:"token variable"},"range"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"svg"),a(),n("span",{class:"token variable"},"height"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"640"'),a(),n("span",{class:"token variable"},"width"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"240"'),n("span",{class:"token punctuation"},">"),a(`
`),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"#"),n("span",{class:"token variable"},"each"),a(),n("span",{class:"token variable"},"range"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"180"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token number"},"120"),a(),n("span",{class:"token punctuation"},"+"),a(),n("span",{class:"token number"},"100"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token variable"},"cos"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},")"),a("   "),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token variable"},"it"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token number"},"0.02827"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"|"),a(),n("span",{class:"token variable"},"assignTo"),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token variable"},"x"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token number"},"320"),a(),n("span",{class:"token punctuation"},"+"),a(),n("span",{class:"token number"},"300"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token variable"},"sin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"+"),n("span",{class:"token variable"},"i"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token variable"},"it"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token number"},"0.02827"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"|"),a(),n("span",{class:"token variable"},"assignTo"),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token variable"},"y"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"circle"),a(),n("span",{class:"token variable"},"cx"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"{{x}}"'),a(),n("span",{class:"token variable"},"cy"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"{{y}}"'),a(),n("span",{class:"token variable"},"r"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"{{it*0.1}}"'),a(),n("span",{class:"token variable"},"fill"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"rgb(0,{{it*1.4}},0)"'),a(),n("span",{class:"token variable"},"stroke"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"black"'),a(),n("span",{class:"token variable"},"stroke-width"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"1"'),n("span",{class:"token block keyword"},"/>"),a(`
`),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"each"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(` 
`),n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"svg"),n("span",{class:"token punctuation"},">"),a(`
`),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"each"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
`)])])])],-1),D=n("p",null,[a("Then make it navigable by adding a link to our new page in the "),n("code",null,"_layout.html"),a(" menu:")],-1),I=n("div",null,[n("div",{class:"language-hbs"},[n("pre",{"v-pre":""},[n("code",null,[n("span",{class:"token delimiter punctuation"},"{{"),a(),n("span",{class:"token string"},"'menu'"),a(),n("span",{class:"token punctuation"},"|"),a(),n("span",{class:"token variable"},"partial"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(`
     `),n("span",{class:"token string"},"'/'"),n("span",{class:"token punctuation"},":"),a("           "),n("span",{class:"token string"},"'Home'"),n("span",{class:"token punctuation"},","),a(`
     `),n("span",{class:"token string"},"'/multi'"),n("span",{class:"token punctuation"},":"),a("      "),n("span",{class:"token string"},"'Multi'"),n("span",{class:"token punctuation"},","),a(`
     `),n("span",{class:"token string"},"'/metadata'"),n("span",{class:"token punctuation"},":"),a("   "),n("span",{class:"token string"},"'/metadata'"),n("span",{class:"token punctuation"},","),a(`
   `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
`)])])])],-1),R=s('<p>Where upon save, our creation will reveal itself in the App&#39;s menu:</p><p><a href="http://spirals.web-app.io/multi" target="_blank" rel="noopener noreferrer"><img src="https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/app/spirals/multi.png" alt=""></a></p><h3 id="animating" tabindex="-1">Animating <a class="header-anchor" href="#animating" aria-hidden="true">#</a></h3><p>With the help of SVG&#39;s <a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Element/animate" target="_blank" rel="noopener noreferrer"><code>&lt;animate&gt;</code></a> we can easily bring our spirals to life by animating different properties on the generated SVG circles.</p><p>As we have to wait for the animation to complete before trying out different effects, we won&#39;t benefit from Debug Inspector&#39;s live REPL so let&#39;s jump straight in and create a new <code>animated.html</code> and add a link to it in the menu:</p>',5),P=n("div",null,[n("div",{class:"language-hbs"},[n("pre",{"v-pre":""},[n("code",null,[n("span",{class:"token delimiter punctuation"},"{{"),a(),n("span",{class:"token string"},"'menu'"),a(),n("span",{class:"token punctuation"},"|"),a(),n("span",{class:"token variable"},"partial"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(`
     `),n("span",{class:"token string"},"'/'"),n("span",{class:"token punctuation"},":"),a("           "),n("span",{class:"token string"},"'Home'"),n("span",{class:"token punctuation"},","),a(`
     `),n("span",{class:"token string"},"'/multi'"),n("span",{class:"token punctuation"},":"),a("      "),n("span",{class:"token string"},"'Multi'"),n("span",{class:"token punctuation"},","),a(`
     `),n("span",{class:"token string"},"'/animated'"),n("span",{class:"token punctuation"},":"),a("   "),n("span",{class:"token string"},"'Animated'"),n("span",{class:"token punctuation"},","),a(`
     `),n("span",{class:"token string"},"'/metadata'"),n("span",{class:"token punctuation"},":"),a("   "),n("span",{class:"token string"},"'/metadata'"),n("span",{class:"token punctuation"},","),a(`
   `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
`)])])])],-1),$=n("p",null,[a("Then populate it with a copy of "),n("code",null,"multi.html"),a(" and sprinkle in some "),n("code",null,"<animate>"),a(" elements to cycle through different "),n("code",null,"<circle>"),a(` property values. We're entering the "creative process" of our App where we can try out different values, hit `),n("strong",null,"Save"),a(" and watch the effects of our tuning eventually arriving at a combination we like:")],-1),q=n("div",null,[n("div",{class:"language-hbs"},[n("pre",{"v-pre":""},[n("code",null,[n("span",{class:"token delimiter punctuation"},"{{"),n("span",{class:"token block keyword"},"#each"),a(),n("span",{class:"token variable"},"i"),a(),n("span",{class:"token variable"},"in"),a(),n("span",{class:"token variable"},"range"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"svg"),a(),n("span",{class:"token variable"},"height"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"640"'),a(),n("span",{class:"token variable"},"width"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"240"'),n("span",{class:"token punctuation"},">"),a(`
`),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"#"),n("span",{class:"token variable"},"each"),a(),n("span",{class:"token variable"},"range"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"180"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token number"},"120"),a(),n("span",{class:"token punctuation"},"+"),a(),n("span",{class:"token number"},"100"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token variable"},"cos"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},")"),a("   "),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token variable"},"it"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token number"},"0.02827"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"|"),a(),n("span",{class:"token variable"},"assignTo"),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token variable"},"x"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token number"},"320"),a(),n("span",{class:"token punctuation"},"+"),a(),n("span",{class:"token number"},"300"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token variable"},"sin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"+"),n("span",{class:"token variable"},"i"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token variable"},"it"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token number"},"0.02827"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"|"),a(),n("span",{class:"token variable"},"assignTo"),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token variable"},"y"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"circle"),a(),n("span",{class:"token variable"},"cx"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"{{x}}"'),a(),n("span",{class:"token variable"},"cy"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"{{y}}"'),a(),n("span",{class:"token variable"},"r"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"{{it*0.1}}"'),a(),n("span",{class:"token variable"},"fill"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"rgb(0,{{it*1.4}},0)"'),a(),n("span",{class:"token variable"},"stroke"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"black"'),a(),n("span",{class:"token variable"},"stroke-width"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"1"'),n("span",{class:"token punctuation"},">"),a(`
    `),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"animate"),a(),n("span",{class:"token variable"},"attributeName"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"fill"'),a(),n("span",{class:"token variable"},"values"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"green;yellow;red;green"'),a(),n("span",{class:"token variable"},"dur"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"{{it%10}}s"'),a(),n("span",{class:"token variable"},"repeatCount"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"indefinite"'),a(),n("span",{class:"token block keyword"},"/>"),a(`
    `),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"animate"),a(),n("span",{class:"token variable"},"attributeName"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"opacity"'),a(),n("span",{class:"token variable"},"values"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"1;.5;1"'),a(),n("span",{class:"token variable"},"dur"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"5s"'),a(),n("span",{class:"token variable"},"repeatCount"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"indefinite"'),a(),n("span",{class:"token block keyword"},"/>"),a(`
    `),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"animate"),a(),n("span",{class:"token variable"},"attributeName"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"cx"'),a(),n("span",{class:"token variable"},"values"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"{{x}};{{x*1.02}};{{x*0.98}};{{x}}"'),a(),n("span",{class:"token variable"},"dur"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"3s"'),a(),n("span",{class:"token variable"},"repeatCount"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"indefinite"'),a(),n("span",{class:"token block keyword"},"/>"),a(`
    `),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"animate"),a(),n("span",{class:"token variable"},"attributeName"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"cy"'),a(),n("span",{class:"token variable"},"values"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"{{y}};{{y*1.02}};{{y*0.98}};{{y}}"'),a(),n("span",{class:"token variable"},"dur"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"3s"'),a(),n("span",{class:"token variable"},"repeatCount"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"indefinite"'),a(),n("span",{class:"token block keyword"},"/>"),a(`
  `),n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"circle"),n("span",{class:"token punctuation"},">"),a(`
`),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"each"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(` 
`),n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"svg"),n("span",{class:"token punctuation"},">"),a(`
`),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"each"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
`)])])])],-1),G=s('<p>Although hard to capture in a screenshot, we can sit back and watch our living, breathing Spirals \u{1F603}</p><p><a href="http://spirals.web-app.io/animated?from=0" target="_blank" rel="noopener noreferrer"><img src="https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/app/spirals/animated.png" alt=""></a></p><blockquote><p>Checkout <a href="http://spirals.web-app.io/animated?from=0" target="_blank" rel="noopener noreferrer">spirals.web-app.io</a> for the animated version.</p></blockquote><h3 id="navigating" tabindex="-1">Navigating <a class="header-anchor" href="#navigating" aria-hidden="true">#</a></h3><p>Lets expand our App beyond these static Spirals by enabling some navigation, this is easily done by adding the snippet below on the top of the home page:</p>',5),L=n("div",null,[n("div",{class:"language-hbs"},[n("pre",{"v-pre":""},[n("code",null,[n("span",{class:"token delimiter punctuation"},"{{"),a(),n("span",{class:"token variable"},"from"),a(),n("span",{class:"token variable"},"??"),a(),n("span",{class:"token number"},"1"),a(),n("span",{class:"token punctuation"},"|"),a(),n("span",{class:"token variable"},"toInt"),a(),n("span",{class:"token punctuation"},"|"),a(),n("span",{class:"token variable"},"assignTo"),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token variable"},"from"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"div"),a(),n("span",{class:"token variable"},"style"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"text-align:right;margin:-54px 0 30px 0"'),n("span",{class:"token punctuation"},">"),a(`
  `),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"#"),n("span",{class:"token variable"},"if"),a(),n("span",{class:"token variable"},"from"),a(),n("span",{class:"token punctuation"},">"),a(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"a"),a(),n("span",{class:"token variable"},"href"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"?from={{ max(from-1,0) }}"'),a(),n("span",{class:"token variable"},"title"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"{{max(from-1,0)}}"'),n("span",{class:"token punctuation"},">"),n("span",{class:"token variable"},"previous"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"a"),n("span",{class:"token punctuation"},">"),a(),n("span",{class:"token punctuation"},"|"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"if"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token variable"},"from"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token punctuation"},"|"),a(),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"a"),a(),n("span",{class:"token variable"},"href"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"?from={{ from+1 }}"'),a(),n("span",{class:"token variable"},"title"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"{{max(from-1,0)}}"'),n("span",{class:"token punctuation"},">"),n("span",{class:"token variable"},"next"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"a"),n("span",{class:"token punctuation"},">"),a(`
`),n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"div"),n("span",{class:"token punctuation"},">"),a(`
`)])])])],-1),U=n("p",null,[a("Whilst the "),n("code",null,"multi.html"),a(" and "),n("code",null,"animated.html"),a(" pages can skip by 4:")],-1),z=n("div",null,[n("div",{class:"language-hbs"},[n("pre",{"v-pre":""},[n("code",null,[n("span",{class:"token delimiter punctuation"},"{{"),a(),n("span",{class:"token variable"},"from"),a(),n("span",{class:"token variable"},"??"),a(),n("span",{class:"token number"},"1"),a(),n("span",{class:"token punctuation"},"|"),a(),n("span",{class:"token variable"},"toInt"),a(),n("span",{class:"token punctuation"},"|"),a(),n("span",{class:"token variable"},"assignTo"),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token variable"},"from"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"div"),a(),n("span",{class:"token variable"},"style"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"text-align:right;margin:-54px 0 30px 0"'),n("span",{class:"token punctuation"},">"),a(`
  `),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"#"),n("span",{class:"token variable"},"if"),a(),n("span",{class:"token variable"},"from"),a(),n("span",{class:"token punctuation"},">"),a(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"a"),a(),n("span",{class:"token variable"},"href"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"?from={{ max(from-4,0) }}"'),a(),n("span",{class:"token variable"},"title"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"{{max(from-1,0)}}"'),n("span",{class:"token punctuation"},">"),n("span",{class:"token variable"},"previous"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"a"),n("span",{class:"token punctuation"},">"),a(),n("span",{class:"token punctuation"},"|"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"if"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token variable"},"from"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token punctuation"},"|"),a(),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"a"),a(),n("span",{class:"token variable"},"href"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"?from={{ from+4 }}"'),a(),n("span",{class:"token variable"},"title"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"{{max(from-1,0)}}"'),n("span",{class:"token punctuation"},">"),n("span",{class:"token variable"},"next"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"a"),n("span",{class:"token punctuation"},">"),a(`
`),n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"div"),n("span",{class:"token punctuation"},">"),a(`
`)])])])],-1),F=n("p",null,[a("Then changing the "),n("code",null,"index.html"),a(" SVG fragment to use the "),n("code",null,"from"),a(" value on the y-axis:")],-1),V=n("div",null,[n("div",{class:"language-hbs"},[n("pre",{"v-pre":""},[n("code",null,[n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"svg"),a(),n("span",{class:"token variable"},"height"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"640"'),a(),n("span",{class:"token variable"},"width"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"240"'),n("span",{class:"token punctuation"},">"),a(`
`),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"#"),n("span",{class:"token variable"},"each"),a(),n("span",{class:"token variable"},"range"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"180"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token number"},"120"),a(),n("span",{class:"token punctuation"},"+"),a(),n("span",{class:"token number"},"100"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token variable"},"cos"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},")"),a("    "),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token variable"},"it"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token number"},"0.02827"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"|"),a(),n("span",{class:"token variable"},"assignTo"),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token variable"},"x"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token number"},"320"),a(),n("span",{class:"token punctuation"},"+"),a(),n("span",{class:"token number"},"300"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token variable"},"sin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token variable"},"from"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token variable"},"it"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token number"},"0.02827"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"|"),a(),n("span",{class:"token variable"},"assignTo"),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token variable"},"y"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"circle"),a(),n("span",{class:"token variable"},"cx"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"{{x}}"'),a(),n("span",{class:"token variable"},"cy"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"{{y}}"'),a(),n("span",{class:"token variable"},"r"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"10"'),a(),n("span",{class:"token variable"},"fill"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"rgb(0,100,0)"'),a(),n("span",{class:"token variable"},"stroke"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"black"'),a(),n("span",{class:"token variable"},"stroke-width"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"1"'),n("span",{class:"token block keyword"},"/>"),a(`
`),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"each"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(` 
`),n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"svg"),n("span",{class:"token punctuation"},">"),a(`
`)])])])],-1),H=n("p",null,[a("Whilst the "),n("code",null,"multi.html"),a(" and "),n("code",null,"animated.html"),a(" pages can use it in its "),n("code",null,"range(from, 4)"),a(" function:")],-1),j=n("div",null,[n("div",{class:"language-hbs"},[n("pre",{"v-pre":""},[n("code",null,[n("span",{class:"token delimiter punctuation"},"{{"),n("span",{class:"token block keyword"},"#each"),a(),n("span",{class:"token variable"},"i"),a(),n("span",{class:"token variable"},"in"),a(),n("span",{class:"token variable"},"range"),n("span",{class:"token punctuation"},"("),n("span",{class:"token variable"},"from"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"svg"),a(),n("span",{class:"token variable"},"height"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"640"'),a(),n("span",{class:"token variable"},"width"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"240"'),n("span",{class:"token punctuation"},">"),a(`
`),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"#"),n("span",{class:"token variable"},"each"),a(),n("span",{class:"token variable"},"range"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"180"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token number"},"120"),a(),n("span",{class:"token punctuation"},"+"),a(),n("span",{class:"token number"},"100"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token variable"},"cos"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token variable"},"it"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token number"},"0.02827"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"|"),a(),n("span",{class:"token variable"},"assignTo"),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token variable"},"x"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token number"},"320"),a(),n("span",{class:"token punctuation"},"+"),a(),n("span",{class:"token number"},"300"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token variable"},"sin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"+"),n("span",{class:"token variable"},"i"),n("span",{class:"token punctuation"},")"),a("  "),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token variable"},"it"),a(),n("span",{class:"token punctuation"},"*"),a(),n("span",{class:"token number"},"0.02827"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"|"),a(),n("span",{class:"token variable"},"assignTo"),n("span",{class:"token punctuation"},":"),a(),n("span",{class:"token variable"},"y"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"circle"),a(),n("span",{class:"token variable"},"cx"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"{{x}}"'),a(),n("span",{class:"token variable"},"cy"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"{{y}}"'),a(),n("span",{class:"token variable"},"r"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"{{it*0.1}}"'),a(),n("span",{class:"token variable"},"fill"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"rgb(0,{{it*1.4}},0)"'),a(),n("span",{class:"token variable"},"stroke"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"black"'),a(),n("span",{class:"token variable"},"stroke-width"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"1"'),n("span",{class:"token block keyword"},"/>"),a(`
`),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"each"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(` 
`),n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"svg"),n("span",{class:"token punctuation"},">"),a(`
`),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"each"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
`)])])])],-1),B=n("p",null,"With navigation activated we can quickly scroll through and explore different spirals. To save ourselves the effort of finding them again lets catalog our favorite picks and add them to a bookmarked list at the bottom of the page. Here are some interesting ones I've found for the home page:",-1),M=n("div",null,[n("div",{class:"language-hbs"},[n("pre",{"v-pre":""},[n("code",null,[n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"div"),n("span",{class:"token punctuation"},">"),a(`
  `),n("span",{class:"token variable"},"Jump"),a(),n("span",{class:"token variable"},"to"),a(),n("span",{class:"token variable"},"favorites"),n("span",{class:"token punctuation"},":"),a(` 
  `),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"#"),n("span",{class:"token variable"},"each"),a(),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"101"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"221"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"222"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"224"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"298"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"441"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"443"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"558"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"663"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"665"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"666"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"783"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"888"),n("span",{class:"token punctuation"},"]"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
    `),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"#"),n("span",{class:"token variable"},"if"),a(),n("span",{class:"token variable"},"index"),a(),n("span",{class:"token punctuation"},">"),a(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token punctuation"},"|"),a(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"if"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"#"),n("span",{class:"token variable"},"if"),a(),n("span",{class:"token variable"},"from"),a(),n("span",{class:"token punctuation"},"="),n("span",{class:"token punctuation"},"="),a(),n("span",{class:"token variable"},"it"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token variable"},"it"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token variable"},"else"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"a"),a(),n("span",{class:"token variable"},"href"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"?from={{it}}"'),n("span",{class:"token punctuation"},">"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token variable"},"it"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"a"),n("span",{class:"token punctuation"},">"),a(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"if"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"each"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"div"),n("span",{class:"token punctuation"},">"),a(`
`)])])])],-1),O=n("p",null,[a("and my top picks for the "),n("code",null,"multi.html"),a(" and "),n("code",null,"animated.html"),a(" pages:")],-1),J=n("div",null,[n("div",{class:"language-hbs"},[n("pre",{"v-pre":""},[n("code",null,[n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"div"),n("span",{class:"token punctuation"},">"),a(`
  `),n("span",{class:"token variable"},"Jump"),a(),n("span",{class:"token variable"},"to"),a(),n("span",{class:"token variable"},"favorites"),n("span",{class:"token punctuation"},":"),a(` 
  `),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"#"),n("span",{class:"token variable"},"each"),a(),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"217"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"225"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"229"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"441"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"449"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"661"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"669"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"673"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"885"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"1338"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"3326"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"3338"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"4330"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"8662"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"9330"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"11998"),n("span",{class:"token punctuation"},"]"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
    `),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"#"),n("span",{class:"token variable"},"if"),a(),n("span",{class:"token variable"},"index"),a(),n("span",{class:"token punctuation"},">"),a(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token punctuation"},"|"),a(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"if"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"#"),n("span",{class:"token variable"},"if"),a(),n("span",{class:"token variable"},"from"),a(),n("span",{class:"token punctuation"},"="),n("span",{class:"token punctuation"},"="),a(),n("span",{class:"token variable"},"it"),a(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token variable"},"it"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token variable"},"else"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token punctuation"},"<"),n("span",{class:"token variable"},"a"),a(),n("span",{class:"token variable"},"href"),n("span",{class:"token punctuation"},"="),n("span",{class:"token string"},'"?from={{it}}"'),n("span",{class:"token punctuation"},">"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token variable"},"it"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"a"),n("span",{class:"token punctuation"},">"),a(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"if"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"each"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},"/"),n("span",{class:"token variable"},"div"),n("span",{class:"token punctuation"},">"),a(`
`)])])])],-1),K=s(`<blockquote><p>If you&#39;ve found more interesting ones, <a href="https://github.com/mythz/spirals/issues" target="_blank" rel="noopener noreferrer">let me know</a>!</p></blockquote><p>Now it&#39;s just a matter of signing off our digital piece by giving it a name in your <code>app.settings</code>:</p><div class="language-"><pre><code>name Spirals
</code></pre></div><p>Which replaces the name in the <code>menu</code> and used in any shortcuts that are created, and with those finishing touches our App&#39;s journey into the rich colorful world of SVG is complete:</p><p><a href="http://spirals.web-app.io/animated" target="_blank" rel="noopener noreferrer"><img src="https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/app/spirals/spiral-nav.png" alt=""></a></p><h2 id="publishing-your-app" tabindex="-1">Publishing your App <a class="header-anchor" href="#publishing-your-app" aria-hidden="true">#</a></h2><p>To share our digital masterpiece with the world we just need to publish it in a GitHub repo, which I&#39;ve already done for my Spirals app at: <a href="https://github.com/mythz/spirals" target="_blank" rel="noopener noreferrer">github.com/mythz/spirals</a>.</p><p>Anyone will then be able to install your App by first downloading the <code>app</code> tool themselves (<a href="https://www.microsoft.com/net/download/" target="_blank" rel="noopener noreferrer">.NET 5.0 Required</a>):</p><div class="language-bash"><pre><code>$ dotnet tool <span class="token function">install</span> -g app
</code></pre></div><p>Then running <code>install</code> with the name of the <strong>repo</strong> and your GitHub <strong>User</strong> or <strong>Organization</strong> name in the <code>--source</code> argument:</p><div class="language-bash"><pre><code>$ app <span class="token function">install</span> spirals --source mythz
</code></pre></div><p>Which installs instantly thanks to the <code>7kb</code> .zip download that can then be opened by double-clicking on the generated <strong>Spirals</strong> Desktop Shortcut:</p><p><img src="https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/app/app-install-spirals.png" alt=""></p><h3 id="publishing-gist-apps" tabindex="-1">Publishing Gist Apps <a class="header-anchor" href="#publishing-gist-apps" aria-hidden="true">#</a></h3><p>As Sharp Apps are so lightweight a flexible deployment option is to deploy it to GitHub gists where they can be launched directly from HTML links using the <code>app://</code> URL scheme.</p><p>To create gists you&#39;ll need to generate a <a href="https://github.com/settings/tokens/new" target="_blank" rel="noopener noreferrer">GitHub Access Token</a> with <strong>gist</strong> scope and add it to your <code>GITHUB_TOKEN</code> Environment Variable (<a href="https://superuser.com/questions/949560/how-do-i-set-system-environment-variables-in-windows-10" target="_blank" rel="noopener noreferrer">win</a>, <a href="https://apple.stackexchange.com/q/356441/12255" target="_blank" rel="noopener noreferrer">mac</a>, <a href="https://www.digitalocean.com/community/tutorials/how-to-read-and-set-environmental-and-shell-variables-on-linux" target="_blank" rel="noopener noreferrer">linux</a>). <em>(alternative: use <code>-token</code> arg in each publish command)</em></p><p>Before publishing our App, our <strong>app.settings</strong> looks something like:</p><div class="language-"><pre><code>debug true
name Spirals
CefConfig { width:1100, height:900 }
</code></pre></div><p>To make your App listed in our Global App Directory, include the following metadata about your App:</p><div class="language-"><pre><code>appName     &lt;app alias&gt;    # required: alpha-numeric snake-case characters only, 30 chars max
description &lt;app summary&gt;  # required: 20-150 chars
tags        &lt;app tags&gt;     # optional: space delimited, alpha-numeric snake-case, 3 tags max
</code></pre></div><p>The <code>appName</code> is the globally unique short alias you want your App to be launched as, e.g:</p><div class="language-"><pre><code>app://my-alias
</code></pre></div><div class="language-bash"><pre><code>$ app <span class="token function">open</span> my-alias
</code></pre></div><p>If your app.settings contains the app metadata above, publishing the app will publish your App to a Gist &amp; register your App&#39;s alias to the Global App Directory.</p><p>Then to publish your App to a new Gist, run:</p><div class="language-bash"><pre><code>$ app publish
</code></pre></div><p>Which will publish your app to a new gist:</p><div class="language-bash"><pre><code>published to: https://gist.github.com/gistlyn/4e06df1f1b9099526a7c97721aa7f69c

Run published App:

    app <span class="token function">open</span> spirals
</code></pre></div><p>To update your Gist run publish again:</p><div class="language-bash"><pre><code>$ app publish
</code></pre></div><p>When your App is published the first time, the created gist URL will be saved in a local <code>.publish</code> text file &amp; used for subsequent App publishes.</p><p>After it&#39;s published anyone will now be able to run your App locally with the global alias (if specified):</p><div class="language-"><pre><code>app://spirals
</code></pre></div><div class="language-bash"><pre><code>$ app <span class="token function">open</span> spirals
</code></pre></div><p>The Gist Id:</p><div class="language-"><pre><code>app://4e06df1f1b9099526a7c97721aa7f69c
</code></pre></div><div class="language-bash"><pre><code>$ app <span class="token function">open</span> 4e06df1f1b9099526a7c97721aa7f69c
</code></pre></div><p>Or Gist URL:</p><div class="language-bash"><pre><code>$ app <span class="token function">open</span> https://gist.github.com/gistlyn/4e06df1f1b9099526a7c97721aa7f69c
</code></pre></div><p>Users that are not on Windows can use the <code>x</code> dotnet tool instead to launch your App in their preferred browser:</p><div class="language-bash"><pre><code>$ x <span class="token function">open</span> spirals
</code></pre></div><p>If preferred, Windows users can also launch your Gist Desktop App in their preferred browser (i.e. instead of a Chromium Desktop Shell) with the <code>xapp://</code> URL Scheme:</p><div class="language-"><pre><code>xapp://spirals
</code></pre></div><h3 id="vue-desktop-template" tabindex="-1">Vue Desktop Template <a class="header-anchor" href="#vue-desktop-template" aria-hidden="true">#</a></h3><p>To simplify the development UX we&#39;ve created the <a href="https://github.com/NetCoreTemplates/vue-desktop" target="_blank" rel="noopener noreferrer">vue-desktop</a> .NET Core Desktop Project Template with integrated scripts for building, bundling and publishing Windows Desktop Apps:</p><blockquote><p>YouTube <a href="https://youtu.be/kRnQSWdqH6U" target="_blank" rel="noopener noreferrer">youtu.be/kRnQSWdqH6U</a></p></blockquote>`,46),Q=n("iframe",{width:"896",height:"525",src:"https://www.youtube.com/embed/kRnQSWdqH6U",frameborder:"0",allow:"autoplay; encrypted-media",allowfullscreen:""},null,-1),Y=s(`<p>The Vue Desktop Template allows for multiple deployment options, including:</p><ol><li>Publish to a Gist</li><li>Publish to a GitHub Repo</li><li>Publish to .zip and run with <code>app</code> tool</li><li>Publish to self-contained .zip (bundled with app tool)</li></ol><p>Our recommendation is to publish Sharp Desktop Apps to Gists (as done with <a href="https://docs.servicestack.net/studio" target="_blank" rel="noopener noreferrer">ServiceStack Studio</a>) so they can be launched with the Custom URL Scheme:</p><div class="language-"><pre><code>app://vuedesktop
</code></pre></div><p>Where it can be launched from a HTML <code>&lt;a/&gt;</code> link in a web page, directly in any <strong>browsers URL bar</strong> or <strong>File Explorer</strong>.</p><p>Desktop Apps published to GitHub repos can be opened using <code>&lt;user&gt;/&lt;repo&gt;</code>, e.g:</p><div class="language-"><pre><code>app://mythz/vuedesktop
</code></pre></div><p>Where it downloads &amp; extracts the latest Release <code>.zip</code> archive (or master if none), before running the app, so can take a little longer to launch for small Apps.</p><p>All apps run the latest version by default so it&#39;s always up-to-date, but you can speed up App launch times by running the last installed app using the <code>app:</code> Custom URL Scheme:</p><div class="language-bash"><pre><code>app:vuedesktop
</code></pre></div><p>For Gist deployed Apps, it will run the last downloaded app or download &amp; run the latest App gist if it&#39;s the first time it&#39;s run.</p><p>For GitHub repo Apps, you can download and install them locally with:</p><div class="language-bash"><pre><code>$ app <span class="token function">install</span> mythz/vuedesktop
</code></pre></div><p>Where the downloaded version can be <strong>run</strong> using its <code>&lt;repo&gt;</code> name, e.g:</p><div class="language-"><pre><code>app:vuedesktop
</code></pre></div><p>Both Gist and Desktop Apps can be uninstalled using <code>app uninstall</code>, e.g:</p><div class="language-bash"><pre><code>$ app uninstall vuedesktop
</code></pre></div><p>To view all installed Sharp Apps, run:</p><div class="language-bash"><pre><code>$ app uninstall
</code></pre></div><h4 id="creating-windows-shortcuts" tabindex="-1">Creating Windows Shortcuts <a class="header-anchor" href="#creating-windows-shortcuts" aria-hidden="true">#</a></h4><p>The <code>app:</code> URL Scheme is a convenient way to launch Apps if you already have a <strong>Browser</strong> or Windows <strong>File Explorer</strong> already open where you can quickly launch Apps by typing <code>CTRL+L</code> shortcut to go to the Command Bar then type <code>app://&lt;name&gt;</code> to launch your App.</p><p>Although many users will prefer the familiar Windows Shortcut which they can create by going to the App&#39;s folder and running <code>app shortcut</code></p><div class="language-bash"><pre><code>$ <span class="token builtin class-name">cd</span> %USERPROFILE%<span class="token punctuation">\\</span>.sharp-apps<span class="token punctuation">\\</span>vuedesktop
$ app shortcut
</code></pre></div><p>This will create a Windows Shortcut for the App which can be copied to the Desktop or pinned to the Taskbar for easy access.</p><h3 id="publishing-gist-apps-1" tabindex="-1">Publishing Gist Apps <a class="header-anchor" href="#publishing-gist-apps-1" aria-hidden="true">#</a></h3><p>Publishing your App to a gist is our preferred option as you can use GitHub to host your App, built-in auto-updates with every each launch and if you publish to the Global App Registry users can download &amp; install your App with a unique UX-friendly name like <code>app://vuedesktop</code>.</p><p>To create gists you&#39;ll need to generate a <a href="https://github.com/settings/tokens/new" target="_blank" rel="noopener noreferrer">GitHub Access Token</a> with <strong>gist</strong> scope and add it to your <code>GITHUB_TOKEN</code> Environment Variable (<a href="https://superuser.com/questions/949560/how-do-i-set-system-environment-variables-in-windows-10" target="_blank" rel="noopener noreferrer">win</a>, <a href="https://apple.stackexchange.com/q/356441/12255" target="_blank" rel="noopener noreferrer">mac</a>, <a href="https://www.digitalocean.com/community/tutorials/how-to-read-and-set-environmental-and-shell-variables-on-linux" target="_blank" rel="noopener noreferrer">linux</a>). <em>(alternative: use <code>-token</code> arg in each publish command)</em></p><p>Before publishing your App, its <strong>app.settings</strong> looks something like:</p><div class="language-"><pre><code>debug true
name vuedesktop
CefConfig { width:1100, height:900 }
</code></pre></div><h4 id="publish-to-the-global-app-registry" tabindex="-1">Publish to the Global App Registry <a class="header-anchor" href="#publish-to-the-global-app-registry" aria-hidden="true">#</a></h4><p>To maximize reach and accessibility of your App you can publish it to our <a href="https://gist.github.com/gistlyn/802daba52b6fe6e2ed1430348dc596cb" target="_blank" rel="noopener noreferrer">Global App Registry</a> by including the following metadata about your App:</p><div class="language-"><pre><code>appName     &lt;app alias&gt;    # required: alpha-numeric snake-case characters only, 30 chars max
description &lt;app summary&gt;  # required: 20-150 chars
tags        &lt;app tags&gt;     # optional: space delimited, alpha-numeric snake-case, 3 tags max
</code></pre></div><p>The <code>appName</code> is the globally unique short alias you want your App to be launched as, e.g:</p><div class="language-"><pre><code>app://my-alias
</code></pre></div><div class="language-bash"><pre><code>$ app <span class="token function">open</span> my-alias
</code></pre></div><p>If your app.settings contains the app metadata above, publishing the app will publish your App to a Gist &amp; register your App&#39;s alias to the Global App Directory.</p><p>Now you can build, bundle and publish your App to a gist with its <code>publish-app</code> npm script:</p><div class="language-bash"><pre><code>$ <span class="token function">npm</span> run publish-app
</code></pre></div><p>That returns the gist URL your app was published to:</p><div class="language-"><pre><code>published to: https://gist.github.com/gistlyn/48b2dcf9bccacab62ec9d8a073d5edb8
</code></pre></div><p>Which can now be opened via an <a href="https://sharpscript.net/sharp-apps/app-index#app-url-schemes" target="_blank" rel="noopener noreferrer">URL scheme</a>:</p><h4><a href="app://48b2dcf9bccacab62ec9d8a073d5edb8">app://48b2dcf9bccacab62ec9d8a073d5edb8</a></h4><p>Or via the command line:</p><div class="language-bash"><pre><code>$ app <span class="token function">open</span> 48b2dcf9bccacab62ec9d8a073d5edb8
</code></pre></div><p>When your App is published the first time, the created gist URL will be saved in a local <code>.publish</code> text file &amp; used for subsequent App publishes.</p><h4 id="local-aliases" tabindex="-1">Local Aliases <a class="header-anchor" href="#local-aliases" aria-hidden="true">#</a></h4><p>If the Gist App isn&#39;t published to the Global Registry, users can create their own UX-friendly local alias with:</p><div class="language-bash"><pre><code>$ app <span class="token builtin class-name">alias</span> my-alias 48b2dcf9bccacab62ec9d8a073d5edb8
</code></pre></div><p>Where they&#39;ll be able to use their alias instead of the Gist Id:</p><div class="language-"><pre><code>app://my-alias
</code></pre></div><div class="language-bash"><pre><code>$ app <span class="token function">open</span> my-alias
</code></pre></div><h3 id="publishing-to-a-github-repo" tabindex="-1">Publishing to a GitHub Repo <a class="header-anchor" href="#publishing-to-a-github-repo" aria-hidden="true">#</a></h3><p>The same <code>/dist</code> folder that&#39;s published to Gists can also be published to a GitHub Repo like <a href="https://github.com/mythz/vuedesktop" target="_blank" rel="noopener noreferrer">github.com/mythz/vuedesktop</a> which can be launched with the <code>&lt;user&gt;/&lt;repo&gt;</code> URL Scheme, e.g:</p><h3 id="app-mythz-vuedesktop" tabindex="-1"><a href="app://mythz/vuedesktop">app://mythz/vuedesktop</a> <a class="header-anchor" href="#app-mythz-vuedesktop" aria-hidden="true">#</a></h3><blockquote><p>Need to copy + paste URL in browser as GitHub markdown doesn&#39;t allow custom URL links</p></blockquote><p>Or launched from the command-line:</p><div class="language-bash"><pre><code>$ app <span class="token function">open</span> mythz/vuedesktop
</code></pre></div><p>Users can also download and run a local copy launched with a Windows Shortcut with this 1-liner:</p><div class="language-bash"><pre><code>$ app download mythz/vuedesktop <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> vuedesktop <span class="token operator">&amp;&amp;</span> app shortcut
</code></pre></div><p>This will download this repo and create a <strong>Vue Desktop</strong> Windows Shortcut you can use to launch this App:</p><p><img src="https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/app/vue-desktop/vuedesktop-dist.png" alt=""></p><h3 id="publish-to-zip" tabindex="-1">Publish to .zip <a class="header-anchor" href="#publish-to-zip" aria-hidden="true">#</a></h3><p>The <code>/dist</code> folder can also be zipped and distributed that way, by running:</p><div class="language-bash"><pre><code>$ <span class="token function">npm</span> run publish-zip
</code></pre></div><p>In which case it can be extracted and launched by running the <code>app</code> command in the App&#39;s folder:</p><div class="language-bash"><pre><code>$ <span class="token builtin class-name">cd</span> AppDir
$ app
</code></pre></div><p>But if you&#39;re going to run from a local folder (where <code>app://</code> isn&#39;t available), you&#39;ll likely want to create a Windows Shortcut:</p><div class="language-bash"><pre><code>$ app shortcut
</code></pre></div><p>That Users can copy to their Desktop or pin to their Taskbar for easy access.</p><h3 id="publishing-self-encapsulated-zip" tabindex="-1">Publishing self-encapsulated .zip <a class="header-anchor" href="#publishing-self-encapsulated-zip" aria-hidden="true">#</a></h3><p>By having the <code>app</code> tool installed, users benefit from ultra small (e.g. <strong>15kb</strong>) downloads whose tiny footprints allows for auto-updating with each App launch so they have access to new features as soon as they&#39;re available. Users will also be able to update to the Chromium version used to run all their Sharp Desktop Apps by updating the <code>app</code> tool:</p><div class="language-bash"><pre><code>$ dotnet tool update -g app
</code></pre></div><p>But if preferred, App&#39;s can also bundled and distributed with the <code>app</code> tool so they can be run without needing the <code>app</code> tool installed and distributed Apps are pinned to a specific Chromium version.</p><p>You can create self-encapsulated bundles with the <code>publish-exe</code> script:</p><div class="language-bash"><pre><code>$ <span class="token function">npm</span> run publish-exe
</code></pre></div><p>This will generate 2 files:</p><p><img src="https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/app/vue-desktop/vuedesktop-publish-exe.png" alt=""></p><p>The <code>*.zip</code> contains both the <code>/dist</code> of your App and the <code>app</code> Chromium runtime as well as a convenience <a href="https://github.com/NetCoreTemplates/vue-desktop/blob/master/scripts/install.ps1" target="_blank" rel="noopener noreferrer">install.ps1</a> script that users can use to effortlessly install the App with the <code>Win+R</code> shortcut to bring up Windows <strong>Run</strong> dialog then pasting this powershell cmd-let with the URL of your <code>install.ps1</code> script:</p><div class="language-bash"><pre><code>powershell Set-ExecutionPolicy Bypass -Scope Process -Force<span class="token punctuation">;</span> iex <span class="token variable"><span class="token punctuation">((</span>New<span class="token operator">-</span>Object System.Net.WebClient<span class="token punctuation">)</span>.DownloadString<span class="token punctuation">(</span>&#39;https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>org.example<span class="token operator">/</span>install.ps1&#39;<span class="token punctuation">))</span></span>
</code></pre></div><p><img src="https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/app/vue-desktop/vuedesktop-run-install.png" alt=""></p><p>Here&#39;s a copy of <code>install.ps1</code> which downloads and extracts the App to the Users LocalApp Data and copies the Shortcut to the Desktop. Before publishing you&#39;ll need to update <code>$zipUrl</code> to point to the URL with your <code>*.zip</code>:</p><div class="language-bash"><pre><code><span class="token variable">$zipUrl</span>  <span class="token operator">=</span> <span class="token string">&quot;https://org.example/MyApp.zip&quot;</span>
<span class="token variable">$appName</span> <span class="token operator">=</span> <span class="token string">&quot;MyApp&quot;</span>

<span class="token variable">$TempFile</span> <span class="token operator">=</span> New-TemporaryFile
Invoke-WebRequest <span class="token variable">$zipUrl</span> -OutFile <span class="token variable">$TempFile</span>

<span class="token variable">$Zip</span> <span class="token operator">=</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span>Join-Path $TempFile.Directory.FullName $TempFile.BaseName<span class="token variable">)</span></span>.zip&quot;</span>
Move-Item <span class="token variable">$TempFile</span> <span class="token variable">$Zip</span>

Remove-Item <span class="token variable"><span class="token variable">$(</span>Join-Path $TempFile.Directory.FullName $TempFile.BaseName<span class="token variable">)</span></span> -Recurse -ErrorAction Ignore
Expand-Archive -Force <span class="token variable">$Zip</span> <span class="token variable"><span class="token variable">$(</span>Join-Path $TempFile.Directory.FullName $TempFile.BaseName<span class="token variable">)</span></span>

<span class="token variable">$AppDir</span> <span class="token operator">=</span> <span class="token variable"><span class="token variable">$(</span>Get-ChildItem -Path <span class="token punctuation">$(</span>Join-Path $TempFile.Directory.FullName $TempFile.BaseName<span class="token punctuation">)</span> <span class="token operator">|</span> Select-Object -First <span class="token number">1</span><span class="token variable">)</span></span>

Remove-Item <span class="token string">&quot;<span class="token variable">$env</span>:LOCALAPPDATA\\<span class="token variable">$appName</span>&quot;</span> -Recurse -ErrorAction Ignore
Move-Item <span class="token variable">$AppDir</span>.FullName <span class="token string">&quot;<span class="token variable">$env</span>:LOCALAPPDATA\\<span class="token variable">$appName</span>&quot;</span>

<span class="token comment"># Copy Shortcut to Desktop</span>
Copy-Item <span class="token variable">$env</span>:LOCALAPPDATA<span class="token punctuation">\\</span><span class="token variable">$appName</span><span class="token punctuation">\\</span>dist<span class="token punctuation">\\</span>*.lnk -Destination <span class="token variable">$env</span>:USERPROFILE<span class="token punctuation">\\</span>Desktop 

<span class="token comment"># Clean up</span>
Remove-Item <span class="token variable">$Zip</span> -Recurse -ErrorAction Ignore
Remove-Item <span class="token variable"><span class="token variable">$(</span>Join-Path $TempFile.Directory.FullName $TempFile.BaseName<span class="token variable">)</span></span> -Recurse -ErrorAction Ignore
</code></pre></div><p>Here&#39;s an example of an app we have published to our servers:</p><div class="language-bash"><pre><code>powershell Set-ExecutionPolicy Bypass -Scope Process -Force<span class="token punctuation">;</span> iex <span class="token variable"><span class="token punctuation">((</span>New<span class="token operator">-</span>Object System.Net.WebClient<span class="token punctuation">)</span>.DownloadString<span class="token punctuation">(</span>&#39;https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>files.sharpscript.net<span class="token operator">/</span>VueDesktop<span class="token operator">/</span>install.ps1&#39;<span class="token punctuation">))</span></span>
</code></pre></div>`,84),X=[c,i,l,r,u,k,d,h,g,b,m,v,f,w,y,_,A,S,T,x,C,E,N,W,D,I,R,P,$,q,G,L,U,z,F,V,H,j,B,M,O,J,K,Q,Y];function Z(nn,an,sn,en,tn,on){return o(),t("div",null,X)}var ln=e(p,[["render",Z]]);export{cn as __pageData,ln as default};
