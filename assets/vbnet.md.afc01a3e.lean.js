import{_ as e,c as t,k as a,a as n,o as s}from"./app.14440598.js";const m='{"title":"VB.NET Resources","description":"","frontmatter":{"slug":"vbnet","title":"VB.NET Resources"},"headers":[{"level":3,"title":"VB .NET Core Project","slug":"vb-net-core-project"},{"level":3,"title":"VB .NET Core Auth + File Uploads Example","slug":"vb-net-core-auth-file-uploads-example"},{"level":3,"title":"Plain static HTML Pages + JavaScript UI","slug":"plain-static-html-pages-javascript-ui"},{"level":3,"title":"JWT Auth","slug":"jwt-auth"},{"level":3,"title":"TypeScript Generated DTOs","slug":"typescript-generated-dtos"}],"relativePath":"vbnet.md","lastUpdated":1634495308454}',r={},o=n(`__VP_STATIC_START__<p>There are some nostalgic developers who prefer not to leave their <a href="http://VB.NET" target="_blank" rel="noopener noreferrer">VB.NET</a> days behind them, luckily they blog so other <a href="http://VB.NET" target="_blank" rel="noopener noreferrer">VB.NET</a> developers can easily follow in their footsteps:</p><h3 id="vb-net-core-project" tabindex="-1">VB .NET Core Project <a class="header-anchor" href="#vb-net-core-project" aria-hidden="true">#</a></h3><p>You can create a new VB .NET Core project in a new empty directory using the <a href="https://docs.servicestack.net/dotnet-tool" target="_blank" rel="noopener noreferrer">x dotnet tool</a> with:</p><div class="language-bash"><pre><code>$ dotnet tool <span class="token function">install</span> --global x 
$ <span class="token function">mkdir</span> ProjectName <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> ProjectName
$ x mix init-vb
$ dotnet run
</code></pre></div><p>Which will download the <a href="https://gist.github.com/gistlyn/88f2792fc4820de7dc4e68c0c5d76126" target="_blank" rel="noopener noreferrer">init-vb Gist</a> to your local directory where you can use its dep-free <a href="https://gist.github.com/gistlyn/88f2792fc4820de7dc4e68c0c5d76126#file-wwwroot-index-html" target="_blank" rel="noopener noreferrer">/index.html</a> and its <code>JsonServiceClient</code> to call its <strong>/hello</strong> API:</p><p><img src="https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/release-notes/v5.9/init.png" alt=""></p><h3 id="vb-net-core-auth-file-uploads-example" tabindex="-1">VB .NET Core Auth + File Uploads Example <a class="header-anchor" href="#vb-net-core-auth-file-uploads-example" aria-hidden="true">#</a></h3><p>The <a href="https://github.com/NetCoreApps/vb-auth" target="_blank" rel="noopener noreferrer">vb-auth</a> <a href="http://VB.NET" target="_blank" rel="noopener noreferrer">VB.NET</a> .NET Core project created with <a href="https://docs.servicestack.net/dotnet-tool" target="_blank" rel="noopener noreferrer">x dotnet tool</a>:</p><div class="language-bash"><pre><code>$ <span class="token function">mkdir</span> ProjectName <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> ProjectName
$ x mix init-vb
</code></pre></div><p>Configured with <a href="https://github.com/ServiceStack/ServiceStack.OrmLite" target="_blank" rel="noopener noreferrer">OrmLite + SQL Server</a>, <a href="https://docs.servicestack.net/authentication-and-authorization" target="_blank" rel="noopener noreferrer">ServiceStack Auth</a> including Login &amp; Registration UIs &amp; integrated <a href="https://docs.servicestack.net/jwt-authprovider" target="_blank" rel="noopener noreferrer">JWT Auth</a> showing how to manage file uploads for authenticated users.</p><p><img src="https://raw.githubusercontent.com/NetCoreApps/vb-auth/master/screenshot.png" alt=""></p><h3 id="plain-static-html-pages-javascript-ui" tabindex="-1">Plain static HTML Pages + JavaScript UI <a class="header-anchor" href="#plain-static-html-pages-javascript-ui" aria-hidden="true">#</a></h3><p>No client or server UI Frameworks or external dependencies were used in this example which uses only Vanilla JS and functionality in the <a href="https://docs.servicestack.net/servicestack-client-umd" target="_blank" rel="noopener noreferrer">Embedded UMD @servicestack/client</a>.</p><p>E.g. the client HTML UI &amp; Backend Service implementation for the Authenticated HTTP File Upload Management functionality is in:</p><ul><li><a href="https://github.com/NetCoreApps/vb-auth/blob/master/wwwroot/files.html" target="_blank" rel="noopener noreferrer">/wwwroot/files.html</a> - static HTML UI</li><li><a href="https://github.com/NetCoreApps/vb-auth/blob/master/ServiceInterface/UploadServices.vb" target="_blank" rel="noopener noreferrer">/ServiceInterface/UploadServices.vb</a> - back-end Service</li></ul><h3 id="jwt-auth" tabindex="-1">JWT Auth <a class="header-anchor" href="#jwt-auth" aria-hidden="true">#</a></h3><p>JWT Authentication is <a href="https://docs.servicestack.net/jwt-authprovider#switching-existing-sites-to-jwt" target="_blank" rel="noopener noreferrer">enabled at authentication</a> where the <code>UseTokenCookie</code> parameter directs ServiceStack to capture the Authenticated Session in a stateless JWT Session Cookie:</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/auth/credentials<span class="token punctuation">&quot;</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>post<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hidden<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UseTokenCookie<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    ...
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h3 id="typescript-generated-dtos" tabindex="-1">TypeScript Generated DTOs <a class="header-anchor" href="#typescript-generated-dtos" aria-hidden="true">#</a></h3><p><a href="https://docs.servicestack.net/typescript-add-servicestack-reference" target="_blank" rel="noopener noreferrer">TypeScript Add ServiceStack Reference</a> were used to generate the Typed DTOs which can be re-generated with:</p><div class="language-bash"><pre><code>$ <span class="token builtin class-name">cd</span> wwwroot
$ x ts <span class="token operator">&amp;&amp;</span> tsc dtos.ts
</code></pre></div><h1 id="community-resources" tabindex="-1">Community Resources <a class="header-anchor" href="#community-resources" aria-hidden="true">#</a></h1>__VP_STATIC_END__`,22);function c(p,i,l,h,u,d){return s(),t("div",null,[o,a(` Commenting out as all links are crusty and no longer working.
  - [How to set up a VB.Net REST service on ServiceStack](http://fafx.wordpress.com/2013/02/09/how-to-set-up-a-vb-net-rest-service-on-servicestack/) by [The FAfx Project](http://fafx.wordpress.com/)
  - [Servicestack, VB.Net and some easyhttp](http://blogs.lessthandot.com/index.php/DesktopDev/MSTech/VBNET/servicestack-vb-net-and-some) by [@chrissie1](https://twitter.com/chrissie1)
  - [Redis and VB.Net](http://blogs.lessthandot.com/index.php/DataMgmt/DBProgramming/redis-and-vb-net) by [@chrissie1](https://twitter.com/chrissie1)

`)])}var g=e(r,[["render",c]]);export{m as __pageData,g as default};
